{"mappings":"AAGO,MAAMA,EAAO,IAClBC,KAAKC,MAAMC,SAAS,IAAMC,KAAKC,SAASF,SAAS,IAAIG,UAAU,GAEpDC,EAAuBC,KAC/BA,EAAuBC,QAqBfC,EAAiBF,GACV,iBAAXA,IAAwBG,MAAMC,QAAQJ,GAmClCK,EAAeC,IAC1B,MAAMC,GAAOD,EAAKE,oBACZC,EAAMF,GAAO,EAAI,IAAM,IACvBG,EAAOC,IAAiBA,EAAM,GAAK,IAAM,IAAMA,EAErD,OACEL,EAAKM,cACL,IACAF,EAAIJ,EAAKO,WAAa,GACtB,IACAH,EAAIJ,EAAKQ,WACT,IACAJ,EAAIJ,EAAKS,YACT,IACAL,EAAIJ,EAAKU,cACT,IACAN,EAAIJ,EAAKW,cACTR,EACAC,EAAId,KAAKsB,MAAMtB,KAAKuB,IAAIZ,GAAO,KAC/B,IACAG,EAAId,KAAKuB,IAAIZ,GAAO,KCpFjB,IAAIa,GACV,SAAUA,GACPA,EAAUA,EAAmB,QAAI,GAAK,UACtCA,EAAUA,EAAgB,KAAI,GAAK,OAFtC,CAGEA,IAAcA,EAAY,KCFtB,MAAMC,EAAOC,OAAOC,KACdC,EAA4BC,GAAkD,mBAAxBA,EAAeC,KAErEC,EAA0BF,IADD,CAACA,GAA2C,WAAxBA,EAAeC,KACdE,CAAuBH,KAC7ED,EAAyBC,GAEjBI,EAAcC,GAASA,EAAKC,WAAaX,EAAUY,KACnDC,EAAc,CAACH,EAAMI,KAC9B,IAAIC,EACCD,IAGyB,QAA7BC,EAAKL,EAAKM,qBAAkC,IAAPD,GAAyBA,EAAGE,aAAaH,EAASJ,KCb5F,IAAIQ,EACAC,EAIJ,MAAMC,EAAQ,CACVC,SAAU,IAAIC,IACdC,UAAW,IAAID,KAoCNE,EAAiB,CAACnB,EAAgBoB,KAC3CP,EAAmBb,EAAeC,KAClCa,EAAqBM,EACrB,MAAMC,EAAcN,EAAMG,UAAUI,IAAItB,EAAeC,MAEvDc,EAAMG,UAAUK,OAAOvB,EAAeC,MACtCD,EAAewB,OAASxB,EAAeC,KAAKD,EAAeyB,OAC3D,MAAMC,EAAwBX,EAAMG,UAAUI,IAAIT,GAClD,OAAKa,GAA0D,IAAjCA,EAAsBC,QAGpDD,EAAsBE,SAAQ,CAACC,EAAYC,KACvC,MAAMC,EAAaV,MAAAA,OAAiD,EAASA,EAAYS,GACrFC,GDzCe,EAACC,EAAMC,KAC9B,GAAID,EAAKL,SAAWM,EAAKN,OACrB,OAAO,EAEX,IAAK,IAAIO,EAAI,EAAGA,EAAIF,EAAKL,OAAQO,GAAK,EAClC,GAAIF,EAAKE,KAAOD,EAAKC,GACjB,OAAO,EAGf,OAAO,GCiCCC,CAAYJ,EAAWK,aAAcP,EAAWO,cAChDP,EAAWQ,gBAAkBN,EAAWM,gBAGxCR,EAAWQ,gBAAkBR,EAAWS,cAGzCtC,EAAewB,QAZXxB,EAAewB,QC/CjBe,EAAeC,IALe,CAACA,SACE,IAA/BA,EAAOC,sBACdD,EAAOC,oBAAsB,CAACH,EAAUI,IAAYC,WAAWL,EAAU,KAI7EM,CAA4BJ,ICHhC,IAAIK,EACOC,GAAAA,EAGRD,IAAsBA,EAAoB,KAFhB,MAAI,QAC7BC,EAA6B,UAAI,YAErC,MAAMC,EAAqB,IAAIC,IAAInD,OAAOoD,OAAOJ,IAC3CK,EAAc,IAAIjC,IAAI,CACxB,CAAC,UAAW,SACZ,CAAC,UAAW,WAMT,SAASkC,EAAqBlD,EAAMwB,KAAU2B,GACjD,MAAuB,mBAATnD,EACR,CApBVA,KAqBYA,EACAwB,MAAOA,GAAS,GAChBD,OAAQ,MAEV,CAzBVvB,KA0BYA,EACAwB,MAAO5B,OAAOwD,OAAOxD,OAAOwD,OAAO,GAAI5B,GAAQ,CAAEjD,QAASyB,GAAQ,QAClEmD,SAAUA,EAASE,KAAKC,GAA2B,iBAAVA,EAdN,CAC3CtD,KAAM,SAfVuD,MA4BqGD,GAASA,KAGvG,MAAME,EAAIN,EACXO,EAA6B,CAACC,EAASC,EAAiBC,EAAWC,KACjED,IAAcC,IAGdD,GACAF,EAAQI,oBAAoBH,EAAiBC,GAE7CC,GACAH,EAAQK,iBAAiBJ,EAAiBE,KAG5CG,EAAiB,CAACN,EAASO,EAAUzD,KACvC,GAA4E,YAAvEyD,MAAAA,OAA2C,EAASA,EAASjE,OAA2F,YAApEQ,MAAAA,OAAyC,EAASA,EAAQR,MAC/I,OAEJ,MAAMkE,EAAeD,EAAWtE,EAAKsE,EAASzC,OAAS,GACjD2C,EAAc3D,EAAUb,EAAKa,EAAQgB,OAAS,GACpD,IAAK,MAAM4C,KAAQD,EAAYE,OAAOH,GAAe,CACjD,MAAMN,EAAYK,MAAAA,OAA2C,EAASA,EAASzC,MAAM4C,GAC/EP,EAAWrD,MAAAA,OAAyC,EAASA,EAAQgB,MAAM4C,GAGjF,GAAItB,EAAmBwB,IAAIF,GAIvBV,EAAQU,QAAqBG,IAAbV,EAAyB,GAAKA,OAGlD,GAAID,IAAcC,EAGlB,GAAa,YAATO,GAA+B,YAATA,EAOF,kBAAbP,EACHA,EACAH,EAAQc,aAAaJ,EAAM,IAG3BV,EAAQe,gBAAgBL,QAGH,IAAbP,EACZH,EAAQe,gBAAgBL,GAGxBV,EAAQc,aAAaJ,EAAMM,OAAOb,QAnBtC,CACI,MAAMF,EAAkBV,EAAY5B,IAAI+C,GACpCT,GACAF,EAA2BC,EAASC,EAAiBM,MAAAA,OAA2C,EAASA,EAASzC,MAAM4C,GAAO5D,MAAAA,OAAyC,EAASA,EAAQgB,MAAM4C,OAoBzMO,EAAiB5E,IACnB,IAAKA,EACD,OAAO,KAEX,GAA4B,WAAxBA,EAAeC,KACf,OAAO4E,EAAYC,eAAe9E,EAAewD,OAErD,GAAIzD,EAAyBC,GACzB,OAAO4E,EAAczD,EAAenB,EAAgB+E,IAExD,MAjGJ3B,SAiGYA,EAAUnD,KAAMzB,GAAYwB,EAC9BgF,EAAUH,EAAYI,cAAczG,GAC1CyF,EAAee,EAAS,KAAMhF,GAC9B,IAAK,MAAMuD,KAASH,EAAU,CAC1B,IAAKG,EACD,SAEJ,MAAM2B,EAAkBN,EAAcrB,GACjC2B,GAGLF,EAAQG,YAAYD,GAExB,OAAOF,GAELI,EAAmB,CAACzB,EAASO,EAAUzD,KACrCyD,EAASV,QAAU/C,EAAQ+C,QAGbG,EH7GsBrD,WAAaX,EAAU0F,QG8G3D7E,EAAYmD,EAASiB,EAAcnE,IAE9BL,EAAWuD,IAChBA,EAAQ2B,YAAY,EAAG3B,EAAQhC,OAAQlB,EAAQ+C,SAG1C+B,EAAY,CAAC5B,EAASO,EAAUzD,KACzC,GAAKA,EAAL,CAIA,IAAKyD,GAAYA,EAASjE,OAASQ,EAAQR,KAMvC,OALIiE,GAAYnE,EAAyBmE,IF9DjB,CAAClE,IAC7B,MAAMwF,EAAmBzE,EAAMG,UAAUI,IAAItB,EAAeC,MAC5D,IAAKuF,EACD,OAAOxF,EAAewB,OAE1B,IAAK,MAxETa,gBAwEiBA,KAAqBmD,EAC1BnD,GACAA,IAGRtB,EAAMG,UAAUK,OAAOvB,EAAeC,MACtCc,EAAMC,SAASO,OAAOvB,EAAeC,MAC9BD,EAAewB,QEoDdiE,CAAiBvB,QAErB1D,EAAYmD,EAASiB,EAAcnE,IAMvC,GAAsB,WAAlByD,EAASjE,MAAsC,WAAjBQ,EAAQR,MAI1C,GAAIG,EAAWuD,GACXnD,EAAYmD,EAASiB,EAAcnE,SAGvC,GAAIV,EAAyBmE,IAAanE,EAAyBU,GAC/D8E,EAAU5B,EAASO,EAAS1C,OAAQL,EAAeV,EAASsE,SAGhE,GAAI7E,EAAuBgE,IAAahE,EAAuBO,GAAU,CACrEwD,EAAeN,EAASO,EAAUzD,GAClC,MAAMiF,EAAkBhH,MAAMiH,KAAKhC,EAAQiC,YAAYC,QAAQxF,GAASA,EAAKC,WAAaX,EAAU0F,SAAWhF,EAAKC,WAAaX,EAAUY,OAC3IE,EAAQ2C,SAASxB,SAAQ,CAACkE,EAAchE,KACpC,MAAMiE,EAAeL,EAAgB5D,GACrC,GAAIiE,EACAR,EAAUQ,EAAc7B,EAASd,SAAStB,GAAQgE,QAEjD,GAAIA,EAAc,CACnB,MAAMzF,EAAOuE,EAAckB,GACvBzF,GACAsD,EAAQwB,YAAY9E,aAtBhC+E,EAAiBzB,EAASO,EAAUzD,QAfpCkD,EAAQqC,UA2ChB,IACIjB,EACAF,EAFAoB,EAAqB9C,EAAqB,OAG1C+C,GAAa,EAEV,MAAMC,EAAS,CAACC,EAAWC,KAG9BxB,EAAcwB,EAAQC,eACjBJ,GAAcrB,EAAY0B,cAC3BhE,EAAYsC,EAAY0B,aACxBL,GAAa,GAEjB,MAAMlG,EAAiBmD,EAAqB,MAAO,KAAMiD,GAMzDrB,EAAc,IAAMoB,EAAOC,EAAWC,GACtCd,EAAUc,EAASJ,EAAoBjG,GACvCiG,EAAqBjG,GC7LzB,IAMOwG,EAKAC,YALKD,GAAAA,EACC,YAAG,cADJA,EAEA,WAAG,cAFHA,IAAAA,EAAY,cAKZC,GAAAA,EACL,MAAG,QADEA,EAEA,WAAG,cAFHA,EAGC,YAAG,gBAHJA,IAAAA,EAAM,KCTlB,MA6CMC,EAAqBC,GACpBA,EAIa,QAAdA,EACKF,EAAOG,WAGTH,EAAOI,YAPLJ,EAAOK,MAoCLC,EAAQ,CACnBC,IA3BmB,MACnB,MAAMC,EAAYzE,OAAO0E,aAAaC,QA1Dd,gBA2DlBJ,EAAQE,EAAYG,KAAKC,MAAMJ,GAAa,GAC5CN,EAvBoB,MAC1B,MAAMW,EAAc9E,OAAO+E,SAASC,KAAKC,MAAK,qBAE9C,GAAIH,EACF,OAAOA,EAAY,IAmBHI,GAElB,MAAO,CACLC,OAAQjB,EAAkBC,GAC1BiB,SAAU,GACVC,iBAAkBlB,EAClBmB,kBAAmB,CACjBC,YAAa,GACbC,MAAO,GACPC,cAAe,GACfC,cAAe,GACfC,iBAAiB,GAEnBC,iBAAkB,CAChBC,WAAY,GACZC,WAAY,GACZC,SAAU,GACVC,SAAU,OAETzB,IAKA0B,IAGMC,EAAiBC,IAC5B5B,EAAMC,IAAM,IAAI4B,MAAM7B,EAAMC,IAAK,CAC/B1F,IAAIuH,EAAQC,EAAKC,GACf,IAAKC,QAAQzE,IAAIsE,EAAQC,GACvB,OAGF,MAAMtF,EAAQwF,QAAQ1H,IAAIuH,EAAQC,EAAKC,GAEvC,MAAqB,iBAAVvF,GAAgC,OAAVA,EACxB,IAAIoF,MAAMpF,EAAOyF,MAEjBzF,GAIX0F,IAAIL,EAAQC,EAAKtF,EAAOuF,GACtB,MAAMI,EAAUH,QAAQE,IAAIL,EAAQC,EAAKtF,EAAOuF,GAIhD,OAHII,GACFR,IAEKQ,KAIXR,KAGWS,EAAqB,KAChC5G,OAAO0E,aAAamC,QApHI,eAsHtBjC,KAAKkC,UAAU,CACb1B,SAAUb,EAAMC,IAAIY,SAGpB2B,oBAAqBxC,EAAMC,IAAIuC,wBCvHxBC,EAAyB,KACpC,OAAQzC,EAAMC,IAAIW,QAChB,KAAKlB,EAAOK,MACV,OAAOrD,EAAEgG,GACX,KAAKhD,EAAOG,WACV,OAAOnD,EAAEiG,GACX,KAAKjD,EAAOI,YACV,OAAOpD,EAAEkG,GACX,QACE,MAAM,IAAIC,MAAM,kBAAkB7C,EAAMC,IAAIW,YCPrCkC,EAAyC,EAPtDvB,WAQEA,EARFC,SASEA,KAEA9E,EACE,SACA,CACExD,KAAM,SACN6J,UAAW,iBACX,mBAAoBxB,EACpB,iBAAkBC,GAEpB,GAAGD,KAAcC,KCjBRkB,EAAc,IACzBhG,EACE,MACA,CAAEsG,GAAI,eAAgBD,UAAW,UACjCrG,EAAE,SAAU,CAAEsG,GAAI,sBAAwB,kBCHvC,MAAMC,EAGXC,cACE5B,EACAC,EACAC,EACAC,GAEA,MAAMuB,EAAKhM,IAeX,OAbAgJ,EAAMC,IAAIY,SAASmC,GAAM,CACvBA,GAAIhM,IAfVsK,WAgBMA,EAhBNC,WAiBMA,EAjBNC,SAkBMA,EAlBNC,SAmBMA,EACAR,MAAO,GACPC,cAAe,EACfiC,WAAY,EACZC,UAAW,EACXC,OAAQ,IAGH,IAAInB,KAAKc,GAGlBM,YAAYN,GAGV,GAFAd,KAAKc,GAAKA,GAELd,KAAKqB,WACR,MAAM,IAAIV,MAAM,WAAWG,oBAI3BO,iBACF,OAAOvD,EAAMC,IAAIY,SAASqB,KAAKc,IAG7BQ,gBACF,OAAOtB,KAAKqB,WAAWC,UACnB,IAAIvM,KAAKiL,KAAKqB,WAAWC,WACzB,KAGFC,cACF,OAAOvB,KAAKqB,WAAWE,QAAU,IAAIxM,KAAKiL,KAAKqB,WAAWE,SAAW,KAGvEC,QACE,GAAIxB,KAAKsB,UACP,MAAM,IAAIX,MAAM,2BAGlB,GAAIX,KAAKuB,QACP,MAAM,IAAIZ,MAAM,yBAGlBX,KAAKqB,WAAWC,UAAY3L,EAAY,IAAIZ,MAC5CiL,KAAKqB,WAAWF,OAAOM,KAAK,CAC1BC,OAAQ1B,KAAKqB,WAAW9B,SACxBoC,KAAM3B,KAAKqB,WAAWC,YAI1BM,MAAMF,GACJ1B,KAAKqB,WAAWF,OAAOM,KAAK,CArEhCC,OAsEMA,EACAC,MAAM,IAAI5M,MAAO8M,gBAIrBC,WACE9B,KAAK4B,MAAM5B,KAAKqB,WAAW9B,UAG7BwC,IAAI/C,EAAuBD,GACzBiB,KAAKqB,WAAWrC,cAAgBA,EAChCgB,KAAKqB,WAAWE,QAAU5L,EAAY,IAAIZ,MAC1CiL,KAAKqB,WAAWtC,MAAQA,EAG1BiD,UACEhC,KAAKqB,WAAWrC,cAAgB,SACzBgB,KAAKqB,WAAWE,QAGzBU,cACE,OAAOjC,KAAKqB,WAAWF,OAAOe,QAC5B,CAACC,EAAMC,IAAYD,EAAOC,EAAQV,QAClC,GAIJW,UAAUrL,EAAkCsL,GACtCtC,KAAKqB,WAAWrK,GAAQsL,EAAS,IAIrCtC,KAAKqB,WAAWrK,IAASsL,GAG3BC,gBAAgBD,GACdtC,KAAKqC,UAAU,aAAcC,GAG/BE,eAAeF,GACbtC,KAAKqC,UAAU,YAAaC,IC/DzB,MAAMG,EAAY,IA3CzB,MAMErB,YAAYsB,GACV1C,KAAK0C,SAAWA,EAGdC,qBASF,OAPE3C,KAAK0C,SAAS9D,kBACdoB,KAAK4C,0BAA4B5C,KAAK0C,SAAS9D,mBAE/CoB,KAAK4C,wBAA0B5C,KAAK0C,SAAS9D,iBAC7CoB,KAAK6C,sBAAwB,IAAI9B,EAAQf,KAAK0C,SAAS9D,mBAGlDoB,KAAK6C,sBAIVC,6BACF,GAAI9C,KAAK+C,8BACP,OAAO/C,KAAK+C,8BAGd,MAAM3D,EAAaxI,OAAOoD,OAAOgG,KAAK0C,SAAS/D,UAC5CqE,MAAK,CAACC,EAAGC,IACRD,EAAE1B,SAAW2B,EAAE3B,QACXxM,KAAKqJ,MAAM8E,EAAE3B,SAAWxM,KAAKqJ,MAAM6E,EAAE1B,SACrC,IACJ,IAAInC,WAMR,OAJIA,IACFY,KAAK+C,8BAAgC3D,GAGhCA,IAI4BtB,EAAMC,KC1ChC0C,EAAmB,IAKvBjG,EACL,MACA,CAAEsG,GAAI,qBAAsBD,UAAW,UACvCrG,EAAE2I,EAAiB,CAAEC,SAPchE,IACnCtB,EAAMC,IAAIoB,iBAAiBC,WAAaA,KAOxC5E,EACE,OACA,CAAEsG,GAAI,oBACNtG,EACE,MACA,KACAA,EACE,QACA,KACAA,EAAE,OAAQ,KAAM,eAChBA,EAAE,QAAS,CACTsG,GAAI,oBACJ9J,KAAM,OACNqM,YAAaZ,EAAaK,wBAA0B,WACpDQ,UAAU,EACV/I,MAAOuD,EAAMC,IAAIoB,iBAAiBC,eAIxC5E,EACE,MACA,KACAA,EACE,QACA,KACAA,EAAE,OAAQ,KAAM,UAChBA,EAAE+I,EAAa,CACbzC,GAAI,oBACJuC,YAAa,IACb9I,MAAOuD,EAAMC,IAAIoB,iBAAiBE,WAClCmE,IAAK,MAEPhJ,EAAE+I,EAAa,CACbzC,GAAI,kBACJuC,YAAa,IACb9I,MAAOuD,EAAMC,IAAIoB,iBAAiBG,SAClCkE,IAAK,OAGThJ,EAAEoG,EAAc,CAAEvB,WAAY,EAAGC,SAAU,IAC3C9E,EAAEoG,EAAc,CAAEvB,WAAY,EAAGC,SAAU,IAC3C9E,EAAEoG,EAAc,CAAEvB,WAAY,EAAGC,SAAU,IAC3C9E,EAAEoG,EAAc,CAAEvB,WAAY,EAAGC,SAAU,MAE7C9E,EACE,MACA,KACAA,EACE,QACA,KACAA,EAAE,OAAQ,KAAM,aAChBA,EAAE+I,EAAa,CACbzC,GAAI,kBACJuC,YAAa,MACb9I,MAAOuD,EAAMC,IAAIoB,iBAAiBI,aAIxC/E,EAAE,MAAO,KAAMA,EAAE,QAAS,CAAExD,KAAM,SAAUuD,MAAO,qBC7D5CgJ,EAAwC,EAXrDzC,GAYEA,EAZFuC,YAaEA,EAbF9I,MAcEA,EAAKkJ,IACLA,EAAM,EAfRD,IAgBEA,EAhBFE,QAiBEA,KAEAlJ,EAAE,QAAS,CAnBbsG,GAoBIA,EACA9J,KAAM,SArBVqM,YAsBIA,EACAM,QAAS,OAvBbpJ,MAwBIA,EAxBJkJ,IAyBIA,EAzBJD,IA0BIA,EACAF,UAAU,EA3BdI,QA4BIA,IC1BG,MAAME,EAGXxC,YAAYyC,GACV7D,KAAK6D,QAAUA,EAGjB3C,YACE,MAAO,IAAIlB,KAAK6D,QAAQxC,WAAWH,WAAa,IAGlDD,aACE,MAAO,IAAIjB,KAAK6D,QAAQxC,WAAWJ,YAAc,IAGnD6C,SACE,MAAO,GAAG9D,KAAK6D,QAAQxC,WAAWhC,cAAcW,KAAK6D,QAAQxC,WAAW/B,WAG1EC,WACE,MAAO,IAAIS,KAAK6D,QAAQxC,WAAW9B,eAGrCwE,QACE,MAAO,CACL/D,KAAK6D,QAAQxC,WAAWjC,WACxBY,KAAK8D,SACL9D,KAAKT,YACLyE,KAAK,KAGT1C,YACE,OAAOtB,KAAK6D,QAAQvC,WAAW2C,kBAAoB,GAGrDC,SAEE,QADsBlE,KAAK6D,QAAQxC,WAAWrC,eAAiB,GACvCgB,KAAK6D,QAAQ5B,eAAehN,YCjCjD,MAAMyL,EAAuC,KAClD,IAAK+B,EAAaE,eAChB,OAAO,KAGT,MAAMkB,EAAU,IAAID,EAAiBnB,EAAaE,gBAkBlD,OAAOnI,EACL,MACA,CAAEsG,GAAI,sBAAuBD,UAAW,UACxCrG,EAAE,KAAM,CAAEsG,GAAI,iBAAmB+C,EAAQE,SACzCvJ,EAAE,MAAO,KAAMA,EAAE,OAAQ,KAAM,YAAYqJ,EAAQK,aACnD1J,EAAE,MAAO,KAAMA,EAAE,OAAQ,KAAM,eAAeqJ,EAAQvC,gBACtDmB,EAAaE,eAAerB,WAC1B9G,EACE,MACA,KACAA,EACE,OACA,KACA,iBACAA,EAAE2J,EAAO,CAAE7C,UAAWmB,EAAaE,eAAerB,cAIxD9G,EACE,OACA,CAAEsG,GAAI,aAAcD,UAAW,WAC/BrG,EAAE+I,EAAa,CACbzC,GAAI,qBACJuC,YAAaZ,EAAaE,eAAetB,WAAW9B,SAAStK,WAC7DsF,MAAOuD,EAAMC,IAAIc,kBAAkBC,cAErCtE,EAAE,QAAS,CAAExD,KAAM,SAAUuD,MAAO,UACpCC,EAAE,QAAS,CAAEsG,GAAI,mBAAoB9J,KAAM,SAAUuD,MAAO,SAG9DC,EAAE4J,EAAa,CAAEpN,KAAM,SAAUuD,MAAOsJ,EAAQ5C,eAChDzG,EAAE4J,EAAa,CAAEpN,KAAM,QAASuD,MAAOsJ,EAAQ3C,cAE/C1G,EACE,OACA,CAAEsG,GAAI,mBAAoBD,UAAW,WACrCrG,EAAE,QAAS,CACTqG,UAAW,SACX7J,KAAM,OACNqN,aAAc,aAGhB7J,EACE,QACA,CAAEqG,UAAW,WACbrG,EAAE,MAAO,KAAM,SACfA,EAAE,WAAY,CACZkJ,QA/DkBY,IACpBA,EAAM1E,SACR9B,EAAMC,IAAIc,kBAAkBE,MAC1BuF,EAAM1E,OACLrF,WA+DHC,EACE,QACA,CAAEqG,UAAW,WACbrG,EAAE,MAAO,KAAM,kBACfA,EAAE+I,EAAa,CACbE,IAAK,EACLlJ,MAAOuD,EAAMC,IAAIc,kBAAkBG,cACnCqE,aACoD,EAAlDZ,EAAaE,eAAetB,WAAW9B,UACvCtK,WACFyO,QArE0BY,IAC5BA,EAAM1E,SACR9B,EAAMC,IAAIc,kBAAkBG,cAC1BsF,EAAM1E,OACLrF,WAqEHuD,EAAMC,IAAIuC,oBACN,GACA9F,EACE,MACA,CAAEsG,GAAI,uBACNtG,EAAE,QAAS,KAAMA,EAAE,OAAQ,KAAM,aACjCA,EAAE,QAAS,CACTsG,GAAI,uBACJ9J,KAAM,WACNqN,aAAc,mBACdf,UAAU,KAIlB9I,EAAE,QAAS,CACTsG,GAAI,4BACJ9J,KAAM,SACNuD,MAAO,cACPgK,SAAUzG,EAAMC,IAAIc,kBAAkBK,qBCxGjCkF,EAAwC,EARrDpN,KAQwDA,EARxDuD,MAQ8DA,MAC5DC,OAAAA,EACE,MACA,CAAEqG,UAAW,WACbrG,EAAE,OAAQ,KAAM,GjB+COgK,EiB/COxN,EjBgDhC,GAAGwN,EAAI,GAAGC,gBAAgBD,EAAIE,MAAM,ciBhDWnK,KAC7CC,EACE,MACA,KACAA,EACE,SACA,CAAEqG,UAAW,aAAcC,GAAI,aAAa9J,gBAC5C,KAEFwD,EACE,SACA,CAAEqG,UAAW,aAAcC,GAAI,aAAa9J,gBAC5C,OjBmCkB,IAACwN,GkBpDdrB,EAA4C,EAPzDC,SAO4DA,MAC1D,MAAMhE,EAAaqD,EAAaK,uBAChC,OAAK1D,EAIE5E,EACL,MACA,KACA,WAAW4E,WACX5E,EAAE,SAAU,CAAEmK,QAAS,IAAMvB,EAAShE,IAAe,OAP9C,MCDE+E,EAAkC,EAT/C7C,UASkDA,MAChD,MAAOsD,EAAYC,GhBWG,CAACC,IACrB,IAAIC,EAAoBjN,EAAMC,SAASM,IAAIT,GACtCmN,IACDA,EAAoB,CAAC,CAAExK,MAAOuK,IAC9BhN,EAAMC,SAASkI,IAAIrI,EAAkBmN,IAGzC,MAAMC,EAAOD,EAAkBA,EAAkBrM,OAAS,GAc1D,MAAO,CAACsM,EAAKzK,MAbKA,IACVyK,EAAKzK,QAAUA,IACfyK,EAAKzK,MAAQA,EAMbf,oBAAoB3B,OgB3BOoN,CAAS,IAW9C,MhBVuB,EAAC5L,EAAUF,KAChC,MAAMoD,EAAmBzE,EAAMG,UAAUI,IAAIT,IAAqB,GAClE2E,EAAiBkF,KAAK,CAb1BpI,SAcQA,EAdRF,aAeQA,EACAC,qBAAiBmC,IAErBzD,EAAMG,UAAUgI,IAAIrI,EAAkB2E,IgBNxC2I,EAAU,KACR,MAAMC,EAAoB,KACxBN,EnBDwB,CAACO,IAC7B,IAAIC,EAAUD,EAAK,IAEnB,MAAME,EAAQpQ,KAAKsB,MAAM6O,EAAU,MAC7BE,EAAUrQ,KAAKsB,OAAO6O,EAAkB,KAARC,GAAgB,IAQtD,OANAD,EAAUnQ,KAAKsQ,MAAMH,EAAkB,KAARC,EAAyB,GAAVC,GAMvC,GAJgBD,EAAQ,GAAK,IAAIA,IAAUA,EAAMrQ,cAC/BsQ,EAAU,GAAK,IAAIA,IAAYA,EAAQtQ,cACvCoQ,EAAU,GAAK,IAAIA,IAAYA,EAAQpQ,cmBT7CwQ,CAAe1Q,KAAKC,MAAQsM,EAAUoE,aAGvDC,YAAYR,EAVmB,KAW/BA,MACC,IAEI3K,EAAE,OAAQ,KAAMoK,EAAW3P,aCXvB2Q,EAPsB,cAA7BrM,OAAO+E,SAASuH,SACXtI,EAAauI,YAEbvI,EAAawI,WCQxB,MA6BMC,EAAgB,KACpB,MAAMnC,EAAU9C,EAAQkF,OACtBnI,EAAMC,IAAIoB,iBAAiBC,WAC3B8G,SAASpI,EAAMC,IAAIoB,iBAAiBE,YACpC6G,SAASpI,EAAMC,IAAIoB,iBAAiBG,UACpC4G,SAASpI,EAAMC,IAAIoB,iBAAiBI,WAGtCsE,EAAQrC,QAzB0B,CAACqC,IACnCtK,OAAO4M,QAAQC,UAAU,GAAI,GAAI,cAAcvC,EAAQ/C,MACvDhD,EAAMC,IAAIa,iBAAmBiF,EAAQ/C,GACrChD,EAAMC,IAAIW,OAASlB,EAAOI,aAwB1ByI,CAA4BxC,IAGxByC,EAAoBC,UACxB,IAAK9D,EAAaE,eAChB,OAUF,IAAI6D,EAPJ/D,EAAaE,eAAeZ,IAC1B0E,WAAW3I,EAAMC,IAAIc,kBAAkBG,eACvClB,EAAMC,IAAIc,kBAAkBE,OAG9BjB,EAAMC,IAAIc,kBAAkBK,iBAAkB,EAI9C,IACEsH,QAAiBE,GAAWC,YAC1BlE,EAAaE,eACb7E,EAAMC,IAAIuC,qBAAuBxC,EAAMC,IAAIc,kBAAkBI,eAEhE,QACCnB,EAAMC,IAAIc,kBAAkBK,iBAAkB,EAG5CsH,EAASI,IACN9I,EAAMC,IAAIuC,sBACbxC,EAAMC,IAAIuC,oBAAsBxC,EAAMC,IAAIc,kBAAkBI,eAG9D4H,MAAM,YAnERtN,OAAO4M,QAAQC,UAAU,GAAI,GAAI,KACjCtI,EAAMC,IAAIW,OAASlB,EAAOK,QAqExBgJ,MAAM,yBAGNpE,EAAaE,eAAeX,YAa1B8E,EAAexC,IACnB,GAAKjP,EAAoBiP,EAAM1E,QAA/B,CAIA,OAAQ0E,EAAM1E,OAAOkB,IACnB,IAAK,qBAEH,OAzFJvH,OAAO4M,QAAQC,UAAU,GAAI,GAAI,uBACjCtI,EAAMC,IAAIW,OAASlB,EAAOG,YAyFxB,IAAK,8BAEH,YADA8E,EAAaE,gBAAgBJ,iBAAgB,GAE/C,IAAK,8BAEH,YADAE,EAAaE,gBAAgBJ,gBAAgB,GAE/C,IAAK,6BAEH,YADAE,EAAaE,gBAAgBH,gBAAe,GAE9C,IAAK,6BAEH,YADAC,EAAaE,gBAAgBH,eAAe,GAE9C,IAAK,mBAEH,YADAC,EAAaE,gBAAgBb,WA1BX,IAACvC,EALFF,EAAoBC,EAoCvCgF,EAAM1E,OAAOmH,UAAUC,SAAS,mBAChC1C,EAAM1E,OAAOqH,QAAQ5H,YACrBiF,EAAM1E,OAAOqH,QAAQ3H,WAtCFD,EAyCjBiF,EAAM1E,OAAOqH,QAAQ5H,WAzCgBC,EA0CrCgF,EAAM1E,OAAOqH,QAAQ3H,SAzCzBxB,EAAMC,IAAIoB,iBAAiBE,WAAaA,EACxCvB,EAAMC,IAAIoB,iBAAiBG,SAAWA,EAGfC,GAwCsC,IAA1C2G,SAAS5B,EAAM1E,OAAOqH,QAAQ3H,WAAiBrK,WAvClE6I,EAAMC,IAAIoB,iBAAiBI,SAAWA,KA2ClC2H,EAAgB5C,IACpB,GAAKjP,EAAoBiP,EAAM1E,QAM/B,OAFA0E,EAAM6C,iBAEE7C,EAAM1E,OAAOkB,IACnB,IAAK,mBACHkF,IACA,MACF,IAAK,aAzHFvD,EAAaE,iBAIlBF,EAAaE,eAAef,MAC1B6E,WAAW3I,EAAMC,IAAIc,kBAAkBC,cAEzChB,EAAMC,IAAIc,kBAAkBC,YAAc,IAoHtC,MACF,IAAK,mBACHwH,MAKAc,GAAe9C,IACnB,IAA8BA,EAAM1E,OrBzJ0B5I,KqB0J5D,OAGF,MAmBM6I,EAnBe,CAACiB,IACpB,OAAQA,GACN,IAAK,oBACH,MAAO,8BACT,IAAK,oBACH,MAAO,8BACT,IAAK,kBACH,MAAO,4BACT,IAAK,kBACH,MAAO,4BACT,IAAK,oBACH,MAAO,8BACT,IAAK,qBACH,MAAO,gCACT,IAAK,uBACH,MAAO,oCAIDuG,CAAa/C,EAAM1E,OAAOkB,IACtC,OAAKjB,ErB7JkB,EACvBvK,EACAuK,EACAtF,KAEA,IAAKsF,EACH,OAGF,MAAMyH,EAAUzH,EAAI0H,MAAM,KACpBC,EAAUF,EAAQG,MAExB,GAAKD,EAAL,CAIA,IAAK,MAAME,KAAOJ,EAAS,CACzB,MAAMK,EAAOrS,EAAOoS,GACpB,IAAKlS,EAAcmS,GACjB,OAGFrS,EAASqS,EAGXrS,EAAOkS,GAAWjN,IqBwIXqN,CAAU9J,EAAMC,IAAK8B,EAAKyE,EAAM1E,OAAOrF,YAJ9C,GAOImM,GAAa,IC/LZ,MACLmB,SACE,OAAIjC,IAAgBrI,EAAauI,YACxB,wBAEA,8CAIXgC,QAAQC,EAAcC,EAAeC,GACnC,MAAMC,EAAM,GAAGlI,KAAK6H,kBAAkBE,IAEtC,OAAOxO,OAAO4O,MAAMD,EAAK,CACvBE,OAAQH,EAAeG,OACvBC,QAAS,IACJJ,EAAeI,QAClB,eAAgB,oBAElBL,KAAM7J,KAAKkC,UAAU2H,KAIzBM,KAAKP,EAAcC,EAAeC,GAChC,OAAOjI,KAAK8H,QAAQC,EAAMC,EAAM,CAAEI,OAAQ,UAAWH,IAGvDtB,YAAY9C,EAAkB5E,GAC5B,OAAOe,KAAKsI,KACV,kBACA,CACEC,KAAM,CACJvR,KAAM,gBACNqK,WAAYwC,EAAQxC,aAGxB,CACEgH,QAAS,CACP,gCAAiCpJ,OD2JrCuJ,GAAUC,SAASC,eAAe,QAEpCF,KACF/I,GAAc,IAAMvC,EAAO1C,EAAE+F,GAAMiI,MAEnCA,GAAQzN,iBAAiB,QAAS+L,GAClC0B,GAAQzN,iBAAiB,SAAUmM,GACnCsB,GAAQzN,iBAAiB,QAASqM,KAIpCzB,YAAYxF,EAjMuB,KAkMnCsI,SAAS1N,iBAAiB,mBAAoBoF,GAE9C5G,OAAOoP,eAAiBxI","sources":["src/utils.ts","node_modules/tortie-core/dist/types.js","node_modules/tortie-core/dist/utils.js","node_modules/tortie-core/dist/hooks.js","node_modules/tortie-core/dist/polyfills.js","node_modules/tortie-core/dist/render.js","src/types.ts","src/state/app.ts","src/components/App.ts","src/components/BlindsButton.ts","src/components/IntroScreen.ts","src/models/session.ts","src/selectors/app.ts","src/components/NewSessionScreen.ts","src/components/NumberInput.ts","src/decorators/session.ts","src/components/ShowSessionScreen.ts","src/components/TipsSection.ts","src/components/SuggestedCasino.ts","src/components/Timer.ts","src/constants.ts","src/index.ts","src/services/api.ts"],"sourcesContent":["import { PlainObject, Primitive } from './types';\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","export var NodeTypes;\n(function (NodeTypes) {\n    NodeTypes[NodeTypes[\"Element\"] = 1] = \"Element\";\n    NodeTypes[NodeTypes[\"Text\"] = 3] = \"Text\";\n})(NodeTypes || (NodeTypes = {}));\n","import { NodeTypes, } from './types';\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys;\nexport const isVirtualFunctionElement = (virtualElement) => typeof virtualElement.type === 'function';\nexport const isVirtualStringElement = (virtualElement) => virtualElement.type === 'String';\nexport const isVirtualNativeElement = (virtualElement) => !isVirtualStringElement(virtualElement) &&\n    !isVirtualFunctionElement(virtualElement);\nexport const isElementNode = (node) => node.nodeType === NodeTypes.Element;\nexport const isTextNode = (node) => node.nodeType === NodeTypes.Text;\nexport const replaceNode = (node, newNode) => {\n    var _a;\n    if (!newNode) {\n        return;\n    }\n    (_a = node.parentElement) === null || _a === void 0 ? void 0 : _a.replaceChild(newNode, node);\n};\nexport const arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i += 1) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { arraysEqual } from './utils';\nlet currentComponent;\nlet currentForceRender;\n// TODO: Since hooks should always fire in the same order, we could just push\n// all hook data onto a single array with an index that increments per call.\n// That way we don't keep in memory other hooks data when we don't need to.\nconst hooks = {\n    useState: new Map(),\n    useEffect: new Map(),\n};\n// Calls callback if dependencies change between renders.\nexport const useEffect = (callback, dependencies) => {\n    const componentEffects = hooks.useEffect.get(currentComponent) || [];\n    componentEffects.push({\n        callback,\n        dependencies,\n        unmountCallback: undefined,\n    });\n    hooks.useEffect.set(currentComponent, componentEffects);\n};\n// TODO: This should be a special case of `useReducer` once it's implemented.\nexport const useState = (initialValue) => {\n    let componentHookData = hooks.useState.get(currentComponent);\n    if (!componentHookData) {\n        componentHookData = [{ value: initialValue }];\n        hooks.useState.set(currentComponent, componentHookData);\n    }\n    // TODO: Make this work with multiple useState calls.\n    const hook = componentHookData[componentHookData.length - 1];\n    const setState = (value) => {\n        if (hook.value !== value) {\n            hook.value = value;\n            // We could end up here during the current render. That means we'd kick\n            // off another render before the DOM has finished updating. So we use\n            // `requestIdleCallback` to ensure the next render runs after the current\n            // one is complete.\n            // TODO: Once fibers are implemented, this can go away.\n            requestIdleCallback(currentForceRender);\n        }\n    };\n    // TODO: Can we avoid the cast here? Otherwise value would be `unknown`\n    // because of the `hooks.useState` definition above.\n    return [hook.value, setState];\n};\nexport const mountWithHooks = (virtualElement, forceRender) => {\n    currentComponent = virtualElement.type;\n    currentForceRender = forceRender;\n    const prevEffects = hooks.useEffect.get(virtualElement.type);\n    // Repopulates after calling the function component below.\n    hooks.useEffect.delete(virtualElement.type);\n    virtualElement.result = virtualElement.type(virtualElement.props);\n    const currentUseEffectCalls = hooks.useEffect.get(currentComponent);\n    if (!currentUseEffectCalls || currentUseEffectCalls.length === 0) {\n        return virtualElement.result;\n    }\n    currentUseEffectCalls.forEach((nextEffect, index) => {\n        const prevEffect = prevEffects === null || prevEffects === void 0 ? void 0 : prevEffects[index];\n        if (prevEffect &&\n            arraysEqual(prevEffect.dependencies, nextEffect.dependencies)) {\n            nextEffect.unmountCallback = prevEffect.unmountCallback;\n        }\n        else {\n            nextEffect.unmountCallback = nextEffect.callback();\n        }\n    });\n    return virtualElement.result;\n};\nexport const unmountWithHooks = (virtualElement) => {\n    const componentEffects = hooks.useEffect.get(virtualElement.type);\n    if (!componentEffects) {\n        return virtualElement.result;\n    }\n    for (const { unmountCallback } of componentEffects) {\n        if (unmountCallback) {\n            unmountCallback();\n        }\n    }\n    hooks.useEffect.delete(virtualElement.type);\n    hooks.useState.delete(virtualElement.type);\n    return virtualElement.result;\n};\n","// TODO: Use an actual polyfill. This is gross.\nexport const polyfillRequestIdleCallback = (window) => {\n    if (typeof window.requestIdleCallback === 'undefined') {\n        window.requestIdleCallback = (callback, options) => setTimeout(callback, 0);\n    }\n};\nexport const polyfillAll = (window) => {\n    polyfillRequestIdleCallback(window);\n};\n","import { NodeTypes, } from './types';\nimport { keys, isVirtualFunctionElement, isVirtualNativeElement, isTextNode, isElementNode, replaceNode, } from './utils';\nimport { mountWithHooks, unmountWithHooks } from './hooks';\nimport { polyfillAll } from './polyfills';\nvar ElementProperties;\n(function (ElementProperties) {\n    ElementProperties[\"Value\"] = \"value\";\n    ElementProperties[\"ClassName\"] = \"className\";\n})(ElementProperties || (ElementProperties = {}));\nconst ELEMENT_PROPERTIES = new Set(Object.values(ElementProperties));\nconst EVENT_PROPS = new Map([\n    ['onInput', 'input'],\n    ['onClick', 'click'],\n]);\nconst createVirtualStringElement = (value) => ({\n    type: 'String',\n    value,\n});\nexport function createVirtualElement(type, props, ...children) {\n    return typeof type === 'function'\n        ? {\n            type,\n            props: props || {},\n            result: null,\n        }\n        : {\n            type,\n            props: Object.assign(Object.assign({}, props), { tagName: type || 'div' }),\n            children: children.map((child) => typeof child === 'string' ? createVirtualStringElement(child) : child),\n        };\n}\nexport const e = createVirtualElement;\nconst reconcileEventHandlerProps = (domNode, nativeEventName, prevValue, newValue) => {\n    if (prevValue === newValue) {\n        return;\n    }\n    if (prevValue) {\n        domNode.removeEventListener(nativeEventName, prevValue);\n    }\n    if (newValue) {\n        domNode.addEventListener(nativeEventName, newValue);\n    }\n};\nconst reconcileProps = (domNode, prevNode, newNode) => {\n    if ((prevNode === null || prevNode === void 0 ? void 0 : prevNode.type) === 'String' || (newNode === null || newNode === void 0 ? void 0 : newNode.type) === 'String') {\n        return;\n    }\n    const prevPropKeys = prevNode ? keys(prevNode.props) : [];\n    const newPropKeys = newNode ? keys(newNode.props) : [];\n    for (const name of newPropKeys.concat(prevPropKeys)) {\n        const prevValue = prevNode === null || prevNode === void 0 ? void 0 : prevNode.props[name];\n        const newValue = newNode === null || newNode === void 0 ? void 0 : newNode.props[name];\n        // HACK: With properties (as opposed to attributes), our crappy virtal DOM\n        // can get out of sync after user input so we just always write.\n        if (ELEMENT_PROPERTIES.has(name)) {\n            // TODO: Fix type `Element` being too generic here.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            domNode[name] = newValue === undefined ? '' : newValue;\n            continue;\n        }\n        if (prevValue === newValue) {\n            continue;\n        }\n        if (name === 'onClick' || name === 'onInput') {\n            const nativeEventName = EVENT_PROPS.get(name);\n            if (nativeEventName) {\n                reconcileEventHandlerProps(domNode, nativeEventName, prevNode === null || prevNode === void 0 ? void 0 : prevNode.props[name], newNode === null || newNode === void 0 ? void 0 : newNode.props[name]);\n            }\n            continue;\n        }\n        if (typeof newValue === 'boolean') {\n            if (newValue) {\n                domNode.setAttribute(name, '');\n            }\n            else {\n                domNode.removeAttribute(name);\n            }\n        }\n        else if (typeof newValue === 'undefined') {\n            domNode.removeAttribute(name);\n        }\n        else {\n            domNode.setAttribute(name, String(newValue));\n        }\n    }\n};\nconst createDomNode = (virtualElement) => {\n    if (!virtualElement) {\n        return null;\n    }\n    if (virtualElement.type === 'String') {\n        return appDocument.createTextNode(virtualElement.value);\n    }\n    if (isVirtualFunctionElement(virtualElement)) {\n        return createDomNode(mountWithHooks(virtualElement, forceRender));\n    }\n    const { children, type: tagName } = virtualElement;\n    const element = appDocument.createElement(tagName);\n    reconcileProps(element, null, virtualElement);\n    for (const child of children) {\n        if (!child) {\n            continue;\n        }\n        const childDomElement = createDomNode(child);\n        if (!childDomElement) {\n            continue;\n        }\n        element.appendChild(childDomElement);\n    }\n    return element;\n};\nconst reconcileStrings = (domNode, prevNode, newNode) => {\n    if (prevNode.value === newNode.value) {\n        return;\n    }\n    if (isElementNode(domNode)) {\n        replaceNode(domNode, createDomNode(newNode));\n    }\n    else if (isTextNode(domNode)) {\n        domNode.replaceData(0, domNode.length, newNode.value);\n    }\n};\nexport const reconcile = (domNode, prevNode, newNode) => {\n    if (!newNode) {\n        domNode.remove();\n        return;\n    }\n    if (!prevNode || prevNode.type !== newNode.type) {\n        if (prevNode && isVirtualFunctionElement(prevNode)) {\n            // TODO: This should happen recursively for all child nodes being removed.\n            unmountWithHooks(prevNode);\n        }\n        replaceNode(domNode, createDomNode(newNode));\n        return;\n    }\n    // We needlessly have to repeatedly check the type of `prevNode` here even\n    // though we ensure that both types are the same above.\n    // See https://stackoverflow.com/questions/71397541\n    if (prevNode.type === 'String' && newNode.type === 'String') {\n        reconcileStrings(domNode, prevNode, newNode);\n        return;\n    }\n    if (isTextNode(domNode)) {\n        replaceNode(domNode, createDomNode(newNode));\n        return;\n    }\n    if (isVirtualFunctionElement(prevNode) && isVirtualFunctionElement(newNode)) {\n        reconcile(domNode, prevNode.result, mountWithHooks(newNode, forceRender));\n        return;\n    }\n    if (isVirtualNativeElement(prevNode) && isVirtualNativeElement(newNode)) {\n        reconcileProps(domNode, prevNode, newNode);\n        const domNodeChildren = Array.from(domNode.childNodes).filter((node) => node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text);\n        newNode.children.forEach((newNodeChild, index) => {\n            const domNodeChild = domNodeChildren[index];\n            if (domNodeChild) {\n                reconcile(domNodeChild, prevNode.children[index], newNodeChild);\n            }\n            else if (newNodeChild) {\n                const node = createDomNode(newNodeChild);\n                if (node) {\n                    domNode.appendChild(node);\n                }\n            }\n        });\n    }\n};\nlet prevVirtualElement = createVirtualElement('div');\nlet forceRender;\nlet appDocument;\nlet polyfilled = false;\n// TODO: Add `createRoot` function instead.\nexport const render = (component, appRoot) => {\n    // Lets us avoid calling `global.document` so we can run this in a Node\n    // environment. Particularly useful for testing.\n    appDocument = appRoot.ownerDocument;\n    if (!polyfilled && appDocument.defaultView) {\n        polyfillAll(appDocument.defaultView);\n        polyfilled = true;\n    }\n    const virtualElement = createVirtualElement('div', null, component);\n    // We cache this for use in `mountWithHooks` (the `useState` hook needs to be\n    // able to trigger renders).\n    // TODO: Add the ability to do a partial render. We'd need to stop comparing\n    // the prev virtual DOM against current and instead just compare the real DOM\n    // against the current.\n    forceRender = () => render(component, appRoot);\n    reconcile(appRoot, prevVirtualElement, virtualElement);\n    prevVirtualElement = virtualElement;\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const state = {\n  app: loadAppState(),\n};\n\nexport const setupAppState = (onStateChange: () => void) => {\n  state.app = new Proxy(state.app, {\n    get(target, key, receiver) {\n      if (!Reflect.has(target, key)) {\n        return;\n      }\n\n      const value = Reflect.get(target, key, receiver);\n\n      if (typeof value === 'object' && value !== null) {\n        return new Proxy(value, this);\n      } else {\n        return value;\n      }\n    },\n\n    set(target, key, value, receiver) {\n      const success = Reflect.set(target, key, value, receiver);\n      if (success) {\n        onStateChange();\n      }\n      return success;\n    },\n  });\n\n  onStateChange();\n}\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: state.app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: state.app.cachedAdminPassword,\n    })\n  );\n};\n","import { FunctionComponent, e } from 'tortie-core';\nimport { IntroScreen, NewSessionScreen, ShowSessionScreen } from '.';\nimport { Screen } from '../types';\nimport { state } from '../state';\n\nexport const App: FunctionComponent = () => {\n  switch (state.app.screen) {\n    case Screen.Intro:\n      return e(IntroScreen);\n    case Screen.NewSession:\n      return e(NewSessionScreen);\n    case Screen.ShowSession:\n      return e(ShowSessionScreen);\n    default:\n      throw new Error(`Unknown screen ${state.app.screen}`);\n  }\n};\n","import { e, FunctionComponent } from 'tortie-core';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton: FunctionComponent<Props> = ({\n  smallBlind,\n  bigBlind,\n}) =>\n  e(\n    'button',\n    {\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n","import { e } from 'tortie-core';\n\nexport const IntroScreen = () => (\n  e(\n    'div',\n    { id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  )\n);\n","import { uuid, toISOString } from '../utils';\nimport { state } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    state.app.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return state.app.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { Session } from '../models';\nimport { state, AppState } from '../state';\n\n// TODO: Add automatic caching.\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n  _cachedMostFrequentCasinoName?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n\n  // TODO: Get this using a frecency algorithm.\n  get mostFrequentCasinoName() {\n    if (this._cachedMostFrequentCasinoName) {\n      return this._cachedMostFrequentCasinoName;\n    }\n\n    const casinoName = Object.values(this.appState.sessions)\n      .sort((a, b) =>\n        a.endTime && b.endTime\n          ? Date.parse(b.endTime) - Date.parse(a.endTime)\n          : 1\n      )[0]?.casinoName;\n\n    if (casinoName) {\n      this._cachedMostFrequentCasinoName = casinoName;\n    }\n\n    return casinoName;\n  }\n}\n\nexport const selectors = new Selectors(state.app);\n","import { e } from 'tortie-core';\nimport { NumberInput, BlindsButton, SuggestedCasino } from '../components';\nimport { state } from '../state';\nimport { appSelectors } from '../selectors';\n\nexport const NewSessionScreen = () => {\n  const handleSelectSuggestedCasino = (casinoName: string) => {\n    state.app.newSessionScreen.casinoName = casinoName;\n  };\n\n  return e(\n    'div',\n    { id: 'new-session-screen', className: 'screen' },\n    e(SuggestedCasino, { onSelect: handleSelectSuggestedCasino }),\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: appSelectors.mostFrequentCasinoName ?? 'Bellagio',\n            required: true,\n            value: state.app.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          e(NumberInput, {\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: state.app.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          e(NumberInput, {\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: state.app.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 2 }),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 3 }),\n        e(BlindsButton, { smallBlind: 2, bigBlind: 5 }),\n        e(BlindsButton, { smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          e(NumberInput, {\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: state.app.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","import { e, FunctionComponent } from 'tortie-core';\n\ntype Props = {\n  placeholder?: string;\n  id?: string;\n  value?: string;\n  min?: number;\n  max?: number;\n  onInput?: (event: Event) => void;\n};\n\nexport const NumberInput: FunctionComponent<Props> = ({\n  id,\n  placeholder,\n  value,\n  min = 1,\n  max,\n  onInput,\n}) =>\n  e('input', {\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n    onInput,\n  });\n","import { Session as SessionModel } from '../models';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n}\n","import { e, FunctionComponent } from 'tortie-core';\nimport { NumberInput, TipsSection, Timer } from '../components';\nimport { Session as SessionDecorator } from '../decorators';\nimport { appSelectors } from '../selectors';\nimport { state } from '../state';\n\nexport const ShowSessionScreen: FunctionComponent = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.notes = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleCashoutAmountInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.cashoutAmount = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  return e(\n    'div',\n    { id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: ${session.startTime()}`)),\n    appSelectors.currentSession.startTime &&\n      e(\n        'div',\n        null,\n        e(\n          'span',\n          null,\n          'Time elapsed: ',\n          e(Timer, { startTime: appSelectors.currentSession.startTime })\n        )\n      ),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      e(NumberInput, {\n        id: 'rebuy-amount-input',\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: state.app.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    e(TipsSection, { type: 'dealer', value: session.dealerTips() }),\n    e(TipsSection, { type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        e(NumberInput, {\n          min: 0,\n          value: state.app.showSessionScreen.cashoutAmount,\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n          onInput: handleCashoutAmountInput,\n        })\n      ),\n\n      state.app.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: state.app.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","import { e, FunctionComponent } from 'tortie-core';\nimport { capitalize } from '../utils';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n};\n\nexport const TipsSection: FunctionComponent<Props> = ({ type, value }) =>\n  e(\n    'div',\n    { className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n","import { e, FunctionComponent } from 'tortie-core';\nimport { appSelectors } from '../selectors';\n\ntype Props = {\n  onSelect: (casinoName: string) => void;\n};\n\nexport const SuggestedCasino: FunctionComponent<Props> = ({ onSelect }) => {\n  const casinoName = appSelectors.mostFrequentCasinoName;\n  if (!casinoName) {\n    return null;\n  }\n\n  return e(\n    'div',\n    null,\n    `Play at ${casinoName} again?`,\n    e('button', { onClick: () => onSelect(casinoName) }, 'OK')\n  );\n};\n","import { e, useState, useEffect, FunctionComponent } from 'tortie-core';\nimport { formatDuration } from '../utils';\n\ntype Props = {\n  startTime: Date;\n};\n\nconst MILLISECONDS_IN_ONE_SECOND = 1000;\n\nexport const Timer: FunctionComponent<Props> = ({ startTime }) => {\n  const [timeElaped, setTimeElapsed] = useState('');\n\n  useEffect(() => {\n    const updateTimeElapsed = () => {\n      setTimeElapsed(formatDuration(Date.now() - startTime.getTime()));\n    };\n\n    setInterval(updateTimeElapsed, MILLISECONDS_IN_ONE_SECOND);\n    updateTimeElapsed();\n  }, []);\n\n  return e('span', null, timeElaped.toString());\n};\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n","import {\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  objectSet,\n} from './utils';\nimport { App } from './components';\nimport { render, e } from 'tortie-core';\nimport { setupAppState } from './state';\nimport { Screen } from './types';\nimport { Api } from './services';\nimport { Session } from './models';\nimport { state, saveToLocalStorage } from './state';\nimport { appSelectors } from './selectors';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  state.app.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  state.app.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  state.app.currentSessionId = session.id;\n  state.app.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.rebuy(\n    parseFloat(state.app.showSessionScreen.rebuyAmount)\n  );\n  state.app.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    state.app.newSessionScreen.casinoName,\n    parseInt(state.app.newSessionScreen.smallBlind),\n    parseInt(state.app.newSessionScreen.bigBlind),\n    parseInt(state.app.newSessionScreen.maxBuyin),\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.end(\n    parseFloat(state.app.showSessionScreen.cashoutAmount),\n    state.app.showSessionScreen.notes\n  );\n\n  state.app.showSessionScreen.isSavingSession = true;\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      appSelectors.currentSession,\n      state.app.cachedAdminPassword ?? state.app.showSessionScreen.adminPassword\n    );\n  } finally {\n    state.app.showSessionScreen.isSavingSession = false;\n  }\n\n  if (response.ok) {\n    if (!state.app.cachedAdminPassword) {\n      state.app.cachedAdminPassword = state.app.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    appSelectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  state.app.newSessionScreen.smallBlind = smallBlind;\n  state.app.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  state.app.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return;\n    case 'decrement-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(-1);\n      return;\n    case 'increment-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(1);\n      return;\n    case 'decrement-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(-1);\n      return;\n    case 'increment-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(1);\n      return;\n    case 'rebuy-max-button':\n      appSelectors.currentSession?.rebuyMax();\n      return;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n  }\n};\n\nconst handleSubmit = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      break;\n    case 'rebuy-form':\n      rebuy();\n      break;\n    case 'end-session-form':\n      saveToGoogleSheet();\n      break;\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return;\n  }\n\n  return objectSet(state.app, key, event.target.value);\n};\n\nconst apiService = new Api();\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  setupAppState(() => render(e(App), appRoot));\n\n  appRoot.addEventListener('click', handleClick);\n  appRoot.addEventListener('submit', handleSubmit);\n  appRoot.addEventListener('input', handleInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n"],"names":["$df5bef30413a053b$export$31b40729666a4ae0","Date","now","toString","Math","random","substring","$df5bef30413a053b$export$c26d41fa6f97693c","object","tagName","$df5bef30413a053b$export$53b83ca8eaab0383","Array","isArray","$df5bef30413a053b$export$dfaaa8705752128f","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","floor","abs","$f583e3191b3a96bf$export$2ed9472effad1b70","$73e9f0bd9bcd1590$export$ed97f33186d4b816","Object","keys","$73e9f0bd9bcd1590$export$1f142f2b4209d4fb","virtualElement","type","$73e9f0bd9bcd1590$export$c3bf1ddc270d7633","$73e9f0bd9bcd1590$export$8e6ee0da8e48457","$73e9f0bd9bcd1590$export$ccbedd67ef6e9417","node","nodeType","Text","$73e9f0bd9bcd1590$export$5542201de9311ab2","newNode","_a","parentElement","replaceChild","$0be1eefdcd97b585$var$currentComponent","$0be1eefdcd97b585$var$currentForceRender","$0be1eefdcd97b585$var$hooks","useState","Map","useEffect","$0be1eefdcd97b585$export$1f54128a3b72f976","forceRender","prevEffects","get","delete","result","props","currentUseEffectCalls","length","forEach","nextEffect","index","prevEffect","arr1","arr2","i","$73e9f0bd9bcd1590$export$234180f8206db11b","dependencies","unmountCallback","callback","$ed7a2923101f3243$export$a4d8dbbf1b4206a6","window","requestIdleCallback","options","setTimeout","$ed7a2923101f3243$export$3ed58cadf6a78866","$81c0a2f73deb70ce$var$ElementProperties","ElementProperties","$81c0a2f73deb70ce$var$ELEMENT_PROPERTIES","Set","values","$81c0a2f73deb70ce$var$EVENT_PROPS","$81c0a2f73deb70ce$export$e1e7a9dd34b01909","children","assign","map","child","value","$81c0a2f73deb70ce$export$f1e1789686576879","$81c0a2f73deb70ce$var$reconcileEventHandlerProps","domNode","nativeEventName","prevValue","newValue","removeEventListener","addEventListener","$81c0a2f73deb70ce$var$reconcileProps","prevNode","prevPropKeys","newPropKeys","name","concat","has","undefined","setAttribute","removeAttribute","String","$81c0a2f73deb70ce$var$createDomNode","$81c0a2f73deb70ce$var$appDocument","createTextNode","$81c0a2f73deb70ce$var$forceRender","element","createElement","childDomElement","appendChild","$81c0a2f73deb70ce$var$reconcileStrings","Element","replaceData","$81c0a2f73deb70ce$export$38319cad1f6d89e0","componentEffects","$0be1eefdcd97b585$export$5dbc7eba4ac92ab9","domNodeChildren","from","childNodes","filter","newNodeChild","domNodeChild","remove","$81c0a2f73deb70ce$var$prevVirtualElement","$81c0a2f73deb70ce$var$polyfilled","$81c0a2f73deb70ce$export$b3890eb0ae9dca99","component","appRoot","ownerDocument","defaultView","$25746eb61037a613$export$56edef3a554a6277","$25746eb61037a613$export$a98515d67472a41f","$799ee1075ebfd49a$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$799ee1075ebfd49a$export$ca000e230c0caa3e","app","stateItem","localStorage","getItem","JSON","parse","sessionPath","location","hash","match","$799ee1075ebfd49a$var$locationToSessionId","screen","sessions","currentSessionId","showSessionScreen","rebuyAmount","notes","cashoutAmount","adminPassword","isSavingSession","newSessionScreen","casinoName","smallBlind","bigBlind","maxBuyin","$799ee1075ebfd49a$var$loadAppState","$799ee1075ebfd49a$export$834fe5a6d8a9c67","onStateChange","Proxy","target","key","receiver","Reflect","this","set","success","$799ee1075ebfd49a$export$1b8cd2d0ef9a8e5d","setItem","stringify","cachedAdminPassword","$a8e11eb2b4b0680a$export$86fbec116b87613f","$bfeb9d294d2ffc5c$export$327f2520b4698e84","$743ad4309d0f81b7$export$4f569ff5903d61c2","$be31a638e58516f0$export$596affaadba118e1","Error","$9ceabd904cf08d06$export$d7c54a71f8909529","className","id","$959c11b99bd453e0$export$1fb4852a55678982","static","dealerTips","drinkTips","buyins","constructor","attributes","startTime","endTime","start","push","amount","time","rebuy","toISOString","rebuyMax","end","undoEnd","buyinsTotal","reduce","prev","current","updateTip","change","updateDealerTip","updateDrinkTip","$564d17351e22afa3$export$e1252723db1c541","appState","currentSession","_cachedCurrentSessionId","_cachedCurrentSession","mostFrequentCasinoName","_cachedMostFrequentCasinoName","sort","a","b","$2b416257742c2bf1$export$eb1a1d9ee2289a71","onSelect","placeholder","required","$7a7cb71cad4059ea$export$6bf0cd3a219bbade","max","min","onInput","pattern","$e7e206ea4712806d$export$1fb4852a55678982","session","blinds","title","join","toLocaleString","profit","$e17aeff11cabeb07$export$c57e9b2d8b9e4de","$fdb14842a1041c3a$export$1e4a816d3f9032b4","autocomplete","event","disabled","str","toUpperCase","slice","onClick","timeElaped","setTimeElapsed","initialValue","componentHookData","hook","$0be1eefdcd97b585$export$60241385465d0a34","$0be1eefdcd97b585$export$6d9c69b0de29b591","updateTimeElapsed","ms","seconds","hours","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","setInterval","$9ecda7333d28e490$export$6bc7b24d4e862158","hostname","Development","Production","$b4e14b6b8da86996$var$createSession","create","parseInt","history","pushState","$b4e14b6b8da86996$var$navigateToShowSessionScreen","$b4e14b6b8da86996$var$saveToGoogleSheet","async","response","parseFloat","$b4e14b6b8da86996$var$apiService","saveSession","ok","alert","$b4e14b6b8da86996$var$handleClick","classList","contains","dataset","$b4e14b6b8da86996$var$handleSubmit","preventDefault","$b4e14b6b8da86996$var$handleInput","idToStateKey","subKeys","split","lastKey","pop","key1","next","$df5bef30413a053b$export$b6497f19c886af0e","origin","request","path","body","requestOptions","url","fetch","method","headers","post","data","$b4e14b6b8da86996$var$appRoot","document","getElementById","onbeforeunload"],"version":3,"file":"index.67584a26.js.map"}