{"mappings":"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","sources":["src/utils.ts","src/types.ts","src/state/app.ts","src/lib/renderer.ts","src/components/BlindsButton.ts","src/components/IntroScreen.ts","src/models/session.ts","src/selectors/app.ts","src/components/NewSessionScreen.ts","src/components/NumberInput.ts","src/decorators/session.ts","src/components/ShowSessionScreen.ts","src/components/TipsSection.ts","src/components/SuggestedCasino.ts","src/constants.ts","src/index.ts","src/services/api.ts","src/components/App.ts"],"sourcesContent":["import { PlainObject, Primitive } from './types';\n\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys as <T>(o: T) => (keyof T)[];\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\nexport const isCapitalized = (str: string) => str[0].toUpperCase() === str[0];\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const state = {\n  app: loadAppState(),\n};\n\nexport const setupAppState = (onStateChange: () => void) => {\n  state.app = new Proxy(state.app, {\n    get(target, key, receiver) {\n      if (!Reflect.has(target, key)) {\n        return;\n      }\n\n      const value = Reflect.get(target, key, receiver);\n\n      if (typeof value === 'object' && value !== null) {\n        return new Proxy(value, this);\n      } else {\n        return value;\n      }\n    },\n\n    set(target, key, value, receiver) {\n      const success = Reflect.set(target, key, value, receiver);\n      if (success) {\n        onStateChange();\n      }\n      return success;\n    },\n  });\n\n  onStateChange();\n}\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: state.app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: state.app.cachedAdminPassword,\n    })\n  );\n};\n","import { Writeable } from '../types';\nimport { isCapitalized, keys } from '../utils';\n\ntype EventHandler = (this: HTMLElement, ev: Event) => void;\n\ntype CustomProperties = {\n  onInput: EventHandler;\n  onClick: EventHandler;\n};\n\ntype ElementKeys = Writeable<\n  HTMLElementTagNameMap[keyof HTMLElementTagNameMap]\n>;\n\ntype VirtualElementProps = Partial<ElementKeys & CustomProperties>;\n\n// TODO: This can go away once we stop naming components in render functions.\n// See https://github.com/mhluska/poker-tracker/issues/9\ntype CustomElementType =\n  | 'IntroScreen'\n  | 'NewSessionScreen'\n  | 'ShowSessionScreen'\n  | 'NumberInput'\n  | 'TipsSection'\n  | 'BlindsButton'\n  | 'App';\n\ntype VirtualElement =\n  | {\n      type: keyof HTMLElementTagNameMap | CustomElementType;\n      props: { tagName: keyof HTMLElementTagNameMap } & VirtualElementProps;\n      children: (null | VirtualElement)[];\n    }\n  | {\n      type: 'String';\n      props: { value: string };\n      children: [];\n    };\n\nenum NodeTypes {\n  Element = 1,\n  Text = 3,\n}\n\nenum ElementProperties {\n  Value = 'value',\n  ClassName = 'className',\n}\n\nconst ELEMENT_PROPERTIES = new Set<Partial<ElementKeys>>(\n  Object.values(ElementProperties)\n);\n\nconst EVENT_PROPS: Map<keyof CustomProperties, keyof HTMLElementEventMap> =\n  new Map([\n    ['onInput', 'input'],\n    ['onClick', 'click'],\n  ]);\n\nconst isNativeElementType = (\n  type: string\n): type is keyof HTMLElementTagNameMap => !isCapitalized(type);\n\nconst isElementNode = (node: Node): node is Element =>\n  node.nodeType === NodeTypes.Element;\n\nconst isTextNode = (node: Node): node is Text =>\n  node.nodeType === NodeTypes.Text;\n\nconst createVirtualElementString = (value: string): VirtualElement => ({\n  type: 'String',\n  props: { value },\n  children: [],\n});\n\nexport const createVirtualElement = (\n  type: keyof HTMLElementTagNameMap | CustomElementType,\n  props:\n    | ({ tagName?: keyof HTMLElementTagNameMap } & VirtualElementProps)\n    | null = null,\n  ...children: (null | string | VirtualElement)[]\n): VirtualElement => ({\n  type,\n  props: {\n    ...props,\n    tagName: props?.tagName || (isNativeElementType(type) ? type : 'div'),\n  },\n  children: children.map((child) =>\n    typeof child === 'string' ? createVirtualElementString(child) : child\n  ),\n});\n\nexport const e = createVirtualElement;\n\nconst reconcileEventHandlerProps = (\n  domNode: Element,\n  nativeEventName: string,\n  prevValue: EventHandler | undefined,\n  newValue: EventHandler | undefined\n) => {\n  if (prevValue === newValue) {\n    return;\n  }\n\n  if (prevValue) {\n    domNode.removeEventListener(nativeEventName, prevValue);\n  }\n\n  if (newValue) {\n    domNode.addEventListener(nativeEventName, newValue);\n  }\n};\n\nconst reconcileProps = (\n  domNode: Element,\n  prevNode: VirtualElement | null,\n  newNode: VirtualElement | null\n) => {\n  if (prevNode?.type === 'String' || newNode?.type === 'String') {\n    return;\n  }\n\n  const prevPropKeys = prevNode ? keys(prevNode.props) : [];\n  const newPropKeys = newNode ? keys(newNode.props) : [];\n\n  for (const name of newPropKeys.concat(prevPropKeys)) {\n    const prevValue = prevNode?.props[name];\n    const newValue = newNode?.props[name];\n\n    // HACK: With properties (as opposed to attributes), our crappy virtal DOM\n    // can get out of sync after user input so we just always write.\n    if (ELEMENT_PROPERTIES.has(name)) {\n      // TODO: Fix type `Element` being too generic here.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domNode[name] = newValue === undefined ? '' : newValue;\n      continue;\n    }\n\n    if (prevValue === newValue) {\n      continue;\n    }\n\n    if (name === 'onClick' || name === 'onInput') {\n      const nativeEventName = EVENT_PROPS.get(name);\n\n      if (nativeEventName) {\n        reconcileEventHandlerProps(\n          domNode,\n          nativeEventName,\n          prevNode?.props[name],\n          newNode?.props[name]\n        );\n      }\n\n      continue;\n    }\n\n    if (typeof newValue === 'boolean') {\n      if (newValue) {\n        domNode.setAttribute(name, '');\n      } else {\n        domNode.removeAttribute(name);\n      }\n    } else if (typeof newValue === 'undefined') {\n      domNode.removeAttribute(name);\n    } else {\n      domNode.setAttribute(name, String(newValue));\n    }\n  }\n};\n\nconst createDomNode = (virtualElement: VirtualElement) => {\n  if (virtualElement.type === 'String') {\n    return document.createTextNode(virtualElement.props.value);\n  }\n\n  const { props, children } = virtualElement;\n  const { tagName } = props;\n  const element = document.createElement(tagName);\n\n  reconcileProps(element, null, virtualElement);\n\n  for (const child of children) {\n    if (!child) {\n      continue;\n    }\n\n    const childDomElement = createDomNode(child);\n\n    if (!childDomElement) {\n      continue;\n    }\n\n    element.appendChild(childDomElement);\n  }\n\n  return element;\n};\n\nconst reconcileStrings = (\n  domNode: Element | Text,\n  prevNode: VirtualElement,\n  newNode: VirtualElement\n) => {\n  if (newNode.type !== 'String') {\n    return;\n  }\n\n  if (\n    prevNode.type === 'String' &&\n    prevNode.props.value === newNode.props.value\n  ) {\n    return;\n  }\n\n  if (isElementNode(domNode)) {\n    domNode.parentElement?.replaceChild(createDomNode(newNode), domNode);\n  } else if (isTextNode(domNode)) {\n    domNode.replaceData(0, domNode.length, newNode.props.value);\n  }\n};\n\nexport const reconcile = (\n  domNode: Element | Text | undefined,\n  prevNode: VirtualElement | undefined | null,\n  newNode: VirtualElement | undefined | null,\n  parentElement: Element | Text\n) => {\n  if (!domNode) {\n    if (newNode) {\n      // TODO: This should not append but insert at the correct position in the\n      // row of siblings.\n      parentElement.appendChild(createDomNode(newNode));\n    }\n    return;\n  }\n\n  if (!newNode) {\n    domNode.remove();\n    return;\n  }\n\n  if (!prevNode || prevNode.type !== newNode.type) {\n    parentElement.replaceChild(createDomNode(newNode), domNode);\n    return;\n  }\n\n  if (newNode.type === 'String') {\n    reconcileStrings(domNode, prevNode, newNode);\n    return;\n  } else if (isTextNode(domNode)) {\n    parentElement.replaceChild(createDomNode(newNode), domNode);\n    return;\n  }\n\n  // We are guaranteed to have domNode, prevNode and newNode here.\n  reconcileProps(domNode, prevNode, newNode);\n\n  const domNodeChildren = Array.from(domNode.childNodes).filter(\n    (node) =>\n      node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text\n  ) as (Element | Text)[];\n\n  newNode.children.forEach((newNodeChild, index) => {\n    reconcile(\n      domNodeChildren[index],\n      prevNode.children[index],\n      newNodeChild,\n      domNode\n    );\n  });\n};\n\n// This should mimic the real appRoot node.\nlet prevVirtualElement = createVirtualElement('div');\n\nexport const render = (\n  component: VirtualElement | null,\n  appRoot: HTMLElement | null\n) => {\n  if (!component) {\n    throw new Error('component is null');\n  }\n\n  if (!appRoot) {\n    throw new Error('appRoot is not set');\n  }\n\n  if (!appRoot.parentElement) {\n    throw new Error('appRoot not attached to DOM');\n  }\n\n  const virtualElement = createVirtualElement('div', null, component);\n\n  reconcile(appRoot, prevVirtualElement, virtualElement, appRoot.parentElement);\n\n  prevVirtualElement = virtualElement;\n};\n","import { e } from '../lib/renderer';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton = ({ smallBlind, bigBlind }: Props) =>\n  e(\n    'BlindsButton',\n    {\n      tagName: 'button',\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n","import { e } from '../lib/renderer';\n\nexport const IntroScreen = () => {\n  return e(\n    'IntroScreen',\n    { tagName: 'div', id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  );\n};\n","import { uuid, toISOString } from '../utils';\nimport { state } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    state.app.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return state.app.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { Session } from '../models';\nimport { state, AppState } from '../state';\n\n// TODO: Add automatic caching.\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n  _cachedMostFrequentCasinoName?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n\n  // TODO: Get this using a frecency algorithm.\n  get mostFrequentCasinoName() {\n    if (this._cachedMostFrequentCasinoName) {\n      return this._cachedMostFrequentCasinoName;\n    }\n\n    const casinoName = Object.values(this.appState.sessions)\n      .sort((a, b) =>\n        a.endTime && b.endTime\n          ? Date.parse(b.endTime) - Date.parse(a.endTime)\n          : 1\n      )[0]?.casinoName;\n\n    if (casinoName) {\n      this._cachedMostFrequentCasinoName = casinoName;\n    }\n\n    return casinoName;\n  }\n}\n\nexport const selectors = new Selectors(state.app);\n","import { e } from '../lib/renderer';\nimport { NumberInput, BlindsButton, SuggestedCasino } from '../components';\nimport { state } from '../state';\nimport { appSelectors } from '../selectors';\n\nexport const NewSessionScreen = () => {\n  const handleSelectSuggestedCasino = (casinoName: string) => {\n    state.app.newSessionScreen.casinoName = casinoName;\n  };\n\n  return e(\n    'NewSessionScreen',\n    { tagName: 'div', id: 'new-session-screen', className: 'screen' },\n    SuggestedCasino({ onSelect: handleSelectSuggestedCasino }),\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: appSelectors.mostFrequentCasinoName ?? 'Bellagio',\n            required: true,\n            value: state.app.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          NumberInput({\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: state.app.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          NumberInput({\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: state.app.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        BlindsButton({ smallBlind: 1, bigBlind: 2 }),\n        BlindsButton({ smallBlind: 1, bigBlind: 3 }),\n        BlindsButton({ smallBlind: 2, bigBlind: 5 }),\n        BlindsButton({ smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          NumberInput({\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: state.app.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","import { e } from '../lib/renderer';\n\ntype Props = {\n  placeholder?: string;\n  id?: string;\n  value?: string;\n  min?: number;\n  max?: number;\n  onInput?: (event: Event) => void;\n};\n\nexport const NumberInput = ({ id, placeholder, value, min = 1, max, onInput }: Props) =>\n  e('NumberInput', {\n    tagName: 'input',\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n    onInput,\n  });\n","import { Session as SessionModel } from '../models';\nimport { formatDuration } from '../utils';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n\n  timeElapsed() {\n    if (!this.session.startTime) {\n      return '';\n    }\n\n    return formatDuration(Date.now() - this.session.startTime.getTime());\n  }\n}\n","import { e } from '../lib/renderer';\nimport { NumberInput, TipsSection } from '../components';\nimport { Session as SessionDecorator } from '../decorators';\nimport { appSelectors } from '../selectors';\nimport { state } from '../state';\n\nexport const ShowSessionScreen = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.notes = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleCashoutAmountInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.cashoutAmount = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  return e(\n    'ShowSessionScreen',\n    { tagName: 'div', id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: $${session.startTime()}`)),\n    e('div', null, e('span', null, `Time elapsed: ${session.timeElapsed()}`)),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      NumberInput({\n        id: 'rebuy-amount-input',\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: state.app.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    TipsSection({ type: 'dealer', value: session.dealerTips() }),\n    TipsSection({ type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        NumberInput({\n          min: 0,\n          value: state.app.showSessionScreen.cashoutAmount,\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n          onInput: handleCashoutAmountInput,\n        })\n      ),\n\n      state.app.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: state.app.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","import { e } from '../lib/renderer';\nimport { capitalize } from '../utils';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n};\n\nexport const TipsSection = ({ type, value }: Props) =>\n  e(\n    'TipsSection',\n    { tagName: 'div', className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n","import { e } from '../lib/renderer';\nimport { appSelectors } from '../selectors';\n\ntype Props = {\n  onSelect: (casinoName: string) => void;\n};\n\nexport const SuggestedCasino = ({ onSelect }: Props) => {\n  const casinoName = appSelectors.mostFrequentCasinoName;\n  if (!casinoName) {\n    return null;\n  }\n\n  return e(\n    'div',\n    null,\n    `Play at ${casinoName} again?`,\n    e('button', { onClick: () => onSelect(casinoName) }, 'OK')\n  );\n};\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n","import {\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  objectSet,\n} from './utils';\nimport { App } from './components';\nimport { render } from './lib/renderer';\nimport { setupAppState } from './state';\nimport { Screen } from './types';\nimport { Api } from './services';\nimport { Session } from './models';\nimport { state, saveToLocalStorage } from './state';\nimport { appSelectors } from './selectors';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  state.app.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  state.app.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  state.app.currentSessionId = session.id;\n  state.app.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.rebuy(\n    parseFloat(state.app.showSessionScreen.rebuyAmount)\n  );\n  state.app.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    state.app.newSessionScreen.casinoName,\n    parseInt(state.app.newSessionScreen.smallBlind),\n    parseInt(state.app.newSessionScreen.bigBlind),\n    parseInt(state.app.newSessionScreen.maxBuyin),\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.end(\n    parseFloat(state.app.showSessionScreen.cashoutAmount),\n    state.app.showSessionScreen.notes\n  );\n\n  state.app.showSessionScreen.isSavingSession = true;\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      appSelectors.currentSession,\n      state.app.cachedAdminPassword ?? state.app.showSessionScreen.adminPassword\n    );\n  } finally {\n    state.app.showSessionScreen.isSavingSession = false;\n  }\n\n  if (response.ok) {\n    if (!state.app.cachedAdminPassword) {\n      state.app.cachedAdminPassword = state.app.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    appSelectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  state.app.newSessionScreen.smallBlind = smallBlind;\n  state.app.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  state.app.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return;\n    case 'decrement-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(-1);\n      return;\n    case 'increment-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(1);\n      return;\n    case 'decrement-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(-1);\n      return;\n    case 'increment-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(1);\n      return;\n    case 'rebuy-max-button':\n      appSelectors.currentSession?.rebuyMax();\n      return;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n  }\n};\n\nconst handleSubmit = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      break;\n    case 'rebuy-form':\n      rebuy();\n      break;\n    case 'end-session-form':\n      saveToGoogleSheet();\n      break;\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return;\n  }\n\n  return objectSet(state.app, key, event.target.value);\n};\n\nconst apiService = new Api();\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  setupAppState(() => render(App(), appRoot));\n\n  appRoot.addEventListener('click', handleClick);\n  appRoot.addEventListener('submit', handleSubmit);\n  appRoot.addEventListener('input', handleInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n","import { IntroScreen, NewSessionScreen, ShowSessionScreen } from '.';\nimport { Screen } from '../types';\nimport { state } from '../state';\n\nexport const App = () => {\n  switch (state.app.screen) {\n    case Screen.Intro:\n      return IntroScreen();\n    case Screen.NewSession:\n      return NewSessionScreen();\n    case Screen.ShowSession:\n      return ShowSessionScreen();\n    default:\n      throw new Error(`Unknown screen ${state.app.screen}`);\n  }\n};\n"],"names":["$df5bef30413a053b$export$ed97f33186d4b816","Object","keys","$df5bef30413a053b$export$31b40729666a4ae0","Date","now","toString","Math","random","substring","$df5bef30413a053b$export$c26d41fa6f97693c","object","tagName","$df5bef30413a053b$export$53b83ca8eaab0383","Array","isArray","$df5bef30413a053b$export$dfaaa8705752128f","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","floor","abs","$25746eb61037a613$export$56edef3a554a6277","$25746eb61037a613$export$a98515d67472a41f","$799ee1075ebfd49a$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$799ee1075ebfd49a$export$ca000e230c0caa3e","app","stateItem","window","localStorage","getItem","JSON","parse","sessionPath","location","hash","match","$799ee1075ebfd49a$var$locationToSessionId","screen","sessions","currentSessionId","showSessionScreen","rebuyAmount","notes","cashoutAmount","adminPassword","isSavingSession","newSessionScreen","casinoName","smallBlind","bigBlind","maxBuyin","$799ee1075ebfd49a$var$loadAppState","$799ee1075ebfd49a$export$834fe5a6d8a9c67","onStateChange","Proxy","get","target","key","receiver","Reflect","has","value","this","set","success","$799ee1075ebfd49a$export$1b8cd2d0ef9a8e5d","setItem","stringify","cachedAdminPassword","$0913f1c8cf9ffdbe$var$NodeTypes","NodeTypes","$0913f1c8cf9ffdbe$var$ElementProperties","ElementProperties","$0913f1c8cf9ffdbe$var$ELEMENT_PROPERTIES","Set","values","$0913f1c8cf9ffdbe$var$EVENT_PROPS","Map","$0913f1c8cf9ffdbe$var$isNativeElementType","type","str","toUpperCase","$0913f1c8cf9ffdbe$var$isTextNode","node","nodeType","Text","$0913f1c8cf9ffdbe$export$e1e7a9dd34b01909","props","children","map","child","$0913f1c8cf9ffdbe$export$f1e1789686576879","$0913f1c8cf9ffdbe$var$reconcileEventHandlerProps","domNode","nativeEventName","prevValue","newValue","removeEventListener","addEventListener","$0913f1c8cf9ffdbe$var$reconcileProps","prevNode","newNode","prevPropKeys","newPropKeys","name","concat","undefined","setAttribute","removeAttribute","String","$0913f1c8cf9ffdbe$var$createDomNode","virtualElement","document","createTextNode","element","createElement","childDomElement","appendChild","$0913f1c8cf9ffdbe$var$reconcileStrings","Element","parentElement","replaceChild","replaceData","length","$0913f1c8cf9ffdbe$export$38319cad1f6d89e0","remove","domNodeChildren","from","childNodes","filter","forEach","newNodeChild","index","$0913f1c8cf9ffdbe$var$prevVirtualElement","$9ceabd904cf08d06$export$d7c54a71f8909529","className","$bfeb9d294d2ffc5c$export$327f2520b4698e84","id","$959c11b99bd453e0$export$1fb4852a55678982","static","dealerTips","drinkTips","buyins","constructor","attributes","Error","startTime","endTime","start","push","amount","time","rebuy","toISOString","rebuyMax","end","undoEnd","buyinsTotal","reduce","prev","current","updateTip","change","updateDealerTip","updateDrinkTip","$564d17351e22afa3$export$e1252723db1c541","appState","currentSession","_cachedCurrentSessionId","_cachedCurrentSession","mostFrequentCasinoName","_cachedMostFrequentCasinoName","sort","a","b","$743ad4309d0f81b7$export$4f569ff5903d61c2","$2b416257742c2bf1$export$eb1a1d9ee2289a71","onSelect","placeholder","required","$7a7cb71cad4059ea$export$6bf0cd3a219bbade","max","min","onInput","pattern","$e7e206ea4712806d$export$1fb4852a55678982","session","blinds","title","join","toLocaleString","profit","timeElapsed","ms","seconds","hours","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","$be31a638e58516f0$export$596affaadba118e1","$fdb14842a1041c3a$export$1e4a816d3f9032b4","autocomplete","event","disabled","slice","onClick","$9ecda7333d28e490$export$6bc7b24d4e862158","hostname","Development","Production","$b4e14b6b8da86996$var$createSession","create","parseInt","history","pushState","$b4e14b6b8da86996$var$navigateToShowSessionScreen","$b4e14b6b8da86996$var$saveToGoogleSheet","async","response","parseFloat","$b4e14b6b8da86996$var$apiService","saveSession","ok","alert","$b4e14b6b8da86996$var$handleClick","classList","contains","dataset","$b4e14b6b8da86996$var$handleSubmit","preventDefault","$b4e14b6b8da86996$var$handleInput","idToStateKey","subKeys","split","lastKey","pop","key1","next","$df5bef30413a053b$export$b6497f19c886af0e","origin","request","path","body","requestOptions","url","fetch","method","headers","post","data","$b4e14b6b8da86996$var$appRoot","getElementById","component","appRoot","$0913f1c8cf9ffdbe$export$b3890eb0ae9dca99","$a8e11eb2b4b0680a$export$86fbec116b87613f","setInterval","onbeforeunload"],"version":3,"file":"index.90401171.js.map"}