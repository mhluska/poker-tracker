{"mappings":"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","sources":["src/utils.ts","src/lib/renderer/types.ts","src/lib/renderer/utils.ts","src/lib/renderer/hooks.ts","src/lib/renderer/render.ts","src/types.ts","src/state/app.ts","src/components/App.ts","src/components/BlindsButton.ts","src/components/IntroScreen.ts","src/models/session.ts","src/selectors/app.ts","src/components/NewSessionScreen.ts","src/components/NumberInput.ts","src/decorators/session.ts","src/components/ShowSessionScreen.ts","src/components/TipsSection.ts","src/components/SuggestedCasino.ts","src/components/Timer.ts","src/constants.ts","src/index.ts","src/services/api.ts"],"sourcesContent":["import { PlainObject, Primitive } from './types';\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport type ElementKeys = Writeable<\n  HTMLElementTagNameMap[keyof HTMLElementTagNameMap]\n>;\n\nexport type EventHandler = (this: HTMLElement, ev: Event) => void;\n\nexport type CustomProperties = {\n  onInput: EventHandler;\n  onClick: EventHandler;\n};\n\nexport type VirtualElementProps = Partial<ElementKeys & CustomProperties>;\n\nexport type VirtualNativeElement = {\n  type: keyof HTMLElementTagNameMap;\n  props: VirtualElementProps;\n  children: (null | VirtualElement)[];\n};\n\nexport type VirtualFunctionElement<Props = unknown> = {\n  type: FunctionComponent<Props>;\n  props: VirtualElementProps;\n  result: null | VirtualFunctionElement | VirtualNativeElement;\n};\n\nexport type VirtualStringElement = {\n  type: 'String';\n  value: string;\n};\n\nexport type VirtualElement<Props = unknown> =\n  | VirtualNativeElement\n  | VirtualFunctionElement<Props>\n  | VirtualStringElement;\n\nexport type FunctionComponent<Props = void> = Props extends void\n  ? () => null | VirtualNativeElement | VirtualFunctionElement<void>\n  : (\n      props: Props\n    ) => null | VirtualNativeElement | VirtualFunctionElement<Props>;\n\nexport type FC<Props> = FunctionComponent<Props>;\n\nexport enum NodeTypes {\n  Element = 1,\n  Text = 3,\n}\n","import {\n  Primitive,\n  VirtualElement,\n  VirtualFunctionElement,\n  VirtualStringElement,\n  VirtualNativeElement,\n  NodeTypes\n} from './types';\n\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys as <T>(o: T) => (keyof T)[];\n\nexport const isVirtualFunctionElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualFunctionElement =>\n  typeof virtualElement.type === 'function';\n\nexport const isVirtualStringElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualStringElement => virtualElement.type === 'String';\n\nexport const isVirtualNativeElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualNativeElement =>\n  !isVirtualStringElement(virtualElement) &&\n  !isVirtualFunctionElement(virtualElement);\n\nexport const isElementNode = (node: Node): node is Element =>\n  node.nodeType === NodeTypes.Element;\n\nexport const isTextNode = (node: Node): node is Text =>\n  node.nodeType === NodeTypes.Text;\n\nexport const replaceNode = (\n  node: Text | Element,\n  newNode: Text | HTMLElement | null\n) => {\n  if (!newNode) {\n    return;\n  }\n\n  node.parentElement?.replaceChild(newNode, node);\n};\n\nexport const arraysEqual = (arr1: Primitive[], arr2: Primitive[]) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import { Primitive, FunctionComponent, VirtualFunctionElement } from './types';\nimport { arraysEqual } from './utils';\n\ntype Effect = {\n  callback: () => void;\n  unmountCallback: void | (() => void);\n  dependencies: Primitive[];\n};\n\ntype HookData<T> = {\n  [key in keyof T]: T[key];\n};\n\ntype UseStateData = HookData<{ value: unknown }>;\n\nlet currentComponent: FunctionComponent<unknown>;\nlet currentForceRender: () => void;\n\n// TODO: Since hooks should always fire in the same order, we could just push\n// all hook data onto a single array with an index that increments per call.\n// That way we don't keep in memory other hooks data when we don't need to.\nconst hooks = {\n  useState: new Map<FunctionComponent<unknown>, UseStateData[]>(),\n  useEffect: new Map<FunctionComponent<unknown>, HookData<Effect>[]>(),\n};\n\n// Calls callback if dependencies change between renders.\nexport const useEffect = (\n  callback: Effect['callback'],\n  dependencies: Effect['dependencies']\n) => {\n  const componentEffects = hooks.useEffect.get(currentComponent) || [];\n\n  componentEffects.push({\n    callback,\n    dependencies,\n    unmountCallback: undefined,\n  });\n\n  hooks.useEffect.set(currentComponent, componentEffects);\n};\n\n// TODO: This should be a special case of `useReducer` once it's implemented.\nexport const useState = <T>(initialValue: T): [T, (value: T) => void] => {\n  let componentHookData = hooks.useState.get(currentComponent);\n  if (!componentHookData) {\n    componentHookData = [{ value: initialValue }];\n    hooks.useState.set(currentComponent, componentHookData);\n  }\n\n  // TODO: Make this work with multiple useState calls.\n  const hook = componentHookData[componentHookData.length - 1];\n\n  const setState = (value: T) => {\n    if (hook.value !== value) {\n      hook.value = value;\n\n      // We could end up here during the current render. That means we'd kick\n      // off another render before the DOM has finished updating. So we use\n      // `requestIdleCallback` to ensure the next render runs after the current\n      // one is complete.\n      // TODO: Once fibers are implemented, this can go away.\n      window.requestIdleCallback(currentForceRender);\n    }\n  };\n\n  // TODO: Can we avoid the cast here? Otherwise value would be `unknown`\n  // because of the `hooks.useState` definition above.\n  return [hook.value as T, setState];\n};\n\nexport const mountWithHooks = (\n  virtualElement: VirtualFunctionElement,\n  forceRender: () => void\n) => {\n  currentComponent = virtualElement.type;\n  currentForceRender = forceRender;\n\n  const prevEffects = hooks.useEffect.get(virtualElement.type);\n\n  // Repopulates after calling the function component below.\n  hooks.useEffect.delete(virtualElement.type);\n\n  virtualElement.result = virtualElement.type(virtualElement.props);\n\n  const currentUseEffectCalls = hooks.useEffect.get(currentComponent);\n\n  if (!currentUseEffectCalls || currentUseEffectCalls.length === 0) {\n    return virtualElement.result;\n  }\n\n  currentUseEffectCalls.forEach((nextEffect, index) => {\n    const prevEffect = prevEffects?.[index];\n\n    if (\n      prevEffect &&\n      arraysEqual(prevEffect.dependencies, nextEffect.dependencies)\n    ) {\n      nextEffect.unmountCallback = prevEffect.unmountCallback;\n    } else {\n      nextEffect.unmountCallback = nextEffect.callback();\n    }\n  });\n\n  return virtualElement.result;\n};\n\nexport const unmountWithHooks = (virtualElement: VirtualFunctionElement) => {\n  const componentEffects = hooks.useEffect.get(virtualElement.type);\n  if (!componentEffects) {\n    return virtualElement.result;\n  }\n\n  for (const { unmountCallback } of componentEffects) {\n    if (unmountCallback) {\n      unmountCallback();\n    }\n  }\n\n  hooks.useEffect.delete(virtualElement.type);\n  hooks.useState.delete(virtualElement.type);\n\n  return virtualElement.result;\n};\n","import {\n  FunctionComponent,\n  ElementKeys,\n  CustomProperties,\n  VirtualStringElement,\n  VirtualElement,\n  VirtualFunctionElement,\n  VirtualElementProps,\n  VirtualNativeElement,\n  EventHandler,\n  NodeTypes,\n} from './types';\nimport {\n  keys,\n  isVirtualFunctionElement,\n  isVirtualNativeElement,\n  isTextNode,\n  isElementNode,\n  replaceNode,\n} from './utils';\nimport { mountWithHooks, unmountWithHooks } from './hooks';\n\nenum ElementProperties {\n  Value = 'value',\n  ClassName = 'className',\n}\n\nconst ELEMENT_PROPERTIES = new Set<Partial<ElementKeys>>(\n  Object.values(ElementProperties)\n);\n\nconst EVENT_PROPS: Map<keyof CustomProperties, keyof HTMLElementEventMap> =\n  new Map([\n    ['onInput', 'input'],\n    ['onClick', 'click'],\n  ]);\n\nconst createVirtualStringElement = (value: string): VirtualStringElement => ({\n  type: 'String',\n  value,\n});\n\nexport function createVirtualElement<Props, ChildProps>(\n  type: FunctionComponent<Props>,\n  props?: Props,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n): VirtualFunctionElement<Props>;\n\nexport function createVirtualElement<ChildProps>(\n  type: keyof HTMLElementTagNameMap,\n  props?: VirtualElementProps | null,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n): VirtualNativeElement;\n\nexport function createVirtualElement<Props, ChildProps>(\n  type: FunctionComponent<Props> | keyof HTMLElementTagNameMap,\n  props?: Props | VirtualElementProps | null,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n) {\n  return typeof type === 'function'\n    ? ({\n        type,\n        props: props || {},\n        result: null,\n      } as VirtualFunctionElement<Props>)\n    : ({\n        type,\n        props: {\n          ...props,\n          tagName: type || 'div',\n        },\n        children: children.map((child) =>\n          typeof child === 'string' ? createVirtualStringElement(child) : child\n        ),\n      } as VirtualNativeElement);\n}\n\nexport const e = createVirtualElement;\n\nconst reconcileEventHandlerProps = (\n  domNode: Element,\n  nativeEventName: string,\n  prevValue: EventHandler | undefined,\n  newValue: EventHandler | undefined\n) => {\n  if (prevValue === newValue) {\n    return;\n  }\n\n  if (prevValue) {\n    domNode.removeEventListener(nativeEventName, prevValue);\n  }\n\n  if (newValue) {\n    domNode.addEventListener(nativeEventName, newValue);\n  }\n};\n\nconst reconcileProps = (\n  domNode: Element,\n  prevNode: VirtualElement | null,\n  newNode: VirtualElement | null\n) => {\n  if (prevNode?.type === 'String' || newNode?.type === 'String') {\n    return;\n  }\n\n  const prevPropKeys = prevNode ? keys(prevNode.props) : [];\n  const newPropKeys = newNode ? keys(newNode.props) : [];\n\n  for (const name of newPropKeys.concat(prevPropKeys)) {\n    const prevValue = prevNode?.props[name];\n    const newValue = newNode?.props[name];\n\n    // HACK: With properties (as opposed to attributes), our crappy virtal DOM\n    // can get out of sync after user input so we just always write.\n    if (ELEMENT_PROPERTIES.has(name)) {\n      // TODO: Fix type `Element` being too generic here.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domNode[name] = newValue === undefined ? '' : newValue;\n      continue;\n    }\n\n    if (prevValue === newValue) {\n      continue;\n    }\n\n    if (name === 'onClick' || name === 'onInput') {\n      const nativeEventName = EVENT_PROPS.get(name);\n\n      if (nativeEventName) {\n        reconcileEventHandlerProps(\n          domNode,\n          nativeEventName,\n          prevNode?.props[name],\n          newNode?.props[name]\n        );\n      }\n\n      continue;\n    }\n\n    if (typeof newValue === 'boolean') {\n      if (newValue) {\n        domNode.setAttribute(name, '');\n      } else {\n        domNode.removeAttribute(name);\n      }\n    } else if (typeof newValue === 'undefined') {\n      domNode.removeAttribute(name);\n    } else {\n      domNode.setAttribute(name, String(newValue));\n    }\n  }\n};\n\nconst createDomNode = (\n  virtualElement: VirtualElement | null\n): Text | HTMLElement | null => {\n  if (!virtualElement) {\n    return null;\n  }\n\n  if (virtualElement.type === 'String') {\n    return document.createTextNode(virtualElement.value);\n  }\n\n  if (isVirtualFunctionElement(virtualElement)) {\n    return createDomNode(mountWithHooks(virtualElement, forceRender));\n  }\n\n  const { children, type: tagName } = virtualElement;\n  const element = document.createElement(tagName);\n\n  reconcileProps(element, null, virtualElement);\n\n  for (const child of children) {\n    if (!child) {\n      continue;\n    }\n\n    const childDomElement = createDomNode(child);\n\n    if (!childDomElement) {\n      continue;\n    }\n\n    element.appendChild(childDomElement);\n  }\n\n  return element;\n};\n\nconst reconcileStrings = (\n  domNode: Element | Text,\n  prevNode: VirtualStringElement,\n  newNode: VirtualStringElement\n) => {\n  if (prevNode.value === newNode.value) {\n    return;\n  }\n\n  if (isElementNode(domNode)) {\n    replaceNode(domNode, createDomNode(newNode));\n  } else if (isTextNode(domNode)) {\n    domNode.replaceData(0, domNode.length, newNode.value);\n  }\n};\n\nexport const reconcile = (\n  domNode: Element | Text,\n  prevNode: VirtualElement | undefined | null,\n  newNode: VirtualElement | undefined | null\n) => {\n  if (!newNode) {\n    domNode.remove();\n    return;\n  }\n\n  if (!prevNode || prevNode.type !== newNode.type) {\n    if (prevNode && isVirtualFunctionElement(prevNode)) {\n      // TODO: This should happen recursively for all child nodes being removed.\n      unmountWithHooks(prevNode);\n    }\n\n    replaceNode(domNode, createDomNode(newNode));\n    return;\n  }\n\n  // We needlessly have to repeatedly check the type of `prevNode` here even\n  // though we ensure that both types are the same above.\n  // See https://stackoverflow.com/questions/71397541\n  if (prevNode.type === 'String' && newNode.type === 'String') {\n    reconcileStrings(domNode, prevNode, newNode);\n    return;\n  }\n\n  if (isTextNode(domNode)) {\n    replaceNode(domNode, createDomNode(newNode));\n    return;\n  }\n\n  if (isVirtualFunctionElement(prevNode) && isVirtualFunctionElement(newNode)) {\n    reconcile(\n      domNode,\n      prevNode.result,\n      mountWithHooks(newNode, forceRender)\n    );\n    return;\n  }\n\n  if (isVirtualNativeElement(prevNode) && isVirtualNativeElement(newNode)) {\n    reconcileProps(domNode, prevNode, newNode);\n\n    const domNodeChildren = Array.from(domNode.childNodes).filter(\n      (node) =>\n        node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text\n    ) as (Element | Text)[];\n\n    newNode.children.forEach((newNodeChild, index) => {\n      const domNodeChild = domNodeChildren[index];\n\n      if (domNodeChild) {\n        reconcile(domNodeChild, prevNode.children[index], newNodeChild);\n      } else if (newNodeChild) {\n        const node = createDomNode(newNodeChild);\n        if (node) {\n          domNode.appendChild(node);\n        }\n      }\n    });\n  }\n};\n\nlet prevVirtualElement: VirtualElement = createVirtualElement('div');\nlet forceRender: () => void;\n\n// TODO: Add `createRoot` function instead.\nexport const render = (\n  component: VirtualNativeElement | VirtualFunctionElement,\n  appRoot: HTMLElement\n) => {\n  const virtualElement = createVirtualElement('div', null, component);\n\n  // We cache this for use in `mountWithHooks` (the `useState` hook needs to be\n  // able to trigger renders).\n  // TODO: Add the ability to do a partial render. We'd need to stop comparing\n  // the prev virtual DOM against current and instead just compare the real DOM\n  // against the current.\n  forceRender = () => render(component, appRoot);\n\n  reconcile(appRoot, prevVirtualElement, virtualElement);\n\n  prevVirtualElement = virtualElement;\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const state = {\n  app: loadAppState(),\n};\n\nexport const setupAppState = (onStateChange: () => void) => {\n  state.app = new Proxy(state.app, {\n    get(target, key, receiver) {\n      if (!Reflect.has(target, key)) {\n        return;\n      }\n\n      const value = Reflect.get(target, key, receiver);\n\n      if (typeof value === 'object' && value !== null) {\n        return new Proxy(value, this);\n      } else {\n        return value;\n      }\n    },\n\n    set(target, key, value, receiver) {\n      const success = Reflect.set(target, key, value, receiver);\n      if (success) {\n        onStateChange();\n      }\n      return success;\n    },\n  });\n\n  onStateChange();\n}\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: state.app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: state.app.cachedAdminPassword,\n    })\n  );\n};\n","import { FunctionComponent, e } from '../lib/renderer';\nimport { IntroScreen, NewSessionScreen, ShowSessionScreen } from '.';\nimport { Screen } from '../types';\nimport { state } from '../state';\n\nexport const App: FunctionComponent = () => {\n  switch (state.app.screen) {\n    case Screen.Intro:\n      return e(IntroScreen);\n    case Screen.NewSession:\n      return e(NewSessionScreen);\n    case Screen.ShowSession:\n      return e(ShowSessionScreen);\n    default:\n      throw new Error(`Unknown screen ${state.app.screen}`);\n  }\n};\n","import { e, FunctionComponent } from '../lib/renderer';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton: FunctionComponent<Props> = ({\n  smallBlind,\n  bigBlind,\n}) =>\n  e(\n    'button',\n    {\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n","import { e } from '../lib/renderer';\n\nexport const IntroScreen = () => (\n  e(\n    'div',\n    { id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  )\n);\n","import { uuid, toISOString } from '../utils';\nimport { state } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    state.app.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return state.app.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { Session } from '../models';\nimport { state, AppState } from '../state';\n\n// TODO: Add automatic caching.\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n  _cachedMostFrequentCasinoName?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n\n  // TODO: Get this using a frecency algorithm.\n  get mostFrequentCasinoName() {\n    if (this._cachedMostFrequentCasinoName) {\n      return this._cachedMostFrequentCasinoName;\n    }\n\n    const casinoName = Object.values(this.appState.sessions)\n      .sort((a, b) =>\n        a.endTime && b.endTime\n          ? Date.parse(b.endTime) - Date.parse(a.endTime)\n          : 1\n      )[0]?.casinoName;\n\n    if (casinoName) {\n      this._cachedMostFrequentCasinoName = casinoName;\n    }\n\n    return casinoName;\n  }\n}\n\nexport const selectors = new Selectors(state.app);\n","import { e } from '../lib/renderer';\nimport { NumberInput, BlindsButton, SuggestedCasino } from '../components';\nimport { state } from '../state';\nimport { appSelectors } from '../selectors';\n\nexport const NewSessionScreen = () => {\n  const handleSelectSuggestedCasino = (casinoName: string) => {\n    state.app.newSessionScreen.casinoName = casinoName;\n  };\n\n  return e(\n    'div',\n    { id: 'new-session-screen', className: 'screen' },\n    e(SuggestedCasino, { onSelect: handleSelectSuggestedCasino }),\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: appSelectors.mostFrequentCasinoName ?? 'Bellagio',\n            required: true,\n            value: state.app.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          e(NumberInput, {\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: state.app.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          e(NumberInput, {\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: state.app.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 2 }),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 3 }),\n        e(BlindsButton, { smallBlind: 2, bigBlind: 5 }),\n        e(BlindsButton, { smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          e(NumberInput, {\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: state.app.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","import { e, FunctionComponent } from '../lib/renderer';\n\ntype Props = {\n  placeholder?: string;\n  id?: string;\n  value?: string;\n  min?: number;\n  max?: number;\n  onInput?: (event: Event) => void;\n};\n\nexport const NumberInput: FunctionComponent<Props> = ({\n  id,\n  placeholder,\n  value,\n  min = 1,\n  max,\n  onInput,\n}) =>\n  e('input', {\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n    onInput,\n  });\n","import { Session as SessionModel } from '../models';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n\n  timeElapsed() {\n    if (!this.session.startTime) {\n      return '';\n    }\n\n    return ;\n  }\n}\n","import { e, FunctionComponent } from '../lib/renderer';\nimport { NumberInput, TipsSection, Timer } from '../components';\nimport { Session as SessionDecorator } from '../decorators';\nimport { appSelectors } from '../selectors';\nimport { state } from '../state';\n\nexport const ShowSessionScreen: FunctionComponent = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.notes = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleCashoutAmountInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.cashoutAmount = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  return e(\n    'div',\n    { id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: ${session.startTime()}`)),\n    appSelectors.currentSession.startTime &&\n      e(\n        'div',\n        null,\n        e(\n          'span',\n          null,\n          'Time elapsed: ',\n          e(Timer, { startTime: appSelectors.currentSession.startTime })\n        )\n      ),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      e(NumberInput, {\n        id: 'rebuy-amount-input',\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: state.app.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    e(TipsSection, { type: 'dealer', value: session.dealerTips() }),\n    e(TipsSection, { type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        e(NumberInput, {\n          min: 0,\n          value: state.app.showSessionScreen.cashoutAmount,\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n          onInput: handleCashoutAmountInput,\n        })\n      ),\n\n      state.app.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: state.app.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","import { e, FunctionComponent } from '../lib/renderer';\nimport { capitalize } from '../utils';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n};\n\nexport const TipsSection: FunctionComponent<Props> = ({ type, value }) =>\n  e(\n    'div',\n    { className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n","import { e, FunctionComponent } from '../lib/renderer';\nimport { appSelectors } from '../selectors';\n\ntype Props = {\n  onSelect: (casinoName: string) => void;\n};\n\nexport const SuggestedCasino: FunctionComponent<Props> = ({ onSelect }) => {\n  const casinoName = appSelectors.mostFrequentCasinoName;\n  if (!casinoName) {\n    return null;\n  }\n\n  return e(\n    'div',\n    null,\n    `Play at ${casinoName} again?`,\n    e('button', { onClick: () => onSelect(casinoName) }, 'OK')\n  );\n};\n","import { e, useState, useEffect, FunctionComponent } from '../lib/renderer';\nimport { formatDuration } from '../utils';\n\ntype Props = {\n  startTime: Date;\n};\n\nconst MILLISECONDS_IN_ONE_SECOND = 1000;\n\nexport const Timer: FunctionComponent<Props> = ({ startTime }) => {\n  const [timeElaped, setTimeElapsed] = useState('');\n\n  useEffect(() => {\n    const updateTimeElapsed = () => {\n      setTimeElapsed(formatDuration(Date.now() - startTime.getTime()));\n    };\n\n    setInterval(updateTimeElapsed, MILLISECONDS_IN_ONE_SECOND);\n    updateTimeElapsed();\n  }, []);\n\n  return e('span', null, timeElaped.toString());\n};\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n","import {\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  objectSet,\n} from './utils';\nimport { App } from './components';\nimport { render, e } from './lib/renderer';\nimport { setupAppState } from './state';\nimport { Screen } from './types';\nimport { Api } from './services';\nimport { Session } from './models';\nimport { state, saveToLocalStorage } from './state';\nimport { appSelectors } from './selectors';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  state.app.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  state.app.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  state.app.currentSessionId = session.id;\n  state.app.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.rebuy(\n    parseFloat(state.app.showSessionScreen.rebuyAmount)\n  );\n  state.app.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    state.app.newSessionScreen.casinoName,\n    parseInt(state.app.newSessionScreen.smallBlind),\n    parseInt(state.app.newSessionScreen.bigBlind),\n    parseInt(state.app.newSessionScreen.maxBuyin),\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.end(\n    parseFloat(state.app.showSessionScreen.cashoutAmount),\n    state.app.showSessionScreen.notes\n  );\n\n  state.app.showSessionScreen.isSavingSession = true;\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      appSelectors.currentSession,\n      state.app.cachedAdminPassword ?? state.app.showSessionScreen.adminPassword\n    );\n  } finally {\n    state.app.showSessionScreen.isSavingSession = false;\n  }\n\n  if (response.ok) {\n    if (!state.app.cachedAdminPassword) {\n      state.app.cachedAdminPassword = state.app.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    appSelectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  state.app.newSessionScreen.smallBlind = smallBlind;\n  state.app.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  state.app.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return;\n    case 'decrement-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(-1);\n      return;\n    case 'increment-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(1);\n      return;\n    case 'decrement-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(-1);\n      return;\n    case 'increment-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(1);\n      return;\n    case 'rebuy-max-button':\n      appSelectors.currentSession?.rebuyMax();\n      return;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n  }\n};\n\nconst handleSubmit = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      break;\n    case 'rebuy-form':\n      rebuy();\n      break;\n    case 'end-session-form':\n      saveToGoogleSheet();\n      break;\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return;\n  }\n\n  return objectSet(state.app, key, event.target.value);\n};\n\nconst apiService = new Api();\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  setupAppState(() => render(e(App), appRoot));\n\n  appRoot.addEventListener('click', handleClick);\n  appRoot.addEventListener('submit', handleSubmit);\n  appRoot.addEventListener('input', handleInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n"],"names":["$df5bef30413a053b$export$31b40729666a4ae0","Date","now","toString","Math","random","substring","$df5bef30413a053b$export$c26d41fa6f97693c","object","tagName","$df5bef30413a053b$export$53b83ca8eaab0383","Array","isArray","$df5bef30413a053b$export$dfaaa8705752128f","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","floor","abs","$c533ba33b823fc3c$export$2ed9472effad1b70","$599b053ec5c6aab6$export$ed97f33186d4b816","Object","keys","$599b053ec5c6aab6$export$1f142f2b4209d4fb","virtualElement","type","$599b053ec5c6aab6$export$c3bf1ddc270d7633","$599b053ec5c6aab6$export$8e6ee0da8e48457","$599b053ec5c6aab6$export$ccbedd67ef6e9417","node","nodeType","Text","$599b053ec5c6aab6$export$5542201de9311ab2","newNode","parentElement","replaceChild","$dde322830d98cc84$var$currentComponent","$dde322830d98cc84$var$currentForceRender","$dde322830d98cc84$var$hooks","useState","Map","useEffect","$dde322830d98cc84$export$1f54128a3b72f976","forceRender","prevEffects","get","delete","result","props","currentUseEffectCalls","length","forEach","nextEffect","index","prevEffect","arr1","arr2","i","$599b053ec5c6aab6$export$234180f8206db11b","dependencies","unmountCallback","callback","$c7d33fbfd6a74191$var$ElementProperties","ElementProperties","$c7d33fbfd6a74191$var$ELEMENT_PROPERTIES","Set","values","$c7d33fbfd6a74191$var$EVENT_PROPS","$c7d33fbfd6a74191$export$e1e7a9dd34b01909","children","map","child","value","$c7d33fbfd6a74191$export$f1e1789686576879","$c7d33fbfd6a74191$var$reconcileEventHandlerProps","domNode","nativeEventName","prevValue","newValue","removeEventListener","addEventListener","$c7d33fbfd6a74191$var$reconcileProps","prevNode","prevPropKeys","newPropKeys","name","concat","has","undefined","setAttribute","removeAttribute","String","$c7d33fbfd6a74191$var$createDomNode","document","createTextNode","$c7d33fbfd6a74191$var$forceRender","element","createElement","childDomElement","appendChild","$c7d33fbfd6a74191$var$reconcileStrings","Element","replaceData","$c7d33fbfd6a74191$export$38319cad1f6d89e0","componentEffects","$dde322830d98cc84$export$5dbc7eba4ac92ab9","domNodeChildren","from","childNodes","filter","newNodeChild","domNodeChild","remove","$c7d33fbfd6a74191$var$prevVirtualElement","$c7d33fbfd6a74191$export$b3890eb0ae9dca99","component","appRoot","$25746eb61037a613$export$56edef3a554a6277","$25746eb61037a613$export$a98515d67472a41f","$799ee1075ebfd49a$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$799ee1075ebfd49a$export$ca000e230c0caa3e","app","stateItem","window","localStorage","getItem","JSON","parse","sessionPath","location","hash","match","$799ee1075ebfd49a$var$locationToSessionId","screen","sessions","currentSessionId","showSessionScreen","rebuyAmount","notes","cashoutAmount","adminPassword","isSavingSession","newSessionScreen","casinoName","smallBlind","bigBlind","maxBuyin","$799ee1075ebfd49a$var$loadAppState","$799ee1075ebfd49a$export$834fe5a6d8a9c67","onStateChange","Proxy","target","key","receiver","Reflect","this","set","success","$799ee1075ebfd49a$export$1b8cd2d0ef9a8e5d","setItem","stringify","cachedAdminPassword","$a8e11eb2b4b0680a$export$86fbec116b87613f","$bfeb9d294d2ffc5c$export$327f2520b4698e84","$743ad4309d0f81b7$export$4f569ff5903d61c2","$be31a638e58516f0$export$596affaadba118e1","Error","$9ceabd904cf08d06$export$d7c54a71f8909529","className","id","$959c11b99bd453e0$export$1fb4852a55678982","static","dealerTips","drinkTips","buyins","constructor","attributes","startTime","endTime","start","push","amount","time","rebuy","toISOString","rebuyMax","end","undoEnd","buyinsTotal","reduce","prev","current","updateTip","change","updateDealerTip","updateDrinkTip","$564d17351e22afa3$export$e1252723db1c541","appState","currentSession","_cachedCurrentSessionId","_cachedCurrentSession","mostFrequentCasinoName","_cachedMostFrequentCasinoName","sort","a","b","$2b416257742c2bf1$export$eb1a1d9ee2289a71","onSelect","placeholder","required","$7a7cb71cad4059ea$export$6bf0cd3a219bbade","max","min","onInput","pattern","$e7e206ea4712806d$export$1fb4852a55678982","session","blinds","title","join","toLocaleString","profit","timeElapsed","$e17aeff11cabeb07$export$c57e9b2d8b9e4de","$fdb14842a1041c3a$export$1e4a816d3f9032b4","autocomplete","event","disabled","str","toUpperCase","slice","onClick","timeElaped","setTimeElapsed","initialValue","componentHookData","hook","requestIdleCallback","$dde322830d98cc84$export$60241385465d0a34","$dde322830d98cc84$export$6d9c69b0de29b591","updateTimeElapsed","ms","seconds","hours","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","setInterval","$9ecda7333d28e490$export$6bc7b24d4e862158","hostname","Development","Production","$b4e14b6b8da86996$var$createSession","create","parseInt","history","pushState","$b4e14b6b8da86996$var$navigateToShowSessionScreen","$b4e14b6b8da86996$var$saveToGoogleSheet","async","response","parseFloat","$b4e14b6b8da86996$var$apiService","saveSession","ok","alert","$b4e14b6b8da86996$var$handleClick","classList","contains","dataset","$b4e14b6b8da86996$var$handleSubmit","preventDefault","$b4e14b6b8da86996$var$handleInput","idToStateKey","subKeys","split","lastKey","pop","key1","next","$df5bef30413a053b$export$b6497f19c886af0e","origin","request","path","body","requestOptions","url","fetch","method","headers","post","data","$b4e14b6b8da86996$var$appRoot","getElementById","onbeforeunload"],"version":3,"file":"index.0a62ad34.js.map"}