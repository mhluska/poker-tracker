{"mappings":"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","sources":["src/utils.ts","src/types.ts","src/state/app.ts","src/components/App.ts","src/lib/renderer.ts","src/components/BlindsButton.ts","src/components/IntroScreen.ts","src/components/NewSessionScreen.ts","src/components/NumberInput.ts","src/decorators/session.ts","src/models/session.ts","src/selectors/app.ts","src/components/ShowSessionScreen.ts","src/components/TipsSection.ts","src/constants.ts","src/index.ts","src/services/api.ts"],"sourcesContent":["import { PlainObject, Primitive } from './types';\n\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys as <T>(o: T) => (keyof T)[];\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\nexport const isCapitalized = (str: string) => str[0].toUpperCase() === str[0];\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const app = loadAppState();\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: app.cachedAdminPassword,\n    })\n  );\n};\n","import { IntroScreen, NewSessionScreen, ShowSessionScreen } from '.';\nimport { Screen } from '../types';\nimport { appState } from '../state';\n\nexport const App = () => {\n  switch (appState.screen) {\n    case Screen.Intro:\n      return IntroScreen();\n    case Screen.NewSession:\n      return NewSessionScreen();\n    case Screen.ShowSession:\n      return ShowSessionScreen();\n    default:\n      throw new Error(`Unknown screen ${appState.screen}`);\n  }\n};\n","import { Writeable } from '../types';\nimport { isCapitalized, keys } from '../utils';\n\ntype CustomProperties = {\n  onInput: NonNullable<GlobalEventHandlers['oninput']>;\n};\n\ntype EventPropDescription = {\n  propName: keyof CustomProperties;\n  nativeEventName: string;\n  supportedElements: Set<keyof HTMLElementTagNameMap>;\n};\n\ntype ElementProperties = Writeable<\n  HTMLElementTagNameMap[keyof HTMLElementTagNameMap]\n>;\n\ntype VirtualElementProps = Partial<ElementProperties & CustomProperties>;\n\n// TODO: This can go away once we stop naming components in render functions.\n// See https://github.com/mhluska/poker-tracker/issues/9\ntype CustomElementType =\n  | 'IntroScreen'\n  | 'NewSessionScreen'\n  | 'ShowSessionScreen'\n  | 'NumberInput'\n  | 'TipsSection'\n  | 'BlindsButton'\n  | 'App';\n\ntype VirtualElement =\n  | {\n      type: keyof HTMLElementTagNameMap | CustomElementType;\n      props: { tagName: keyof HTMLElementTagNameMap } & VirtualElementProps;\n      children: VirtualElement[];\n    }\n  | {\n      type: 'String';\n      props: { value: string };\n      children: [];\n    };\n\nenum NodeTypes {\n  Element = 1,\n  Text = 3,\n}\n\nconst ELEMENT_PROPERTIES = new Set(['value', 'className']);\nconst EVENT_PROPS: Record<string, EventPropDescription> = {\n  onInput: {\n    propName: 'onInput',\n    nativeEventName: 'input',\n    supportedElements: new Set(['input', 'select', 'textarea']),\n  },\n};\n\nconst isNativeElementType = (\n  type: string\n): type is keyof HTMLElementTagNameMap => !isCapitalized(type);\n\nconst isElementNode = (node: Node): node is Element =>\n  node.nodeType === NodeTypes.Element;\n\nconst isTextNode = (node: Node): node is Text =>\n  node.nodeType === NodeTypes.Text;\n\nconst createVirtualElementString = (value: string): VirtualElement => ({\n  type: 'String',\n  props: { value },\n  children: [],\n});\n\nexport const createVirtualElement = (\n  type: keyof HTMLElementTagNameMap | CustomElementType,\n  props:\n    | ({ tagName?: keyof HTMLElementTagNameMap } & VirtualElementProps)\n    | null = null,\n  ...children: (string | VirtualElement)[]\n): VirtualElement => ({\n  type,\n  props: {\n    ...props,\n    tagName: props?.tagName || (isNativeElementType(type) ? type : 'div'),\n  },\n  children: children.map((child) =>\n    typeof child === 'string' ? createVirtualElementString(child) : child\n  ),\n});\n\nexport const e = createVirtualElement;\n\nconst createDomNode = (virtualElement: VirtualElement) => {\n  if (virtualElement.type === 'String') {\n    return document.createTextNode(virtualElement.props.value);\n  }\n\n  const { props, children } = virtualElement;\n  const { tagName } = props;\n  const element = document.createElement(tagName);\n\n  if (props) {\n    for (const name of keys(props)) {\n      if (name === 'tagName') {\n        continue;\n      }\n\n      const value = props[name];\n\n      if (EVENT_PROPS[name]) {\n        if (EVENT_PROPS[name].supportedElements.has(tagName)) {\n          // TODO: Can we avoid a typecast here?\n          element.addEventListener(\n            EVENT_PROPS[name].nativeEventName,\n            value as EventListener\n          );\n          continue;\n        } else {\n          throw new Error(`Added onInput to invalid element type ${tagName}`);\n        }\n      }\n\n      if (ELEMENT_PROPERTIES.has(name)) {\n        // TODO: Figure out why an error related to readonly properties is\n        // happening despite using `Writeable`.\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        element[name] = value;\n      } else {\n        if (typeof value === 'boolean') {\n          if (value) {\n            element.setAttribute(name, '');\n          }\n        } else {\n          element.setAttribute(name, String(value));\n        }\n      }\n    }\n  }\n\n  for (const child of children) {\n    const childDomElement = createDomNode(child);\n\n    if (!childDomElement) {\n      continue;\n    }\n\n    element.appendChild(childDomElement);\n  }\n\n  return element;\n};\n\nconst reconcileEventHandlerProps = (\n  domNode: Element,\n  propName: keyof CustomProperties,\n  prevValue?: EventListener,\n  newValue?: EventListener\n) => {\n  if (prevValue) {\n    domNode.removeEventListener(\n      EVENT_PROPS[propName].nativeEventName,\n      prevValue\n    );\n  }\n\n  if (newValue) {\n    domNode.addEventListener(EVENT_PROPS[propName].nativeEventName, newValue);\n  }\n};\n\nconst reconcileProps = (\n  domNode: Element,\n  prevNode: VirtualElement,\n  newNode: VirtualElement\n) => {\n  for (const name of keys(newNode.props).concat(keys(prevNode.props))) {\n    const prevValue = prevNode.props[name];\n    const newValue = newNode.props[name];\n\n    // HACK: With properties, our crappy virtal DOM can get out of sync after\n    // user input so we just always write.\n    if (ELEMENT_PROPERTIES.has(name)) {\n      // TODO: Fix type `Element` being too generic here.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domNode[name] = newValue === undefined ? '' : newValue;\n      continue;\n    }\n\n    if (prevValue === newValue) {\n      continue;\n    }\n\n    if (EVENT_PROPS[name]) {\n      // TODO: Can we avoid a typecast here?\n      reconcileEventHandlerProps(\n        domNode,\n        EVENT_PROPS[name].propName,\n        prevValue as EventListener | undefined,\n        newValue as EventListener | undefined\n      );\n      continue;\n    }\n\n    if (typeof newValue === 'boolean') {\n      if (newValue) {\n        domNode.setAttribute(name, '');\n      } else {\n        domNode.removeAttribute(name);\n      }\n    } else if (typeof newValue === 'undefined') {\n      domNode.removeAttribute(name);\n    } else {\n      domNode.setAttribute(name, String(newValue));\n    }\n  }\n};\n\nconst reconcileStrings = (\n  domNode: Element | Text,\n  prevNode: VirtualElement,\n  newNode: VirtualElement,\n) => {\n  if (newNode.type !== 'String') {\n    return;\n  }\n\n  if (\n    prevNode.type === 'String' &&\n    prevNode.props.value === newNode.props.value\n  ) {\n    return;\n  }\n\n  if (isElementNode(domNode)) {\n    domNode.parentElement?.replaceChild(createDomNode(newNode), domNode);\n  } else if (isTextNode(domNode)) {\n    domNode.replaceData(0, domNode.length, newNode.props.value);\n  }\n}\n\nexport const reconcile = (\n  domNode: Element | Text | undefined,\n  prevNode: VirtualElement | undefined,\n  newNode: VirtualElement | undefined,\n  parentElement: Element | Text\n) => {\n  if (!domNode) {\n    if (newNode) {\n      // TODO: This should not append but insert at the correct position in the\n      // row of siblings.\n      parentElement.appendChild(createDomNode(newNode));\n    }\n    return;\n  }\n\n  if (!newNode) {\n    domNode.remove();\n    return;\n  }\n\n  if (!prevNode || prevNode.type !== newNode.type) {\n    parentElement.replaceChild(createDomNode(newNode), domNode);\n    return;\n  }\n\n  if (newNode.type === 'String') {\n    reconcileStrings(domNode, prevNode, newNode);\n    return;\n  } else if (isTextNode(domNode)) {\n    parentElement.replaceChild(createDomNode(newNode), domNode);\n    return;\n  }\n\n  // We are guaranteed to have domNode, prevNode and newNode here.\n  reconcileProps(domNode, prevNode, newNode);\n\n  const domNodeChildren = Array.from(domNode.childNodes).filter(\n    (node) =>\n      node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text\n  ) as (Element | Text)[];\n\n  newNode.children.forEach((newNodeChild, index) => {\n    reconcile(\n      domNodeChildren[index],\n      prevNode.children[index],\n      newNodeChild,\n      domNode\n    );\n  });\n};\n\n// This should mimic the real appRoot node.\nlet prevVirtualElement = createVirtualElement('div');\n\nexport const render = (\n  component: VirtualElement | null,\n  appRoot: HTMLElement | null\n) => {\n  if (!component) {\n    throw new Error('component is null');\n  }\n\n  if (!appRoot) {\n    throw new Error('appRoot is not set');\n  }\n\n  if (!appRoot.parentElement) {\n    throw new Error('appRoot not attached to DOM');\n  }\n\n  const virtualElement = createVirtualElement('div', null, component);\n\n  reconcile(appRoot, prevVirtualElement, virtualElement, appRoot.parentElement);\n\n  prevVirtualElement = virtualElement;\n};\n","import { e } from '../lib/renderer';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton = ({ smallBlind, bigBlind }: Props) =>\n  e(\n    'BlindsButton',\n    {\n      tagName: 'button',\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n","import { e } from '../lib/renderer';\n\nexport const IntroScreen = () => {\n  return e(\n    'IntroScreen',\n    { tagName: 'div', id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  );\n};\n","import { e } from '../lib/renderer';\nimport { NumberInput, BlindsButton } from '../components';\nimport { appState } from '../state';\n\nexport const NewSessionScreen = () => {\n  return e(\n    'NewSessionScreen',\n    { tagName: 'div', id: 'new-session-screen', className: 'screen' },\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: 'Bellagio',\n            required: true,\n            value: appState.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          NumberInput({\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: appState.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          NumberInput({\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: appState.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        BlindsButton({ smallBlind: 1, bigBlind: 2 }),\n        BlindsButton({ smallBlind: 1, bigBlind: 3 }),\n        BlindsButton({ smallBlind: 2, bigBlind: 5 }),\n        BlindsButton({ smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          NumberInput({\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: appState.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","import { e } from '../lib/renderer';\n\ntype Props = {\n  id: string;\n  placeholder: string;\n  value?: string;\n  min?: number;\n  max?: number;\n};\n\nexport const NumberInput = ({ id, placeholder, value, min = 1, max }: Props) =>\n  e('NumberInput', {\n    tagName: 'input',\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n  });\n","import { Session as SessionModel } from '../models';\nimport { formatDuration } from '../utils';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n\n  timeElapsed() {\n    if (!this.session.startTime) {\n      return '';\n    }\n\n    return formatDuration(Date.now() - this.session.startTime.getTime());\n  }\n}\n","import { uuid, toISOString } from '../utils';\nimport { appState } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    appState.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return appState.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { Session } from '../models';\nimport { appState, AppState } from '../state';\n\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n}\n\nexport const selectors = new Selectors(appState);\n","import { e } from '../lib/renderer';\nimport { NumberInput, TipsSection } from '../components';\nimport { Session as SessionDecorator } from '../decorators';\nimport { appSelectors } from '../selectors';\nimport { appState } from '../state';\n\nexport const ShowSessionScreen = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      appState.showSessionScreen.notes = (<HTMLInputElement>event.target).value;\n    }\n  };\n\n  return e(\n    'ShowSessionScreen',\n    { tagName: 'div', id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: $${session.startTime()}`)),\n    e('div', null, e('span', null, `Time elapsed: ${session.timeElapsed()}`)),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      NumberInput({\n        id: 'rebuy-amount-input',\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: appState.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    TipsSection({ type: 'dealer', value: session.dealerTips() }),\n    TipsSection({ type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          placeholder: 'I punted again…',\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        NumberInput({\n          min: 0,\n          id: 'cashout-amount-input',\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n        })\n      ),\n\n      appState.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: appState.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","import { e } from '../lib/renderer';\nimport { capitalize } from '../utils';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n};\n\nexport const TipsSection = ({ type, value }: Props) =>\n  e(\n    'TipsSection',\n    { tagName: 'div', className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n","import {\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  objectSet,\n} from './utils';\nimport { App } from './components';\nimport { render } from './lib/renderer';\nimport { Screen } from './types';\nimport { Api } from './services';\nimport { Session } from './models';\nimport { appState, saveToLocalStorage } from './state';\nimport { appSelectors } from './selectors';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  appState.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  appState.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  appState.currentSessionId = session.id;\n  appState.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.rebuy(\n    parseFloat(appState.showSessionScreen.rebuyAmount)\n  );\n  appState.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    appState.newSessionScreen.casinoName,\n    parseInt(appState.newSessionScreen.smallBlind),\n    parseInt(appState.newSessionScreen.bigBlind),\n    parseInt(appState.newSessionScreen.maxBuyin),\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.end(\n    parseFloat(appState.showSessionScreen.cashoutAmount),\n    appState.showSessionScreen.notes\n  );\n\n  appState.showSessionScreen.isSavingSession = true;\n\n  // TODO: Make this happen automatically on appState change.\n  render(App(), appRoot);\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      appSelectors.currentSession,\n      appState.cachedAdminPassword ?? appState.showSessionScreen.adminPassword\n    );\n  } finally {\n    appState.showSessionScreen.isSavingSession = false;\n\n    // TODO: Make this happen automatically on appState change.\n    render(App(), appRoot);\n  }\n\n  if (response.ok) {\n    if (!appState.cachedAdminPassword) {\n      appState.cachedAdminPassword = appState.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    appSelectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  appState.newSessionScreen.smallBlind = smallBlind;\n  appState.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  appState.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return false;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return true;\n    case 'decrement-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(-1);\n      return true;\n    case 'increment-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(1);\n      return true;\n    case 'decrement-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(-1);\n      return true;\n    case 'increment-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(1);\n      return true;\n    case 'rebuy-max-button':\n      appSelectors.currentSession?.rebuyMax();\n      return true;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n\n    return true;\n  }\n\n  return false;\n};\n\nconst handleAppClick = (event: Event) => {\n  if (handleClick(event)) {\n    // TODO: Make this happen automatically on appState change.\n    render(App(), appRoot);\n  }\n};\n\nconst handleSubmit = async (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return false;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      return true;\n    case 'rebuy-form':\n      rebuy();\n      return true;\n    case 'end-session-form':\n      await saveToGoogleSheet();\n      return true;\n  }\n\n  return false;\n};\n\nconst handleAppSubmit = async (event: Event) => {\n  if (await handleSubmit(event)) {\n    // TODO: Make this happen automatically on appState change.\n    render(App(), appRoot);\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return false;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'cashout-amount-input':\n        return 'showSessionScreen.cashoutAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return false;\n  }\n\n  return objectSet(appState, key, event.target.value);\n};\n\nconst handleAppInput = (event: Event) => {\n  if (handleInput(event)) {\n    // TODO: Make this happen automatically on appState change.\n    render(App(), appRoot);\n  }\n};\n\nconst apiService = new Api();\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  appRoot.addEventListener('click', handleAppClick);\n  appRoot.addEventListener('submit', handleAppSubmit);\n  appRoot.addEventListener('input', handleAppInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n\nrender(App(), appRoot);\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n"],"names":["$df5bef30413a053b$export$ed97f33186d4b816","Object","keys","$df5bef30413a053b$export$31b40729666a4ae0","Date","now","toString","Math","random","substring","$df5bef30413a053b$export$c26d41fa6f97693c","object","tagName","$df5bef30413a053b$export$53b83ca8eaab0383","Array","isArray","$df5bef30413a053b$export$dfaaa8705752128f","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","floor","abs","$25746eb61037a613$export$56edef3a554a6277","$25746eb61037a613$export$a98515d67472a41f","$799ee1075ebfd49a$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$799ee1075ebfd49a$export$729c8b7179294ba","stateItem","window","localStorage","getItem","state","JSON","parse","sessionPath","location","hash","match","$799ee1075ebfd49a$var$locationToSessionId","screen","sessions","currentSessionId","showSessionScreen","rebuyAmount","notes","cashoutAmount","adminPassword","isSavingSession","newSessionScreen","casinoName","smallBlind","bigBlind","maxBuyin","$799ee1075ebfd49a$var$loadAppState","$799ee1075ebfd49a$export$1b8cd2d0ef9a8e5d","setItem","stringify","cachedAdminPassword","$a8e11eb2b4b0680a$export$86fbec116b87613f","$bfeb9d294d2ffc5c$export$327f2520b4698e84","$743ad4309d0f81b7$export$4f569ff5903d61c2","$be31a638e58516f0$export$596affaadba118e1","Error","$0913f1c8cf9ffdbe$var$NodeTypes","NodeTypes","$0913f1c8cf9ffdbe$var$ELEMENT_PROPERTIES","Set","$0913f1c8cf9ffdbe$var$EVENT_PROPS","onInput","propName","nativeEventName","supportedElements","$0913f1c8cf9ffdbe$var$isNativeElementType","type","str","toUpperCase","$0913f1c8cf9ffdbe$var$isTextNode","node","nodeType","Text","$0913f1c8cf9ffdbe$export$e1e7a9dd34b01909","props","children","map","child","value","$0913f1c8cf9ffdbe$export$f1e1789686576879","$0913f1c8cf9ffdbe$var$createDomNode","virtualElement","document","createTextNode","element","createElement","name","has","addEventListener","setAttribute","String","childDomElement","appendChild","$0913f1c8cf9ffdbe$var$reconcileEventHandlerProps","domNode","prevValue","newValue","removeEventListener","$0913f1c8cf9ffdbe$var$reconcileStrings","prevNode","newNode","Element","parentElement","replaceChild","replaceData","length","$0913f1c8cf9ffdbe$export$38319cad1f6d89e0","remove","concat","undefined","removeAttribute","$0913f1c8cf9ffdbe$var$reconcileProps","domNodeChildren","from","childNodes","filter","forEach","newNodeChild","index","$0913f1c8cf9ffdbe$var$prevVirtualElement","$0913f1c8cf9ffdbe$export$b3890eb0ae9dca99","component","appRoot","$9ceabd904cf08d06$export$d7c54a71f8909529","className","id","placeholder","required","$7a7cb71cad4059ea$export$6bf0cd3a219bbade","max","min","pattern","$e7e206ea4712806d$export$1fb4852a55678982","constructor","session","this","drinkTips","attributes","dealerTips","blinds","title","join","startTime","toLocaleString","profit","buyinsTotal","timeElapsed","ms","seconds","hours","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","$959c11b99bd453e0$export$1fb4852a55678982","static","buyins","endTime","start","push","amount","time","rebuy","toISOString","rebuyMax","end","undoEnd","reduce","prev","current","updateTip","change","updateDealerTip","updateDrinkTip","$564d17351e22afa3$export$e1252723db1c541","appState","currentSession","_cachedCurrentSessionId","_cachedCurrentSession","$fdb14842a1041c3a$export$1e4a816d3f9032b4","autocomplete","event","target","disabled","slice","$9ecda7333d28e490$export$6bc7b24d4e862158","hostname","Development","Production","$b4e14b6b8da86996$var$createSession","create","parseInt","history","pushState","$b4e14b6b8da86996$var$navigateToShowSessionScreen","$b4e14b6b8da86996$var$saveToGoogleSheet","async","response","parseFloat","$b4e14b6b8da86996$var$appRoot","$b4e14b6b8da86996$var$apiService","saveSession","ok","alert","$b4e14b6b8da86996$var$handleClick","classList","contains","dataset","$b4e14b6b8da86996$var$handleAppClick","$b4e14b6b8da86996$var$handleSubmit","preventDefault","$b4e14b6b8da86996$var$handleAppSubmit","$b4e14b6b8da86996$var$handleInput","key","idToStateKey","subKeys","split","lastKey","pop","key1","next","$df5bef30413a053b$export$b6497f19c886af0e","$b4e14b6b8da86996$var$handleAppInput","origin","request","path","body","requestOptions","url","fetch","method","headers","post","data","getElementById","setInterval","onbeforeunload"],"version":3,"file":"index.9cb659f5.js.map"}