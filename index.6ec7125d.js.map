{"mappings":"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","sources":["src/index.ts","src/utils.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/components/index.ts","src/components/App.ts","node_modules/tortie-core/dist/index.js","node_modules/tortie-core/dist/render.js","node_modules/tortie-core/dist/types.js","node_modules/tortie-core/dist/utils.js","node_modules/tortie-core/dist/hooks.js","node_modules/tortie-core/dist/polyfills.js","src/types.ts","src/state/index.ts","src/state/app.ts","src/components/BlindsButton.ts","src/components/IntroScreen.ts","src/components/NewSessionScreen.ts","src/selectors/index.ts","src/selectors/app.ts","src/models/index.ts","src/models/session.ts","src/components/NumberInput.ts","src/components/ShowSessionScreen.ts","src/decorators/index.ts","src/decorators/session.ts","src/components/TipsSection.ts","src/components/SuggestedCasino.ts","src/components/Timer.ts","src/services/index.ts","src/services/api.ts","src/constants.ts"],"sourcesContent":["import {\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  objectSet,\n} from './utils';\nimport { App } from './components';\nimport { render, e } from 'tortie-core';\nimport { setupAppState } from './state';\nimport { Screen } from './types';\nimport { Api } from './services';\nimport { Session } from './models';\nimport { state, saveToLocalStorage } from './state';\nimport { appSelectors } from './selectors';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  state.app.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  state.app.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  state.app.currentSessionId = session.id;\n  state.app.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.rebuy(\n    parseFloat(state.app.showSessionScreen.rebuyAmount)\n  );\n  state.app.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    state.app.newSessionScreen.casinoName,\n    parseInt(state.app.newSessionScreen.smallBlind),\n    parseInt(state.app.newSessionScreen.bigBlind),\n    parseInt(state.app.newSessionScreen.maxBuyin),\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!appSelectors.currentSession) {\n    return;\n  }\n\n  appSelectors.currentSession.end(\n    parseFloat(state.app.showSessionScreen.cashoutAmount),\n    state.app.showSessionScreen.notes\n  );\n\n  state.app.showSessionScreen.isSavingSession = true;\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      appSelectors.currentSession,\n      state.app.cachedAdminPassword ?? state.app.showSessionScreen.adminPassword\n    );\n  } finally {\n    state.app.showSessionScreen.isSavingSession = false;\n  }\n\n  if (response.ok) {\n    if (!state.app.cachedAdminPassword) {\n      state.app.cachedAdminPassword = state.app.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    appSelectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  state.app.newSessionScreen.smallBlind = smallBlind;\n  state.app.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  state.app.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return;\n    case 'decrement-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(-1);\n      return;\n    case 'increment-dealer-tip-button':\n      appSelectors.currentSession?.updateDealerTip(1);\n      return;\n    case 'decrement-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(-1);\n      return;\n    case 'increment-drink-tip-button':\n      appSelectors.currentSession?.updateDrinkTip(1);\n      return;\n    case 'rebuy-max-button':\n      appSelectors.currentSession?.rebuyMax();\n      return;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n  }\n};\n\nconst handleSubmit = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      break;\n    case 'rebuy-form':\n      rebuy();\n      break;\n    case 'end-session-form':\n      saveToGoogleSheet();\n      break;\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return;\n  }\n\n  return objectSet(state.app, key, event.target.value);\n};\n\nconst apiService = new Api();\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  setupAppState(() => render(e(App), appRoot));\n\n  appRoot.addEventListener('click', handleClick);\n  appRoot.addEventListener('submit', handleSubmit);\n  appRoot.addEventListener('input', handleInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n","import { PlainObject, Primitive } from './types';\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export { App } from './App';\nexport { BlindsButton } from './BlindsButton';\nexport { IntroScreen } from './IntroScreen';\nexport { NewSessionScreen } from './NewSessionScreen';\nexport { NumberInput } from './NumberInput';\nexport { ShowSessionScreen } from './ShowSessionScreen';\nexport { TipsSection } from './TipsSection';\nexport { SuggestedCasino } from './SuggestedCasino';\nexport { Timer } from './Timer';\n","import { FunctionComponent, e } from 'tortie-core';\nimport { IntroScreen, NewSessionScreen, ShowSessionScreen } from '.';\nimport { Screen } from '../types';\nimport { state } from '../state';\n\nexport const App: FunctionComponent = () => {\n  switch (state.app.screen) {\n    case Screen.Intro:\n      return e(IntroScreen);\n    case Screen.NewSession:\n      return e(NewSessionScreen);\n    case Screen.ShowSession:\n      return e(ShowSessionScreen);\n    default:\n      throw new Error(`Unknown screen ${state.app.screen}`);\n  }\n};\n","export { render, createVirtualElement, e } from './render';\nexport { useEffect, useState } from './hooks';\n","import { NodeTypes, } from './types';\nimport { keys, isVirtualFunctionElement, isVirtualNativeElement, isTextNode, isElementNode, replaceNode, } from './utils';\nimport { mountWithHooks, unmountWithHooks } from './hooks';\nimport { polyfillAll } from './polyfills';\nvar ElementProperties;\n(function (ElementProperties) {\n    ElementProperties[\"Value\"] = \"value\";\n    ElementProperties[\"ClassName\"] = \"className\";\n})(ElementProperties || (ElementProperties = {}));\nconst ELEMENT_PROPERTIES = new Set(Object.values(ElementProperties));\nconst EVENT_PROPS = new Map([\n    ['onInput', 'input'],\n    ['onClick', 'click'],\n]);\nconst createVirtualStringElement = (value) => ({\n    type: 'String',\n    value,\n});\nexport function createVirtualElement(type, props, ...children) {\n    return typeof type === 'function'\n        ? {\n            type,\n            props: props || {},\n            result: null,\n        }\n        : {\n            type,\n            props: Object.assign(Object.assign({}, props), { tagName: type || 'div' }),\n            children: children.map((child) => typeof child === 'string' ? createVirtualStringElement(child) : child),\n        };\n}\nexport const e = createVirtualElement;\nconst reconcileEventHandlerProps = (domNode, nativeEventName, prevValue, newValue) => {\n    if (prevValue === newValue) {\n        return;\n    }\n    if (prevValue) {\n        domNode.removeEventListener(nativeEventName, prevValue);\n    }\n    if (newValue) {\n        domNode.addEventListener(nativeEventName, newValue);\n    }\n};\nconst reconcileProps = (domNode, prevNode, newNode) => {\n    if ((prevNode === null || prevNode === void 0 ? void 0 : prevNode.type) === 'String' || (newNode === null || newNode === void 0 ? void 0 : newNode.type) === 'String') {\n        return;\n    }\n    const prevPropKeys = prevNode ? keys(prevNode.props) : [];\n    const newPropKeys = newNode ? keys(newNode.props) : [];\n    for (const name of newPropKeys.concat(prevPropKeys)) {\n        const prevValue = prevNode === null || prevNode === void 0 ? void 0 : prevNode.props[name];\n        const newValue = newNode === null || newNode === void 0 ? void 0 : newNode.props[name];\n        // HACK: With properties (as opposed to attributes), our crappy virtal DOM\n        // can get out of sync after user input so we just always write.\n        if (ELEMENT_PROPERTIES.has(name)) {\n            // TODO: Fix type `Element` being too generic here.\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            domNode[name] = newValue === undefined ? '' : newValue;\n            continue;\n        }\n        if (prevValue === newValue) {\n            continue;\n        }\n        if (name === 'onClick' || name === 'onInput') {\n            const nativeEventName = EVENT_PROPS.get(name);\n            if (nativeEventName) {\n                reconcileEventHandlerProps(domNode, nativeEventName, prevNode === null || prevNode === void 0 ? void 0 : prevNode.props[name], newNode === null || newNode === void 0 ? void 0 : newNode.props[name]);\n            }\n            continue;\n        }\n        if (typeof newValue === 'boolean') {\n            if (newValue) {\n                domNode.setAttribute(name, '');\n            }\n            else {\n                domNode.removeAttribute(name);\n            }\n        }\n        else if (typeof newValue === 'undefined') {\n            domNode.removeAttribute(name);\n        }\n        else {\n            domNode.setAttribute(name, String(newValue));\n        }\n    }\n};\nconst createDomNode = (virtualElement) => {\n    if (!virtualElement) {\n        return null;\n    }\n    if (virtualElement.type === 'String') {\n        return appDocument.createTextNode(virtualElement.value);\n    }\n    if (isVirtualFunctionElement(virtualElement)) {\n        return createDomNode(mountWithHooks(virtualElement, forceRender));\n    }\n    const { children, type: tagName } = virtualElement;\n    const element = appDocument.createElement(tagName);\n    reconcileProps(element, null, virtualElement);\n    for (const child of children) {\n        if (!child) {\n            continue;\n        }\n        const childDomElement = createDomNode(child);\n        if (!childDomElement) {\n            continue;\n        }\n        element.appendChild(childDomElement);\n    }\n    return element;\n};\nconst reconcileStrings = (domNode, prevNode, newNode) => {\n    if (prevNode.value === newNode.value) {\n        return;\n    }\n    if (isElementNode(domNode)) {\n        replaceNode(domNode, createDomNode(newNode));\n    }\n    else if (isTextNode(domNode)) {\n        domNode.replaceData(0, domNode.length, newNode.value);\n    }\n};\nexport const reconcile = (domNode, prevNode, newNode) => {\n    if (!newNode) {\n        domNode.remove();\n        return;\n    }\n    if (!prevNode || prevNode.type !== newNode.type) {\n        if (prevNode && isVirtualFunctionElement(prevNode)) {\n            // TODO: This should happen recursively for all child nodes being removed.\n            unmountWithHooks(prevNode);\n        }\n        replaceNode(domNode, createDomNode(newNode));\n        return;\n    }\n    // We needlessly have to repeatedly check the type of `prevNode` here even\n    // though we ensure that both types are the same above.\n    // See https://stackoverflow.com/questions/71397541\n    if (prevNode.type === 'String' && newNode.type === 'String') {\n        reconcileStrings(domNode, prevNode, newNode);\n        return;\n    }\n    if (isTextNode(domNode)) {\n        replaceNode(domNode, createDomNode(newNode));\n        return;\n    }\n    if (isVirtualFunctionElement(prevNode) && isVirtualFunctionElement(newNode)) {\n        reconcile(domNode, prevNode.result, mountWithHooks(newNode, forceRender));\n        return;\n    }\n    if (isVirtualNativeElement(prevNode) && isVirtualNativeElement(newNode)) {\n        reconcileProps(domNode, prevNode, newNode);\n        const domNodeChildren = Array.from(domNode.childNodes).filter((node) => node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text);\n        newNode.children.forEach((newNodeChild, index) => {\n            const domNodeChild = domNodeChildren[index];\n            if (domNodeChild) {\n                reconcile(domNodeChild, prevNode.children[index], newNodeChild);\n            }\n            else if (newNodeChild) {\n                const node = createDomNode(newNodeChild);\n                if (node) {\n                    domNode.appendChild(node);\n                }\n            }\n        });\n    }\n};\nlet prevVirtualElement = createVirtualElement('div');\nlet forceRender;\nlet appDocument;\nlet polyfilled = false;\n// TODO: Add `createRoot` function instead.\nexport const render = (component, appRoot) => {\n    // Lets us avoid calling `global.document` so we can run this in a Node\n    // environment. Particularly useful for testing.\n    appDocument = appRoot.ownerDocument;\n    if (!polyfilled && appDocument.defaultView) {\n        polyfillAll(appDocument.defaultView);\n        polyfilled = true;\n    }\n    const virtualElement = createVirtualElement('div', null, component);\n    // We cache this for use in `mountWithHooks` (the `useState` hook needs to be\n    // able to trigger renders).\n    // TODO: Add the ability to do a partial render. We'd need to stop comparing\n    // the prev virtual DOM against current and instead just compare the real DOM\n    // against the current.\n    forceRender = () => render(component, appRoot);\n    reconcile(appRoot, prevVirtualElement, virtualElement);\n    prevVirtualElement = virtualElement;\n};\n","export var NodeTypes;\n(function (NodeTypes) {\n    NodeTypes[NodeTypes[\"Element\"] = 1] = \"Element\";\n    NodeTypes[NodeTypes[\"Text\"] = 3] = \"Text\";\n})(NodeTypes || (NodeTypes = {}));\n","import { NodeTypes, } from './types';\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys;\nexport const isVirtualFunctionElement = (virtualElement) => typeof virtualElement.type === 'function';\nexport const isVirtualStringElement = (virtualElement) => virtualElement.type === 'String';\nexport const isVirtualNativeElement = (virtualElement) => !isVirtualStringElement(virtualElement) &&\n    !isVirtualFunctionElement(virtualElement);\nexport const isElementNode = (node) => node.nodeType === NodeTypes.Element;\nexport const isTextNode = (node) => node.nodeType === NodeTypes.Text;\nexport const replaceNode = (node, newNode) => {\n    var _a;\n    if (!newNode) {\n        return;\n    }\n    (_a = node.parentElement) === null || _a === void 0 ? void 0 : _a.replaceChild(newNode, node);\n};\nexport const arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i += 1) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { arraysEqual } from './utils';\nlet currentComponent;\nlet currentForceRender;\n// TODO: Since hooks should always fire in the same order, we could just push\n// all hook data onto a single array with an index that increments per call.\n// That way we don't keep in memory other hooks data when we don't need to.\nconst hooks = {\n    useState: new Map(),\n    useEffect: new Map(),\n};\n// Calls callback if dependencies change between renders.\nexport const useEffect = (callback, dependencies) => {\n    const componentEffects = hooks.useEffect.get(currentComponent) || [];\n    componentEffects.push({\n        callback,\n        dependencies,\n        unmountCallback: undefined,\n    });\n    hooks.useEffect.set(currentComponent, componentEffects);\n};\n// TODO: This should be a special case of `useReducer` once it's implemented.\nexport const useState = (initialValue) => {\n    let componentHookData = hooks.useState.get(currentComponent);\n    if (!componentHookData) {\n        componentHookData = [{ value: initialValue }];\n        hooks.useState.set(currentComponent, componentHookData);\n    }\n    // TODO: Make this work with multiple useState calls.\n    const hook = componentHookData[componentHookData.length - 1];\n    const setState = (value) => {\n        if (hook.value !== value) {\n            hook.value = value;\n            // We could end up here during the current render. That means we'd kick\n            // off another render before the DOM has finished updating. So we use\n            // `requestIdleCallback` to ensure the next render runs after the current\n            // one is complete.\n            // TODO: Once fibers are implemented, this can go away.\n            requestIdleCallback(currentForceRender);\n        }\n    };\n    // TODO: Can we avoid the cast here? Otherwise value would be `unknown`\n    // because of the `hooks.useState` definition above.\n    return [hook.value, setState];\n};\nexport const mountWithHooks = (virtualElement, forceRender) => {\n    currentComponent = virtualElement.type;\n    currentForceRender = forceRender;\n    const prevEffects = hooks.useEffect.get(virtualElement.type);\n    // Repopulates after calling the function component below.\n    hooks.useEffect.delete(virtualElement.type);\n    virtualElement.result = virtualElement.type(virtualElement.props);\n    const currentUseEffectCalls = hooks.useEffect.get(currentComponent);\n    if (!currentUseEffectCalls || currentUseEffectCalls.length === 0) {\n        return virtualElement.result;\n    }\n    currentUseEffectCalls.forEach((nextEffect, index) => {\n        const prevEffect = prevEffects === null || prevEffects === void 0 ? void 0 : prevEffects[index];\n        if (prevEffect &&\n            arraysEqual(prevEffect.dependencies, nextEffect.dependencies)) {\n            nextEffect.unmountCallback = prevEffect.unmountCallback;\n        }\n        else {\n            nextEffect.unmountCallback = nextEffect.callback();\n        }\n    });\n    return virtualElement.result;\n};\nexport const unmountWithHooks = (virtualElement) => {\n    const componentEffects = hooks.useEffect.get(virtualElement.type);\n    if (!componentEffects) {\n        return virtualElement.result;\n    }\n    for (const { unmountCallback } of componentEffects) {\n        if (unmountCallback) {\n            unmountCallback();\n        }\n    }\n    hooks.useEffect.delete(virtualElement.type);\n    hooks.useState.delete(virtualElement.type);\n    return virtualElement.result;\n};\n","// TODO: Use an actual polyfill. This is gross.\nexport const polyfillRequestIdleCallback = (window) => {\n    if (typeof window.requestIdleCallback === 'undefined') {\n        window.requestIdleCallback = (callback, options) => setTimeout(callback, 0);\n    }\n};\nexport const polyfillAll = (window) => {\n    polyfillRequestIdleCallback(window);\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","export {\n  state,\n  AppState,\n  saveToLocalStorage,\n  setupAppState,\n} from './app';\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const state = {\n  app: loadAppState(),\n};\n\nexport const setupAppState = (onStateChange: () => void) => {\n  state.app = new Proxy(state.app, {\n    get(target, key, receiver) {\n      if (!Reflect.has(target, key)) {\n        return;\n      }\n\n      const value = Reflect.get(target, key, receiver);\n\n      if (typeof value === 'object' && value !== null) {\n        return new Proxy(value, this);\n      } else {\n        return value;\n      }\n    },\n\n    set(target, key, value, receiver) {\n      const success = Reflect.set(target, key, value, receiver);\n      if (success) {\n        onStateChange();\n      }\n      return success;\n    },\n  });\n\n  onStateChange();\n}\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: state.app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: state.app.cachedAdminPassword,\n    })\n  );\n};\n","import { e, FunctionComponent } from 'tortie-core';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton: FunctionComponent<Props> = ({\n  smallBlind,\n  bigBlind,\n}) =>\n  e(\n    'button',\n    {\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n","import { e } from 'tortie-core';\n\nexport const IntroScreen = () => (\n  e(\n    'div',\n    { id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  )\n);\n","import { e } from 'tortie-core';\nimport { NumberInput, BlindsButton, SuggestedCasino } from '../components';\nimport { state } from '../state';\nimport { appSelectors } from '../selectors';\n\nexport const NewSessionScreen = () => {\n  const handleSelectSuggestedCasino = (casinoName: string) => {\n    state.app.newSessionScreen.casinoName = casinoName;\n  };\n\n  return e(\n    'div',\n    { id: 'new-session-screen', className: 'screen' },\n    e(SuggestedCasino, { onSelect: handleSelectSuggestedCasino }),\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: appSelectors.mostFrequentCasinoName ?? 'Bellagio',\n            required: true,\n            value: state.app.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          e(NumberInput, {\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: state.app.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          e(NumberInput, {\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: state.app.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 2 }),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 3 }),\n        e(BlindsButton, { smallBlind: 2, bigBlind: 5 }),\n        e(BlindsButton, { smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          e(NumberInput, {\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: state.app.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","export { selectors as appSelectors } from './app';\n","import { Session } from '../models';\nimport { state, AppState } from '../state';\n\n// TODO: Add automatic caching.\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n  _cachedMostFrequentCasinoName?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n\n  // TODO: Get this using a frecency algorithm.\n  get mostFrequentCasinoName() {\n    if (this._cachedMostFrequentCasinoName) {\n      return this._cachedMostFrequentCasinoName;\n    }\n\n    const casinoName = Object.values(this.appState.sessions)\n      .sort((a, b) =>\n        a.endTime && b.endTime\n          ? Date.parse(b.endTime) - Date.parse(a.endTime)\n          : 1\n      )[0]?.casinoName;\n\n    if (casinoName) {\n      this._cachedMostFrequentCasinoName = casinoName;\n    }\n\n    return casinoName;\n  }\n}\n\nexport const selectors = new Selectors(state.app);\n","export { Session } from './session';\n","import { uuid, toISOString } from '../utils';\nimport { state } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    state.app.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return state.app.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { e, FunctionComponent } from 'tortie-core';\n\ntype Props = {\n  placeholder?: string;\n  id?: string;\n  value?: string;\n  min?: number;\n  max?: number;\n  onInput?: (event: Event) => void;\n};\n\nexport const NumberInput: FunctionComponent<Props> = ({\n  id,\n  placeholder,\n  value,\n  min = 1,\n  max,\n  onInput,\n}) =>\n  e('input', {\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n    onInput,\n  });\n","import { e, FunctionComponent } from 'tortie-core';\nimport { NumberInput, TipsSection, Timer } from '../components';\nimport { Session as SessionDecorator } from '../decorators';\nimport { appSelectors } from '../selectors';\nimport { state } from '../state';\n\nexport const ShowSessionScreen: FunctionComponent = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.notes = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleCashoutAmountInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.cashoutAmount = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  return e(\n    'div',\n    { id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: ${session.startTime()}`)),\n    appSelectors.currentSession.startTime &&\n      e(\n        'div',\n        null,\n        e(\n          'span',\n          null,\n          'Time elapsed: ',\n          e(Timer, { startTime: appSelectors.currentSession.startTime })\n        )\n      ),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      e(NumberInput, {\n        id: 'rebuy-amount-input',\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: state.app.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    e(TipsSection, { type: 'dealer', value: session.dealerTips() }),\n    e(TipsSection, { type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        e(NumberInput, {\n          min: 0,\n          value: state.app.showSessionScreen.cashoutAmount,\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n          onInput: handleCashoutAmountInput,\n        })\n      ),\n\n      state.app.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: state.app.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","export { Session } from './session';\n","import { Session as SessionModel } from '../models';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n}\n","import { e, FunctionComponent } from 'tortie-core';\nimport { capitalize } from '../utils';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n};\n\nexport const TipsSection: FunctionComponent<Props> = ({ type, value }) =>\n  e(\n    'div',\n    { className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n","import { e, FunctionComponent } from 'tortie-core';\nimport { appSelectors } from '../selectors';\n\ntype Props = {\n  onSelect: (casinoName: string) => void;\n};\n\nexport const SuggestedCasino: FunctionComponent<Props> = ({ onSelect }) => {\n  const casinoName = appSelectors.mostFrequentCasinoName;\n  if (!casinoName) {\n    return null;\n  }\n\n  return e(\n    'div',\n    null,\n    `Play at ${casinoName} again?`,\n    e('button', { onClick: () => onSelect(casinoName) }, 'OK')\n  );\n};\n","import { e, useState, useEffect, FunctionComponent } from 'tortie-core';\nimport { formatDuration } from '../utils';\n\ntype Props = {\n  startTime: Date;\n};\n\nconst MILLISECONDS_IN_ONE_SECOND = 1000;\n\nexport const Timer: FunctionComponent<Props> = ({ startTime }) => {\n  const [timeElaped, setTimeElapsed] = useState('');\n\n  useEffect(() => {\n    const updateTimeElapsed = () => {\n      setTimeElapsed(formatDuration(Date.now() - startTime.getTime()));\n    };\n\n    setInterval(updateTimeElapsed, MILLISECONDS_IN_ONE_SECOND);\n    updateTimeElapsed();\n  }, []);\n\n  return e('span', null, timeElaped.toString());\n};\n","export { Api } from './api';\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n"],"names":["_utils","require","_components","_tortieCore","_state","_types","_services","_models","_selectors","createSession","session","Session","create","state","app","newSessionScreen","casinoName","parseInt","smallBlind","bigBlind","maxBuyin","start","window","history","pushState","id","currentSessionId","screen","Screen","ShowSession","navigateToShowSessionScreen","saveToGoogleSheet","async","appSelectors","currentSession","response","end","parseFloat","showSessionScreen","cashoutAmount","notes","isSavingSession","apiService","saveSession","cachedAdminPassword","adminPassword","ok","alert","Intro","undoEnd","handleClick","event","objectIsHtmlElement","target","NewSession","updateDealerTip","updateDrinkTip","rebuyMax","classList","contains","dataset","toString","handleSubmit","preventDefault","rebuy","rebuyAmount","handleInput","objectIsHtmlInputElement","key","idToStateKey","objectSet","value","Api","appRoot","document","getElementById","setupAppState","render","e","App","addEventListener","setInterval","saveToLocalStorage","onbeforeunload","parcelHelpers","uuid","formatDuration","isPlainObject","capitalize","toISOString","Date","now","Math","random","substring","object","tagName","type","ms","seconds","hours","floor","minutes","round","Array","isArray","subKeys","split","lastKey","pop","key1","next","str","toUpperCase","slice","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","abs","exports","interopDefault","a","__esModule","default","defineInteropFlag","Object","defineProperty","exportAll","source","dest","keys","forEach","hasOwnProperty","enumerable","get","export","destName","_app","_blindsButton","BlindsButton","_introScreen","IntroScreen","_newSessionScreen","NewSessionScreen","_numberInput","NumberInput","_showSessionScreen","ShowSessionScreen","_tipsSection","TipsSection","_suggestedCasino","SuggestedCasino","_timer","Timer","_","Error","_render","createVirtualElement","_hooks","useEffect","useState","reconcile","ElementProperties","ElementProperties1","_polyfills","ELEMENT_PROPERTIES","Set","values","EVENT_PROPS","Map","props","children","result","assign","map","child","reconcileEventHandlerProps","domNode","nativeEventName","prevValue","newValue","removeEventListener","reconcileProps","prevNode","newNode","prevPropKeys","newPropKeys","name","concat","has","undefined","setAttribute","removeAttribute","String","createDomNode","virtualElement","appDocument","createTextNode","isVirtualFunctionElement","mountWithHooks","forceRender","element","createElement","childDomElement","appendChild","unmountWithHooks","replaceNode","isTextNode","isVirtualNativeElement","domNodeChildren","from","childNodes","filter","node","nodeType","NodeTypes","Element","Text","newNodeChild","index","domNodeChild","isElementNode","replaceData","length","reconcileStrings","remove","prevVirtualElement","polyfilled","component","ownerDocument","defaultView","polyfillAll","NodeTypes1","isVirtualStringElement","arraysEqual","_a","parentElement","replaceChild","arr1","arr2","i","currentComponent","currentForceRender","hooks","callback","dependencies","componentEffects","push","unmountCallback","set","initialValue","componentHookData","hook","requestIdleCallback","prevEffects","delete","currentUseEffectCalls","nextEffect","prevEffect","polyfillRequestIdleCallback","options","setTimeout","Environments","Environments1","Screen1","AppState","LOCAL_STORAGE_KEY","sessionIdToScreen","sessionId","stateItem","localStorage","getItem","state1","JSON","parse","sessionPath","location","hash","match","locationToSessionId","sessions","loadAppState","onStateChange","Proxy","receiver","Reflect","this","success","setItem","stringify","className","onSelect","placeholder","mostFrequentCasinoName","required","max","selectors","constructor","appState","_cachedCurrentSessionId","_cachedCurrentSession","_cachedMostFrequentCasinoName","sort","b","endTime","_session","static","dealerTips","drinkTips","buyins","attributes","startTime","amount","time","buyinsTotal","reduce","prev","current","updateTip","change","min","onInput","pattern","_decorators","title","profit","autocomplete","disabled","blinds","join","toLocaleString","onClick","timeElaped","setTimeElapsed","updateTimeElapsed","getTime","_api","_constants","origin","environment","Development","request","path","body","requestOptions","url","fetch","method","headers","post","data","hostname","Production"],"version":3,"file":"index.6ec7125d.js.map"}