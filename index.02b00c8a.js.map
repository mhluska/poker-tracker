{"mappings":"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","sources":["src/utils.ts","src/index.ts"],"sourcesContent":["import { PlainObject, Primitive } from './types';\n\n// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const objectIsHtmlElement = (object: unknown): object is HTMLElement =>\n  !!(object as HTMLElement).tagName;\n\nexport const objectIsHtmlInputElement = (\n  object: unknown\n): object is HTMLInputElement => !!(object as HTMLInputElement).type;\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const isPlainObject = (object: unknown): object is PlainObject =>\n  typeof object === 'object' && !Array.isArray(object);\n\nexport const objectSet = (\n  object: PlainObject,\n  key: string,\n  value: Primitive\n) => {\n  if (!key) {\n    return;\n  }\n\n  const subKeys = key.split('.');\n  const lastKey = subKeys.pop();\n\n  if (!lastKey) {\n    return;\n  }\n\n  for (const key of subKeys) {\n    const next = object[key];\n    if (!isPlainObject(next)) {\n      return;\n    }\n\n    object = next;\n  }\n\n  object[lastKey] = value;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\nexport const isCapitalized = (str: string) => str[0].toUpperCase() === str[0];\n","import {\n  uuid,\n  objectIsHtmlElement,\n  objectIsHtmlInputElement,\n  formatDuration,\n  objectSet,\n  capitalize,\n  isCapitalized,\n} from './utils';\nimport { ElementProperties } from './types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\nconst ELEMENT_NODE_TYPE = 1;\nconst TEXT_NODE_TYPE = 3;\nconst ELEMENT_PROPERTIES = new Set(['value', 'className']);\n\nenum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nenum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n\ntype AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n    maxPlayers: string;\n  };\n  cachedAdminPassword?: string;\n};\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  maxPlayers: number;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nclass Selectors {\n  appState: AppState;\n  _cachedCurrentSession?: Session;\n  _cachedCurrentSessionId?: string;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId &&\n      this._cachedCurrentSessionId !== this.appState.currentSessionId\n    ) {\n      this._cachedCurrentSessionId = this.appState.currentSessionId;\n      this._cachedCurrentSession = new Session(this.appState.currentSessionId);\n    }\n\n    return this._cachedCurrentSession;\n  }\n}\n\nclass ApiService {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n\nclass SessionDecorator {\n  session: Session;\n\n  constructor(session: Session) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n\n  timeElapsed() {\n    if (!this.session.startTime) {\n      return '';\n    }\n\n    return formatDuration(Date.now() - this.session.startTime.getTime());\n  }\n}\n\nclass Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n    maxPlayers: number\n  ) {\n    const id = uuid();\n\n    appState.sessions[id] = {\n      id: uuid(),\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      maxPlayers,\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return appState.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = new Date().toISOString();\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = new Date().toISOString();\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nconst saveAppState = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: appState.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: appState.cachedAdminPassword,\n    })\n  );\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n      maxPlayers: '8',\n    },\n    ...state,\n  };\n};\n\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nconst keys = Object.keys as <T>(o: T) => (keyof T)[];\n\ntype VirtualElement = {\n  type: string;\n  tagName: keyof HTMLElementTagNameMap;\n  props: Partial<ElementProperties>;\n  children: VirtualNode[];\n};\n\ntype VirtualNode = string | VirtualElement;\n\nconst isNativeElementType = (\n  type: string\n): type is keyof HTMLElementTagNameMap => !isCapitalized(type);\n\nconst createVirtualElement = (\n  type: string,\n  props: VirtualElement['props'] | null = null,\n  ...children: VirtualElement['children']\n): VirtualElement => ({\n  type,\n  tagName: isNativeElementType(type)\n    ? type\n    : (props?.tagName as keyof HTMLElementTagNameMap),\n  props: props || {},\n  children,\n});\n\nconst createDomNode = (virtualNode: VirtualNode) => {\n  if (typeof virtualNode === 'string') {\n    return document.createTextNode(virtualNode);\n  }\n\n  const { tagName, props, children } = virtualNode;\n  const element = document.createElement(tagName);\n\n  if (props) {\n    for (const name of keys(props)) {\n      if (name === 'tagName') {\n        continue;\n      }\n\n      const value = props[name];\n\n      if (ELEMENT_PROPERTIES.has(name)) {\n        // TODO: Figure out why an error related to readonly properties is\n        // happening despite using `Writeable`.\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        element[name] = value;\n      } else {\n        if (typeof value === 'boolean' && value === false) {\n          continue;\n        }\n\n        element.setAttribute(name, String(value));\n      }\n    }\n  }\n\n  for (const child of children) {\n    const childDomElement = createDomNode(child);\n\n    if (!childDomElement) {\n      continue;\n    }\n\n    element.appendChild(childDomElement);\n  }\n\n  return element;\n};\n\nconst e = createVirtualElement;\n\nconst NumberInput = ({\n  id,\n  placeholder,\n  value,\n  min = 1,\n  max,\n}: {\n  id: string;\n  placeholder: string;\n  value?: string;\n  min?: number;\n  max?: number;\n}) =>\n  e('NumberInput', {\n    tagName: 'input',\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: 'required',\n  });\n\nconst BlindsButton = ({\n  smallBlind,\n  bigBlind,\n}: {\n  smallBlind: number;\n  bigBlind: number;\n}) =>\n  e(\n    'BlindsButton',\n    {\n      tagName: 'button',\n      type: 'button',\n      className: 'prefill-blinds',\n      'data-small-blind': smallBlind,\n      'data-big-blind': bigBlind,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n\nconst TipsSection = ({\n  type,\n  value,\n}: {\n  type: 'dealer' | 'drink';\n  value: string;\n}) =>\n  e(\n    'TipsSection',\n    { tagName: 'div', className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', id: `decrement-${type}-tip-button` },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', id: `increment-${type}-tip-button` },\n        '+'\n      )\n    )\n  );\n\nconst IntroScreen = () => {\n  return e(\n    'IntroScreen',\n    { tagName: 'div', id: 'intro-screen', className: 'screen' },\n    e('button', { id: 'new-session-button' }, 'Start Session')\n  );\n};\n\nconst NewSessionScreen = () => {\n  return e(\n    'NewSessionScreen',\n    { tagName: 'div', id: 'new-session-screen', className: 'screen' },\n    e(\n      'form',\n      { id: 'new-session-form' },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            id: 'casino-name-input',\n            type: 'text',\n            placeholder: 'Bellagio',\n            required: 'required',\n            value: appState.newSessionScreen.casinoName,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          NumberInput({\n            id: 'small-blind-input',\n            placeholder: '2',\n            value: appState.newSessionScreen.smallBlind,\n            max: 100,\n          }),\n          NumberInput({\n            id: 'big-blind-input',\n            placeholder: '5',\n            value: appState.newSessionScreen.bigBlind,\n            max: 200,\n          })\n        ),\n        BlindsButton({ smallBlind: 1, bigBlind: 2 }),\n        BlindsButton({ smallBlind: 1, bigBlind: 3 }),\n        BlindsButton({ smallBlind: 2, bigBlind: 5 }),\n        BlindsButton({ smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          NumberInput({\n            id: 'max-buyin-input',\n            placeholder: '500',\n            value: appState.newSessionScreen.maxBuyin,\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Players'),\n          NumberInput({\n            id: 'max-players-input',\n            placeholder: '8',\n            max: 10,\n            value: appState.newSessionScreen.maxPlayers,\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n\nconst ShowSessionScreen = () => {\n  if (!selectors.currentSession) {\n    return '';\n  }\n\n  const session = new SessionDecorator(selectors.currentSession);\n\n  return e(\n    'ShowSessionScreen',\n    { tagName: 'div', id: 'show-session-screen', className: 'screen' },\n    e('h1', { id: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: $${session.startTime()}`)),\n    e('div', null, e('span', null, `Time elapsed: ${session.timeElapsed()}`)),\n\n    e(\n      'form',\n      { id: 'rebuy-form', className: 'section' },\n      NumberInput({\n        id: 'rebuy-amount-input',\n        placeholder: selectors.currentSession.attributes.maxBuyin.toString(),\n        max: selectors.currentSession.attributes.maxBuyin,\n        value: appState.showSessionScreen.rebuyAmount,\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', { id: 'rebuy-max-button', type: 'button', value: 'Max' })\n    ),\n\n    TipsSection({ type: 'dealer', value: session.dealerTips() }),\n    TipsSection({ type: 'drink', value: session.drinkTips() }),\n\n    e(\n      'form',\n      { id: 'end-session-form', className: 'section' },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Cashout Amount'),\n          NumberInput({\n            min: 0,\n            id: 'cashout-amount-input',\n            placeholder: (\n              selectors.currentSession.attributes.maxBuyin * 3\n            ).toString(),\n          })\n        )\n      ),\n\n      appState.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            { id: 'admin-password-area' },\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              id: 'admin-password-input',\n              type: 'password',\n              autocomplete: 'current-password',\n              required: 'required',\n            })\n          ),\n\n      e('input', {\n        id: 'end-session-submit-button',\n        type: 'submit',\n        value: 'End Session',\n        disabled: appState.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n\nconst renderScreen = () => {\n  switch (appState.screen) {\n    case Screen.Intro:\n      return IntroScreen();\n    case Screen.NewSession:\n      return NewSessionScreen();\n    case Screen.ShowSession:\n      return ShowSessionScreen();\n    default:\n      throw new Error(`Unexpected screen ${screen}`);\n  }\n};\n\nconst reconcileProps = (\n  domNode: Element,\n  prevNode: VirtualElement,\n  newNode: VirtualElement\n) => {\n  for (const name of keys(newNode.props)) {\n    // HACK: With properties, our crappy virtal DOM can get out of sync after\n    // user input so we just always write.\n    if (ELEMENT_PROPERTIES.has(name) && newNode.props[name] !== undefined) {\n      // TODO: Fix type `Element` being too generic here.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domNode[name] = newNode.props[name];\n    } else if (newNode.props[name] !== prevNode.props[name]) {\n      if (typeof newNode.props[name] === 'boolean') {\n        if (newNode.props[name]) {\n          domNode.setAttribute(name, name);\n        } else {\n          domNode.removeAttribute(name);\n        }\n      } else {\n        domNode.setAttribute(name, String(newNode.props[name]));\n      }\n    }\n  }\n\n  for (const name of keys(prevNode.props)) {\n    if (newNode.props[name] === undefined) {\n      if (ELEMENT_PROPERTIES.has(name)) {\n        // TODO: Fix type `Element` being too generic here.\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        domNode[name] = '';\n      } else {\n        domNode.removeAttribute(name);\n      }\n    }\n  }\n};\n\nconst elementType = (element: NonNullable<VirtualNode>) => {\n  return typeof element === 'string' ? 'string' : element.type;\n};\n\nconst reconcile = (\n  domNode: Element | null,\n  prevNode: VirtualNode,\n  newNode: VirtualNode,\n  parentElement: Element\n) => {\n  if (!domNode) {\n    parentElement.appendChild(createDomNode(newNode));\n    return;\n  }\n\n  if (prevNode && newNode) {\n    if (elementType(prevNode) !== elementType(newNode)) {\n      domNode.parentElement?.replaceChild(createDomNode(newNode), domNode);\n      return;\n    }\n\n    if (typeof prevNode === 'string') {\n      domNode.parentElement?.replaceChild(createDomNode(newNode), domNode);\n      return;\n    }\n\n    // This is certain because we check that both types are the same above but\n    // TypeScript is not smart enough to know that.\n    if (typeof newNode === 'string') {\n      return;\n    }\n\n    reconcileProps(domNode, prevNode, newNode);\n\n    newNode.children.forEach((newNodeChild, index) => {\n      reconcile(\n        Array.from(domNode.childNodes).filter(\n          (node) =>\n            node.nodeType === ELEMENT_NODE_TYPE ||\n            node.nodeType === TEXT_NODE_TYPE\n        )[index] as Element,\n        prevNode.children[index],\n        newNodeChild,\n        domNode\n      );\n    });\n  } else if (newNode) {\n    domNode.parentElement?.replaceChild(createDomNode(newNode), domNode);\n  } else if (prevNode) {\n    domNode.remove();\n  }\n};\n\nlet prevVirtualNode = e('div');\n\nconst render = () => {\n  if (!appRoot) {\n    throw new Error('appRoot is not set');\n  }\n\n  if (!appRoot.parentElement) {\n    throw new Error('appRoot not attached to DOM');\n  }\n\n  const virtualNode = e('div', null, renderScreen());\n  reconcile(appRoot, prevVirtualNode, virtualNode, appRoot.parentElement);\n\n  prevVirtualNode = virtualNode;\n};\n\nconst navigateToIntroScreen = () => {\n  window.history.pushState({}, '', '#');\n  appState.screen = Screen.Intro;\n};\n\nconst navigateToNewSessionScreen = () => {\n  window.history.pushState({}, '', '#/sessions/new');\n  appState.screen = Screen.NewSession;\n};\n\nconst navigateToShowSessionScreen = (session: Session) => {\n  window.history.pushState({}, '', `#/sessions/${session.id}`);\n  appState.currentSessionId = session.id;\n  appState.screen = Screen.ShowSession;\n};\n\nconst rebuy = () => {\n  if (!selectors.currentSession) {\n    return;\n  }\n\n  selectors.currentSession.rebuy(\n    parseFloat(appState.showSessionScreen.rebuyAmount)\n  );\n  appState.showSessionScreen.rebuyAmount = '';\n};\n\nconst createSession = () => {\n  const session = Session.create(\n    appState.newSessionScreen.casinoName,\n    parseInt(appState.newSessionScreen.smallBlind),\n    parseInt(appState.newSessionScreen.bigBlind),\n    parseInt(appState.newSessionScreen.maxBuyin),\n    parseInt(appState.newSessionScreen.maxPlayers)\n  );\n\n  session.start();\n\n  navigateToShowSessionScreen(session);\n};\n\nconst saveToGoogleSheet = async () => {\n  if (!selectors.currentSession) {\n    return;\n  }\n\n  selectors.currentSession.end(\n    parseFloat(appState.showSessionScreen.cashoutAmount)\n  );\n\n  appState.showSessionScreen.isSavingSession = true;\n  render();\n\n  let response;\n\n  try {\n    response = await apiService.saveSession(\n      selectors.currentSession,\n      appState.cachedAdminPassword ?? appState.showSessionScreen.adminPassword\n    );\n  } finally {\n    appState.showSessionScreen.isSavingSession = false;\n    render();\n  }\n\n  if (response.ok) {\n    if (!appState.cachedAdminPassword) {\n      appState.cachedAdminPassword = appState.showSessionScreen.adminPassword;\n    }\n\n    alert('Success!');\n    navigateToIntroScreen();\n  } else {\n    alert('Something went wrong.');\n\n    // TODO: Use changesets so we don't have to do this.\n    selectors.currentSession.undoEnd();\n  }\n};\n\nconst prefillBlinds = (smallBlind: string, bigBlind: string) => {\n  appState.newSessionScreen.smallBlind = smallBlind;\n  appState.newSessionScreen.bigBlind = bigBlind;\n};\n\nconst prefillMaxBuyin = (maxBuyin: string) => {\n  appState.newSessionScreen.maxBuyin = maxBuyin;\n};\n\nconst handleClick = (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return false;\n  }\n\n  switch (event.target.id) {\n    case 'new-session-button':\n      navigateToNewSessionScreen();\n      return true;\n    case 'decrement-dealer-tip-button':\n      selectors.currentSession?.updateDealerTip(-1);\n      return true;\n    case 'increment-dealer-tip-button':\n      selectors.currentSession?.updateDealerTip(1);\n      return true;\n    case 'decrement-drink-tip-button':\n      selectors.currentSession?.updateDrinkTip(-1);\n      return true;\n    case 'increment-drink-tip-button':\n      selectors.currentSession?.updateDrinkTip(1);\n      return true;\n    case 'rebuy-max-button':\n      selectors.currentSession?.rebuyMax();\n      return true;\n  }\n\n  if (\n    event.target.classList.contains('prefill-blinds') &&\n    event.target.dataset.smallBlind &&\n    event.target.dataset.bigBlind\n  ) {\n    prefillBlinds(\n      event.target.dataset.smallBlind,\n      event.target.dataset.bigBlind\n    );\n\n    prefillMaxBuyin((parseInt(event.target.dataset.bigBlind) * 100).toString());\n\n    return true;\n  }\n\n  return false;\n};\n\nconst handleAppClick = (event: Event) => {\n  if (handleClick(event)) {\n    render();\n  }\n};\n\nconst handleSubmit = async (event: Event) => {\n  if (!objectIsHtmlElement(event.target)) {\n    return false;\n  }\n\n  event.preventDefault();\n\n  switch (event.target.id) {\n    case 'new-session-form':\n      createSession();\n      return true;\n    case 'rebuy-form':\n      rebuy();\n      return true;\n    case 'end-session-form':\n      await saveToGoogleSheet();\n      return true;\n  }\n\n  return false;\n};\n\nconst handleAppSubmit = async (event: Event) => {\n  if (await handleSubmit(event)) {\n    render();\n  }\n};\n\nconst handleInput = (event: Event) => {\n  if (!objectIsHtmlInputElement(event.target)) {\n    return false;\n  }\n\n  const idToStateKey = (id: string) => {\n    switch (id) {\n      case 'casino-name-input':\n        return 'newSessionScreen.casinoName';\n      case 'small-blind-input':\n        return 'newSessionScreen.smallBlind';\n      case 'big-blind-input':\n        return 'newSessionScreen.bigBlind';\n      case 'max-buyin-input':\n        return 'newSessionScreen.maxBuyin';\n      case 'max-players-input':\n        return 'newSessionScreen.maxPlayers';\n      case 'rebuy-amount-input':\n        return 'showSessionScreen.rebuyAmount';\n      case 'cashout-amount-input':\n        return 'showSessionScreen.cashoutAmount';\n      case 'admin-password-input':\n        return 'showSessionScreen.adminPassword';\n    }\n  };\n\n  const key = idToStateKey(event.target.id);\n  if (!key) {\n    return false;\n  }\n\n  return objectSet(appState, key, event.target.value);\n};\n\nconst handleAppInput = (event: Event) => {\n  if (handleInput(event)) {\n    render();\n  }\n};\n\nconst environment = getEnvironment();\nconst apiService = new ApiService();\nconst appState = loadAppState();\nconst selectors = new Selectors(appState);\nconst appRoot = document.getElementById('root');\n\nif (appRoot) {\n  appRoot.addEventListener('click', handleAppClick);\n  appRoot.addEventListener('submit', handleAppSubmit);\n  appRoot.addEventListener('input', handleAppInput);\n}\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveAppState, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveAppState);\n\nwindow.onbeforeunload = saveAppState;\n\nrender();\n"],"names":["$df5bef30413a053b$export$31b40729666a4ae0","Date","now","toString","Math","random","substring","$df5bef30413a053b$export$c26d41fa6f97693c","object","tagName","$df5bef30413a053b$export$53b83ca8eaab0383","Array","isArray","$b4e14b6b8da86996$var$ELEMENT_PROPERTIES","Set","$b4e14b6b8da86996$var$Environments","Environments","$b4e14b6b8da86996$var$Screen","Screen","$b4e14b6b8da86996$var$SessionDecorator","constructor","session","this","drinkTips","attributes","dealerTips","blinds","smallBlind","bigBlind","maxBuyin","title","casinoName","join","startTime","toLocaleString","profit","cashoutAmount","buyinsTotal","timeElapsed","ms","seconds","hours","floor","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","$b4e14b6b8da86996$var$Session","static","maxPlayers","id","$b4e14b6b8da86996$var$appState","sessions","buyins","Error","endTime","start","toISOString","push","amount","time","rebuy","rebuyMax","end","undoEnd","reduce","prev","current","updateTip","type","change","updateDealerTip","updateDrinkTip","$b4e14b6b8da86996$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$b4e14b6b8da86996$var$saveAppState","window","localStorage","setItem","JSON","stringify","cachedAdminPassword","$b4e14b6b8da86996$var$keys","Object","keys","$b4e14b6b8da86996$var$isNativeElementType","str","toUpperCase","$b4e14b6b8da86996$var$createDomNode","virtualNode","document","createTextNode","props","children","element","createElement","name","value","has","setAttribute","String","child","childDomElement","appendChild","$b4e14b6b8da86996$var$e","$b4e14b6b8da86996$var$NumberInput","placeholder","min","max","pattern","required","$b4e14b6b8da86996$var$BlindsButton","className","$b4e14b6b8da86996$var$TipsSection","slice","$b4e14b6b8da86996$var$renderScreen","screen","newSessionScreen","$b4e14b6b8da86996$var$selectors","currentSession","showSessionScreen","rebuyAmount","autocomplete","disabled","isSavingSession","$b4e14b6b8da86996$var$ShowSessionScreen","$b4e14b6b8da86996$var$elementType","$b4e14b6b8da86996$var$reconcile","domNode","prevNode","newNode","parentElement","replaceChild","undefined","removeAttribute","name1","$b4e14b6b8da86996$var$reconcileProps","forEach","newNodeChild","index","from","childNodes","filter","node","nodeType","remove","$b4e14b6b8da86996$var$prevVirtualNode","$b4e14b6b8da86996$var$render","$b4e14b6b8da86996$var$appRoot","$b4e14b6b8da86996$var$createSession","create","parseInt","history","pushState","currentSessionId","$b4e14b6b8da86996$var$navigateToShowSessionScreen","$b4e14b6b8da86996$var$saveToGoogleSheet","async","response","parseFloat","$b4e14b6b8da86996$var$apiService","saveSession","adminPassword","ok","alert","$b4e14b6b8da86996$var$handleClick","event","target","classList","contains","dataset","$b4e14b6b8da86996$var$handleAppClick","$b4e14b6b8da86996$var$handleSubmit","preventDefault","$b4e14b6b8da86996$var$handleAppSubmit","$b4e14b6b8da86996$var$handleInput","key","idToStateKey","subKeys","split","lastKey","pop","key1","next","$df5bef30413a053b$export$b6497f19c886af0e","$b4e14b6b8da86996$var$handleAppInput","$b4e14b6b8da86996$var$environment","location","hostname","Development","Production","origin","request","path","body","requestOptions","url","fetch","method","headers","post","data","stateItem","getItem","state","parse","sessionPath","hash","match","$b4e14b6b8da86996$var$locationToSessionId","$b4e14b6b8da86996$var$loadAppState","appState","_cachedCurrentSessionId","_cachedCurrentSession","getElementById","addEventListener","setInterval","onbeforeunload"],"version":3,"file":"index.02b00c8a.js.map"}