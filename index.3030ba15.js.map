{"mappings":"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","sources":["node_modules/recat-core/dist/src/types.ts","node_modules/recat-core/dist/src/utils.ts","node_modules/recat-core/dist/src/hooks.ts","node_modules/recat-core/dist/src/polyfills.ts","node_modules/recat-core/dist/src/render.ts","src/types.ts","src/state/app.ts","src/components/App/index.ts","src/components/BlindsButton.ts","src/utils.ts","src/models/session.ts","src/decorators/session.ts","src/selectors/app.ts","src/components/SessionsList.ts","src/components/IntroScreen.ts","src/components/NewSessionScreen.ts","src/components/NumberInput.ts","src/constants.ts","src/components/ShowSessionScreen/index.ts","src/services/api.ts","src/components/TipsSection/index.ts","src/components/SuggestedCasino.ts","src/components/Timer.ts","src/components/AppFooter/index.ts","src/index.ts"],"sourcesContent":["export type Primitive = string | number | boolean | null | undefined;\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport type ElementKeys = Writeable<\n  HTMLElementTagNameMap[keyof HTMLElementTagNameMap]\n>;\n\nexport type EventHandler = (this: HTMLElement, ev: Event) => void;\n\nexport type CustomProperties = {\n  onInput: EventHandler;\n  onClick: EventHandler;\n  onSubmit: EventHandler;\n};\n\nexport type VirtualElementProps = Partial<ElementKeys & CustomProperties>;\n\nexport type VirtualNativeElement = {\n  type: keyof HTMLElementTagNameMap;\n  props: VirtualElementProps;\n  children: (null | VirtualElement)[];\n};\n\nexport type VirtualFunctionElement<Props = unknown> = {\n  type: FunctionComponent<Props>;\n  props: VirtualElementProps;\n  result: null | VirtualFunctionElement | VirtualNativeElement;\n};\n\nexport type VirtualStringElement = {\n  type: 'String';\n  value: string;\n};\n\nexport type VirtualElement<Props = unknown> =\n  | VirtualNativeElement\n  | VirtualFunctionElement<Props>\n  | VirtualStringElement;\n\nexport type FunctionComponent<Props = void> = Props extends void\n  ? () => null | VirtualNativeElement | VirtualFunctionElement<void>\n  : (\n      props: Props\n    ) => null | VirtualNativeElement | VirtualFunctionElement<Props>;\n\nexport type FC<Props> = FunctionComponent<Props>;\n\nexport enum NodeTypes {\n  Element = 1,\n  Text = 3,\n}\n","import {\n  Primitive,\n  VirtualElement,\n  VirtualFunctionElement,\n  VirtualStringElement,\n  VirtualNativeElement,\n  NodeTypes,\n} from './types';\n\n// See https://github.com/microsoft/TypeScript/pull/12253#issuecomment-353494273\nexport const keys = Object.keys as <T>(o: T) => (keyof T)[];\n\nexport const isVirtualFunctionElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualFunctionElement =>\n  typeof virtualElement.type === 'function';\n\nexport const isVirtualStringElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualStringElement => virtualElement.type === 'String';\n\nexport const isVirtualNativeElement = (\n  virtualElement: VirtualElement\n): virtualElement is VirtualNativeElement =>\n  !isVirtualStringElement(virtualElement) &&\n  !isVirtualFunctionElement(virtualElement);\n\nexport const isElementNode = (node: Node): node is Element =>\n  node.nodeType === NodeTypes.Element;\n\nexport const isTextNode = (node: Node): node is Text =>\n  node.nodeType === NodeTypes.Text;\n\nexport const replaceNode = (\n  node: Text | Element | Comment,\n  newNode: Text | HTMLElement | Comment | null\n) => {\n  if (!newNode) {\n    return;\n  }\n\n  return node.parentElement?.replaceChild(newNode, node);\n};\n\nexport const appendNode = (\n  node: Text | Element | Comment,\n  newNode: Text | HTMLElement | Comment | null\n) => {\n  if (!newNode) {\n    return;\n  }\n\n  return node.appendChild(newNode);\n};\n\nexport const insertBefore = (\n  newNode: Text | HTMLElement | Comment | null,\n  referenceNode: Text | Element | Comment\n) => {\n  if (!newNode) {\n    return;\n  }\n\n  return referenceNode.parentNode?.insertBefore(newNode, referenceNode);\n};\n\nexport const arraysEqual = (arr1: Primitive[], arr2: Primitive[]) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import { Primitive, FunctionComponent, VirtualFunctionElement } from './types';\nimport { arraysEqual } from './utils';\n\ntype Effect = {\n  callback: () => void;\n  unmountCallback: void | (() => void);\n  dependencies: Primitive[];\n};\n\ntype HookData<T> = {\n  [key in keyof T]: T[key];\n};\n\ntype UseStateHook = HookData<{ value: unknown }>;\ntype UseEffectHook = HookData<Effect>;\n\nlet currentComponent: FunctionComponent<unknown>;\nlet currentForceRender: () => void;\n\nconst hooks = {\n  useStateCallCount: 0,\n  useState: new Map<FunctionComponent<unknown>, UseStateHook[]>(),\n  useEffect: new Map<FunctionComponent<unknown>, UseEffectHook[]>(),\n};\n\n// Calls callback if dependencies change between renders.\nexport const useEffect = (\n  callback: Effect['callback'],\n  dependencies: Effect['dependencies']\n) => {\n  const componentEffects = hooks.useEffect.get(currentComponent) || [];\n\n  componentEffects.push({\n    callback,\n    dependencies,\n    unmountCallback: undefined,\n  });\n\n  hooks.useEffect.set(currentComponent, componentEffects);\n};\n\n// TODO: This should be a special case of `useReducer` once it's implemented.\nexport const useState = <T>(initialValue: T): [T, (value: T) => void] => {\n  let componentHookCalls = hooks.useState.get(currentComponent);\n  if (!componentHookCalls) {\n    componentHookCalls = [];\n    hooks.useState.set(currentComponent, componentHookCalls);\n  }\n\n  let hook = componentHookCalls[hooks.useStateCallCount];\n  if (!hook) {\n    hook = { value: initialValue };\n    componentHookCalls.push(hook);\n  }\n\n  hooks.useStateCallCount += 1;\n\n  const createSetState = (hook: UseStateHook) => (value: T) => {\n    if (hook.value !== value) {\n      hook.value = value;\n\n      // We could end up here during the current render. That means we'd kick\n      // off another render before the DOM has finished updating. So we use\n      // `requestIdleCallback` to ensure the next render runs after the current\n      // one is complete.\n      // TODO: Once fibers are implemented, this can go away.\n      requestIdleCallback(currentForceRender);\n    }\n  };\n\n  return [hook.value as T, createSetState(hook)];\n};\n\nexport const mountWithHooks = (\n  virtualElement: VirtualFunctionElement,\n  forceRender: () => void\n) => {\n  hooks.useStateCallCount = 0;\n  currentComponent = virtualElement.type;\n  currentForceRender = forceRender;\n\n  const prevEffects = hooks.useEffect.get(virtualElement.type);\n\n  // Repopulates after calling the function component below.\n  hooks.useEffect.delete(virtualElement.type);\n\n  virtualElement.result = virtualElement.type(virtualElement.props);\n\n  const currentUseEffectCalls = hooks.useEffect.get(currentComponent);\n\n  if (!currentUseEffectCalls || currentUseEffectCalls.length === 0) {\n    return virtualElement.result;\n  }\n\n  currentUseEffectCalls.forEach((nextEffect, index) => {\n    const prevEffect = prevEffects?.[index];\n\n    if (\n      prevEffect &&\n      arraysEqual(prevEffect.dependencies, nextEffect.dependencies)\n    ) {\n      nextEffect.unmountCallback = prevEffect.unmountCallback;\n    } else {\n      nextEffect.unmountCallback = nextEffect.callback();\n    }\n  });\n\n  return virtualElement.result;\n};\n\nexport const unmountWithHooks = (virtualElement: VirtualFunctionElement) => {\n  const componentEffects = hooks.useEffect.get(virtualElement.type);\n  if (!componentEffects) {\n    return virtualElement.result;\n  }\n\n  for (const { unmountCallback } of componentEffects) {\n    if (unmountCallback) {\n      unmountCallback();\n    }\n  }\n\n  hooks.useEffect.delete(virtualElement.type);\n  hooks.useState.delete(virtualElement.type);\n\n  return virtualElement.result;\n};\n","// TODO: Use an actual polyfill. This is gross.\nexport const polyfillRequestIdleCallback = (\n  window: Window | typeof globalThis\n) => {\n  if (typeof window.requestIdleCallback === 'undefined') {\n    window.requestIdleCallback = (\n      callback: IdleRequestCallback,\n      options?: IdleRequestOptions\n    ) => setTimeout(callback, 0);\n  }\n};\n\nexport const polyfillAll = (window: Window | typeof globalThis) => {\n  polyfillRequestIdleCallback(window);\n};\n","import {\n  FunctionComponent,\n  ElementKeys,\n  CustomProperties,\n  VirtualStringElement,\n  VirtualElement,\n  VirtualFunctionElement,\n  VirtualElementProps,\n  VirtualNativeElement,\n  EventHandler,\n  NodeTypes,\n} from './types';\nimport {\n  keys,\n  isVirtualFunctionElement,\n  isVirtualNativeElement,\n  isTextNode,\n  isElementNode,\n  replaceNode,\n  appendNode,\n  insertBefore,\n} from './utils';\nimport { mountWithHooks, unmountWithHooks } from './hooks';\nimport { polyfillAll } from './polyfills';\n\nenum ElementProperties {\n  Value = 'value',\n  ClassName = 'className',\n}\n\nconst ELEMENT_PROPERTIES = new Set<Partial<ElementKeys>>(\n  Object.values(ElementProperties)\n);\n\nconst EVENT_PROPS: Map<keyof CustomProperties, keyof HTMLElementEventMap> =\n  new Map([\n    ['onInput', 'input'],\n    ['onClick', 'click'],\n    ['onSubmit', 'submit'],\n  ]);\n\nconst createVirtualStringElement = (value: string): VirtualStringElement => ({\n  type: 'String',\n  value,\n});\n\nexport function createElement<Props, ChildProps>(\n  type: FunctionComponent<Props>,\n  props?: Props,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n): VirtualFunctionElement<Props>;\n\nexport function createElement<ChildProps>(\n  type: keyof HTMLElementTagNameMap,\n  props?: VirtualElementProps | null,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n): VirtualNativeElement;\n\nexport function createElement<Props, ChildProps>(\n  type: FunctionComponent<Props> | keyof HTMLElementTagNameMap,\n  props?: Props | VirtualElementProps | null,\n  ...children: (null | string | VirtualElement<ChildProps>)[]\n) {\n  return typeof type === 'function'\n    ? ({\n        type,\n        props: props || {},\n        result: null,\n      } as VirtualFunctionElement<Props>)\n    : ({\n        type,\n        props: {\n          ...props,\n          tagName: type || 'div',\n        },\n        children: children.map((child) =>\n          typeof child === 'string' ? createVirtualStringElement(child) : child\n        ),\n      } as VirtualNativeElement);\n}\n\nexport const e = createElement;\n\nconst reconcileEventHandlerProps = (\n  domNode: Element,\n  nativeEventName: string,\n  prevValue: EventHandler | undefined,\n  newValue: EventHandler | undefined\n) => {\n  if (prevValue === newValue) {\n    return;\n  }\n\n  if (prevValue) {\n    domNode.removeEventListener(nativeEventName, prevValue);\n  }\n\n  if (newValue) {\n    domNode.addEventListener(nativeEventName, newValue);\n  }\n};\n\nconst reconcileProps = (\n  domNode: Element,\n  prevNode: VirtualElement | null,\n  newNode: VirtualElement | null\n) => {\n  if (prevNode?.type === 'String' || newNode?.type === 'String') {\n    return;\n  }\n\n  const prevPropKeys = prevNode ? keys(prevNode.props) : [];\n  const newPropKeys = newNode ? keys(newNode.props) : [];\n\n  for (const name of newPropKeys.concat(prevPropKeys)) {\n    const prevValue = prevNode?.props[name];\n    const newValue = newNode?.props[name];\n\n    // HACK: With properties (as opposed to attributes), our crappy virtal DOM\n    // can get out of sync after user input so we just always write.\n    if (ELEMENT_PROPERTIES.has(name)) {\n      // TODO: Fix type `Element` being too generic here.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      domNode[name] = newValue === undefined ? '' : newValue;\n      continue;\n    }\n\n    if (prevValue === newValue) {\n      continue;\n    }\n\n    if (name === 'onClick' || name === 'onInput' || name === 'onSubmit') {\n      const nativeEventName = EVENT_PROPS.get(name);\n\n      if (nativeEventName) {\n        reconcileEventHandlerProps(\n          domNode,\n          nativeEventName,\n          prevNode?.props[name],\n          newNode?.props[name]\n        );\n      }\n\n      continue;\n    }\n\n    if (typeof newValue === 'boolean') {\n      if (newValue) {\n        domNode.setAttribute(name, '');\n      } else {\n        domNode.removeAttribute(name);\n      }\n    } else if (typeof newValue === 'undefined') {\n      domNode.removeAttribute(name);\n    } else {\n      domNode.setAttribute(name, String(newValue));\n    }\n  }\n};\n\nconst createDomNode = (\n  virtualElement: VirtualElement | null\n): Text | HTMLElement | null => {\n  if (!virtualElement) {\n    return null;\n  }\n\n  if (virtualElement.type === 'String') {\n    return appDocument.createTextNode(virtualElement.value);\n  }\n\n  if (isVirtualFunctionElement(virtualElement)) {\n    return createDomNode(mountWithHooks(virtualElement, forceRender));\n  }\n\n  const { children, type: tagName } = virtualElement;\n  const element = appDocument.createElement(tagName);\n\n  reconcileProps(element, null, virtualElement);\n\n  for (const child of children) {\n    if (!child) {\n      continue;\n    }\n\n    const childDomElement = createDomNode(child);\n\n    if (!childDomElement) {\n      continue;\n    }\n\n    element.appendChild(childDomElement);\n  }\n\n  return element;\n};\n\nconst reconcileStrings = (\n  domNode: Element | Text,\n  prevNode: VirtualStringElement,\n  newNode: VirtualStringElement\n) => {\n  if (prevNode.value === newNode.value) {\n    return;\n  }\n\n  if (isElementNode(domNode)) {\n    replaceNode(domNode, createDomNode(newNode));\n  } else if (isTextNode(domNode)) {\n    domNode.replaceData(0, domNode.length, newNode.value);\n  }\n};\n\nexport const reconcile = (\n  domNode: Element | Text,\n  prevNode: VirtualElement | undefined | null,\n  newNode: VirtualElement | undefined | null\n) => {\n  if (!newNode) {\n    domNode.remove();\n    return;\n  }\n\n  if (!prevNode || prevNode.type !== newNode.type) {\n    if (prevNode && isVirtualFunctionElement(prevNode)) {\n      // TODO: This should happen recursively for all child nodes being removed.\n      unmountWithHooks(prevNode);\n    }\n\n    replaceNode(domNode, createDomNode(newNode));\n    return;\n  }\n\n  // We have to repeatedly check the type of `prevNode` even though we ensure\n  // that both types are the same above.\n  // See https://stackoverflow.com/questions/71397541\n  if (prevNode.type === 'String' && newNode.type === 'String') {\n    reconcileStrings(domNode, prevNode, newNode);\n    return;\n  }\n\n  if (isTextNode(domNode)) {\n    replaceNode(domNode, createDomNode(newNode));\n    return;\n  }\n\n  if (isVirtualFunctionElement(prevNode) && isVirtualFunctionElement(newNode)) {\n    reconcile(domNode, prevNode.result, mountWithHooks(newNode, forceRender));\n    return;\n  }\n\n  if (isVirtualNativeElement(prevNode) && isVirtualNativeElement(newNode)) {\n    reconcileProps(domNode, prevNode, newNode);\n\n    const domNodeChildren = Array.from(domNode.childNodes).filter(\n      (node) =>\n        node.nodeType === NodeTypes.Element || node.nodeType === NodeTypes.Text\n    ) as (Element | Text)[];\n\n    const maxChildren = Math.max(\n      prevNode.children.length,\n      newNode.children.length\n    );\n\n    let domIndex = 0;\n\n    for (let index = 0; index < maxChildren; index += 1) {\n      const domNodeChild = domNodeChildren[domIndex];\n      const prevNodeChild = prevNode.children[index];\n      const newNodeChild = newNode.children[index];\n\n      const prevExists =\n        prevNodeChild && isVirtualFunctionElement(prevNodeChild)\n          ? !!prevNodeChild.result\n          : !!prevNodeChild;\n\n      const newExists = !!newNodeChild;\n\n      // There are a few cases to consider when child nodes are updated:\n      //\n      // 1. DOM node does not exist:\n      //    a. A new virtual DOM node exists:\n      //       Just append a child under the parent node.\n      // 2. DOM node exists:\n      //    a. Both prev and next virtual DOM nodes exist:\n      //       No deletion/addition happened so just reconcile the nodes.\n      //    b. Prev virtual node exists but next does not:\n      //       A deletion happened so remove the DOM node.\n      //    c. Prev virtual node does not exist but next exists:\n      //       An insertion happened. Since we know a DOM node exists, we insert\n      //       before that node. What about insertion at the end of the child\n      //       list? That is handled by case 1a where a DOM node does not exist.\n\n      if (domNodeChild) {\n        if (prevExists && newExists) {\n          reconcile(domNodeChild, prevNodeChild, newNodeChild);\n        } else if (prevExists) {\n          domNodeChild.remove();\n        } else if (newExists) {\n          insertBefore(createDomNode(newNodeChild), domNodeChild);\n          continue;\n        } else {\n          continue;\n        }\n      } else if (newExists) {\n        appendNode(domNode, createDomNode(newNodeChild));\n      }\n\n      domIndex += 1;\n    }\n  }\n};\n\nlet prevVirtualElement: VirtualElement = createElement('div');\nlet forceRender: () => void;\nlet appDocument: Document;\nlet polyfilled = false;\n\n// TODO: Add `createRoot` function instead.\nexport const render = (\n  component: VirtualNativeElement | VirtualFunctionElement,\n  appRoot: HTMLElement\n) => {\n  // Lets us avoid calling `global.document` so we can run this in a Node\n  // environment. Particularly useful for testing.\n  appDocument = appRoot.ownerDocument;\n\n  if (!polyfilled && appDocument.defaultView) {\n    polyfillAll(appDocument.defaultView);\n    polyfilled = true;\n  }\n\n  const virtualElement = createElement('div', null, component);\n\n  // We cache this for use in `mountWithHooks` (the `useState` hook needs to be\n  // able to trigger renders).\n  // TODO: Add the ability to do a partial render.\n  forceRender = () => render(component, appRoot);\n\n  reconcile(appRoot, prevVirtualElement, virtualElement);\n\n  prevVirtualElement = virtualElement;\n};\n","export type Primitive = string | number | boolean | null | undefined;\n\nexport type PlainObject = {\n  [key: string]: Primitive | PlainObject | PlainObject[];\n};\n\nexport enum Environments {\n  Development = 'development',\n  Production = 'production',\n}\n\nexport enum Screen {\n  Intro = 'intro',\n  NewSession = 'new-session',\n  ShowSession = 'show-session',\n}\n","import { Screen } from '../types';\n\nconst LOCAL_STORAGE_KEY = 'pokerTracker';\n\ntype SessionAttributes = {\n  id: string;\n  startTime?: string;\n  endTime?: string;\n  casinoName: string;\n  smallBlind: number;\n  bigBlind: number;\n  maxBuyin: number;\n  notes: string;\n  cashoutAmount: number;\n  drinkTips: number;\n  dealerTips: number;\n  buyins: { amount: number; time: string }[];\n};\n\nexport type AppState = {\n  screen: Screen;\n  currentSessionId?: string;\n  sessions: { [id: string]: SessionAttributes };\n  showSessionScreen: {\n    rebuyAmount: string;\n    notes: string;\n    cashoutAmount: string;\n    adminPassword: string;\n    isSavingSession: boolean;\n  };\n  newSessionScreen: {\n    casinoName: string;\n    smallBlind: string;\n    bigBlind: string;\n    maxBuyin: string;\n  };\n  cachedAdminPassword?: string;\n};\n\nconst locationToSessionId = () => {\n  const sessionPath = window.location.hash.match(/#\\/sessions\\/(.+)/);\n\n  if (sessionPath) {\n    return sessionPath[1];\n  }\n};\n\nconst sessionIdToScreen = (sessionId?: string) => {\n  if (!sessionId) {\n    return Screen.Intro;\n  }\n\n  if (sessionId === 'new') {\n    return Screen.NewSession;\n  }\n\n  return Screen.ShowSession;\n};\n\nconst loadAppState = (): AppState => {\n  const stateItem = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n  const state = stateItem ? JSON.parse(stateItem) : {};\n  const sessionId = locationToSessionId();\n\n  return {\n    screen: sessionIdToScreen(sessionId),\n    sessions: {},\n    currentSessionId: sessionId,\n    showSessionScreen: {\n      rebuyAmount: '',\n      notes: '',\n      cashoutAmount: '',\n      adminPassword: '',\n      isSavingSession: false,\n    },\n    newSessionScreen: {\n      casinoName: '',\n      smallBlind: '',\n      bigBlind: '',\n      maxBuyin: '',\n    },\n    ...state,\n  };\n};\n\nexport const state = {\n  app: loadAppState(),\n};\n\nexport const setupAppState = (onStateChange: () => void) => {\n  state.app = new Proxy(state.app, {\n    get(target, key, receiver) {\n      if (!Reflect.has(target, key)) {\n        return;\n      }\n\n      const value = Reflect.get(target, key, receiver);\n\n      if (typeof value === 'object' && value !== null) {\n        return new Proxy(value, this);\n      } else {\n        return value;\n      }\n    },\n\n    set(target, key, value, receiver) {\n      const success = Reflect.set(target, key, value, receiver);\n      if (success) {\n        onStateChange();\n      }\n      return success;\n    },\n  });\n\n  onStateChange();\n}\n\nexport const saveToLocalStorage = () => {\n  window.localStorage.setItem(\n    LOCAL_STORAGE_KEY,\n    JSON.stringify({\n      sessions: state.app.sessions,\n      // This is not very secure but I'm the only user of this hacky app.\n      // Long-term we would want JWT.\n      cachedAdminPassword: state.app.cachedAdminPassword,\n    })\n  );\n};\n","import { e, FunctionComponent } from 'recat-core';\n\nimport { IntroScreen, NewSessionScreen, ShowSessionScreen } from '..';\nimport { AppFooter } from '..';\nimport { Screen } from '../../types';\nimport { state } from '../../state';\nimport './styles.css';\n\nconst selectScreen = (screen: Screen) => {\n  switch (screen) {\n    case Screen.Intro:\n      return IntroScreen;\n    case Screen.NewSession:\n      return NewSessionScreen;\n    case Screen.ShowSession:\n      return ShowSessionScreen;\n    default:\n      throw new Error(`Unknown screen ${state.app.screen}`);\n  }\n};\n\nexport const App: FunctionComponent = () => {\n  const Screen = selectScreen(state.app.screen);\n  return e('div', { className: 'app' }, e(Screen), e(AppFooter));\n};\n","import { e, FunctionComponent } from 'recat-core';\n\nimport { state } from '../state';\n\ntype Props = {\n  smallBlind: number;\n  bigBlind: number;\n};\n\nexport const BlindsButton: FunctionComponent<Props> = ({\n  smallBlind,\n  bigBlind,\n}) => {\n  const handleClickPrefillBlinds = () => {\n    state.app.newSessionScreen.smallBlind = smallBlind.toString();\n    state.app.newSessionScreen.bigBlind = bigBlind.toString();\n    state.app.newSessionScreen.maxBuyin = (bigBlind * 100).toString();\n  };\n\n  return e(\n    'button',\n    {\n      type: 'button',\n      className: 'prefill-blinds',\n      onClick: handleClickPrefillBlinds,\n    },\n    `${smallBlind}/${bigBlind}`\n  );\n};\n","// See https://stackoverflow.com/a/44078785/659910\nexport const uuid = () =>\n  Date.now().toString(36) + Math.random().toString(36).substring(2);\n\nexport const formatDuration = (ms: number) => {\n  let seconds = ms / 1000;\n\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds - hours * 3600) / 60);\n\n  seconds = Math.round(seconds - hours * 3600 - minutes * 60);\n\n  const hoursFormatted = hours < 10 ? `0${hours}` : hours.toString();\n  const minutesFormatted = minutes < 10 ? `0${minutes}` : minutes.toString();\n  const secondsFormatted = seconds < 10 ? `0${seconds}` : seconds.toString();\n\n  return `${hoursFormatted}:${minutesFormatted}:${secondsFormatted}`;\n};\n\nexport const capitalize = (str: string) =>\n  `${str[0].toUpperCase()}${str.slice(1)}`;\n\n// Works like `Date#toISOString()` but includes the client timezone.\n// See https://stackoverflow.com/a/17415677/659910\nexport const toISOString = (date: Date) => {\n  const tzo = -date.getTimezoneOffset();\n  const dif = tzo >= 0 ? '+' : '-';\n  const pad = (num: number) => (num < 10 ? '0' : '') + num;\n\n  return (\n    date.getFullYear() +\n    '-' +\n    pad(date.getMonth() + 1) +\n    '-' +\n    pad(date.getDate()) +\n    'T' +\n    pad(date.getHours()) +\n    ':' +\n    pad(date.getMinutes()) +\n    ':' +\n    pad(date.getSeconds()) +\n    dif +\n    pad(Math.floor(Math.abs(tzo) / 60)) +\n    ':' +\n    pad(Math.abs(tzo) % 60)\n  );\n};\n","import { uuid, toISOString } from '../utils';\nimport { state } from '../state';\n\nexport class Session {\n  id: string;\n\n  static create(\n    casinoName: string,\n    smallBlind: number,\n    bigBlind: number,\n    maxBuyin: number,\n  ) {\n    const id = uuid();\n\n    state.app.sessions[id] = {\n      id,\n      casinoName,\n      smallBlind,\n      bigBlind,\n      maxBuyin,\n      notes: '',\n      cashoutAmount: 0,\n      dealerTips: 0,\n      drinkTips: 0,\n      buyins: [],\n    };\n\n    return new this(id);\n  }\n\n  constructor(id: string) {\n    this.id = id;\n\n    if (!this.attributes) {\n      throw new Error(`Session ${id} does not exist`);\n    }\n  }\n\n  get attributes() {\n    return state.app.sessions[this.id];\n  }\n\n  get startTime() {\n    return this.attributes.startTime\n      ? new Date(this.attributes.startTime)\n      : null;\n  }\n\n  get endTime() {\n    return this.attributes.endTime ? new Date(this.attributes.endTime) : null;\n  }\n\n  start() {\n    if (this.startTime) {\n      throw new Error('Session already started');\n    }\n\n    if (this.endTime) {\n      throw new Error('Session already ended');\n    }\n\n    this.attributes.startTime = toISOString(new Date());\n    this.attributes.buyins.push({\n      amount: this.attributes.maxBuyin,\n      time: this.attributes.startTime,\n    });\n  }\n\n  rebuy(amount: number) {\n    this.attributes.buyins.push({\n      amount,\n      time: new Date().toISOString(),\n    });\n  }\n\n  rebuyMax() {\n    this.rebuy(this.attributes.maxBuyin);\n  }\n\n  end(cashoutAmount: number, notes: string) {\n    this.attributes.cashoutAmount = cashoutAmount;\n    this.attributes.endTime = toISOString(new Date());\n    this.attributes.notes = notes;\n  }\n\n  undoEnd() {\n    this.attributes.cashoutAmount = 0;\n    delete this.attributes.endTime;\n  }\n\n  buyinsTotal() {\n    return this.attributes.buyins.reduce(\n      (prev, current) => prev + current.amount,\n      0\n    );\n  }\n\n  updateTip(type: 'dealerTips' | 'drinkTips', change: number) {\n    if (this.attributes[type] + change < 0) {\n      return;\n    }\n\n    this.attributes[type] += change;\n  }\n\n  updateDealerTip(change: number) {\n    this.updateTip('dealerTips', change);\n  }\n\n  updateDrinkTip(change: number) {\n    this.updateTip('drinkTips', change);\n  }\n}\n","import { Session as SessionModel } from '../models';\n\nexport class Session {\n  session: SessionModel;\n\n  constructor(session: SessionModel) {\n    this.session = session;\n  }\n\n  drinkTips() {\n    return `$${this.session.attributes.drinkTips ?? 0}`;\n  }\n\n  dealerTips() {\n    return `$${this.session.attributes.dealerTips ?? 0}`;\n  }\n\n  blinds() {\n    return `${this.session.attributes.smallBlind}/${this.session.attributes.bigBlind}`;\n  }\n\n  maxBuyin() {\n    return `$${this.session.attributes.maxBuyin} max`;\n  }\n\n  title() {\n    return [\n      this.session.attributes.casinoName,\n      this.blinds(),\n      this.maxBuyin(),\n    ].join(' ');\n  }\n\n  startTime() {\n    return this.session.startTime?.toLocaleString() ?? '';\n  }\n\n  profit() {\n    const cashoutAmount = this.session.attributes.cashoutAmount ?? 0;\n    return (cashoutAmount - this.session.buyinsTotal()).toString();\n  }\n}\n","import { Session } from '../models';\nimport { Session as SessionDecorator } from '../decorators';\nimport { state, AppState } from '../state';\n\n// TODO: Add caching. Could use Proxy with a dependency array.\nclass Selectors {\n  appState: AppState;\n\n  constructor(appState: AppState) {\n    this.appState = appState;\n  }\n\n  get currentSession() {\n    if (\n      this.appState.currentSessionId\n    ) {\n      return new Session(this.appState.currentSessionId);\n    }\n  }\n\n  get recentSessions() {\n    return Object.values(this.appState.sessions)\n      .sort((a, b) =>\n        a.startTime && b.startTime\n          ? Date.parse(b.startTime) - Date.parse(a.startTime)\n          : -1\n      ).map(attrs => new SessionDecorator(new Session(attrs.id)));\n  }\n\n  // TODO: Get this using a frecency algorithm.\n  get mostFrequentCasinoName() {\n    return this.recentSessions[0]?.session.attributes.casinoName;\n  }\n}\n\nexport const selectors = new Selectors(state.app);\n","import { e, FunctionComponent } from 'recat-core';\n\nimport { appSelectors } from '../selectors';\nimport { Screen } from '../types';\nimport { state } from '../state';\n\nexport const SessionsList: FunctionComponent = () => {\n  const navigateToSession = (sessionId: string) => {\n    state.app.currentSessionId = sessionId;\n    state.app.screen = Screen.ShowSession;\n  };\n\n  const handleClickClearPastSessions = (event: Event) => {\n    event.preventDefault();\n    state.app.currentSessionId = '';\n    state.app.sessions = {};\n  };\n\n  return e(\n    'div',\n    null,\n    e(\n      'ol',\n      null,\n      ...appSelectors.recentSessions.map((session) =>\n        e(\n          'li',\n          null,\n          e(\n            'a',\n            {\n              href: `/#/sessions/${session.session.attributes.id}`,\n              // TODO: For links to work seamlessly, we'd need to add a router.\n              // Or in this case we should build one as `recat-router` since\n              // everything is intentionally custom-built.\n              onClick: () => navigateToSession(session.session.attributes.id),\n            },\n            session.title()\n          ),\n          e('span', null, ` ${session.startTime()}`)\n        )\n      )\n    ),\n    appSelectors.recentSessions.length > 0\n      ? e(\n          'a',\n          { href: '#', onClick: handleClickClearPastSessions },\n          'Clear sessions'\n        )\n      : null\n  );\n};\n","import { e } from 'recat-core';\n\nimport { Screen } from '../types';\nimport { state } from '../state';\nimport { SessionsList } from './SessionsList';\n\nexport const IntroScreen = () => {\n  const navigateToNewSessionScreen = () => {\n    window.history.pushState({}, '', '#/sessions/new');\n    state.app.screen = Screen.NewSession;\n  };\n\n  return e(\n    'div',\n    { className: 'screen' },\n    e('button', { onClick: navigateToNewSessionScreen }, 'New Session'),\n    e(SessionsList)\n  );\n}\n","import { e } from 'recat-core';\n\nimport { NumberInput, BlindsButton, SuggestedCasino } from '../components';\nimport { state } from '../state';\nimport { appSelectors } from '../selectors';\nimport { Screen } from '../types';\nimport { Session } from '../models';\n\nexport const NewSessionScreen = () => {\n  const handleSelectSuggestedCasino = (casinoName: string) => {\n    state.app.newSessionScreen.casinoName = casinoName;\n  };\n\n  const navigateToShowSessionScreen = (session: Session) => {\n    window.history.pushState({}, '', `#/sessions/${session.id}`);\n    state.app.currentSessionId = session.id;\n    state.app.screen = Screen.ShowSession;\n  };\n\n  const handleSubmit = (event: Event) => {\n    event.preventDefault();\n\n    const session = Session.create(\n      state.app.newSessionScreen.casinoName,\n      parseInt(state.app.newSessionScreen.smallBlind),\n      parseInt(state.app.newSessionScreen.bigBlind),\n      parseInt(state.app.newSessionScreen.maxBuyin)\n    );\n\n    session.start();\n\n    navigateToShowSessionScreen(session);\n  };\n\n  return e(\n    'div',\n    { className: 'screen' },\n    e(SuggestedCasino, { onSelect: handleSelectSuggestedCasino }),\n    e(\n      'form',\n      { onSubmit: handleSubmit },\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Casino Name'),\n          e('input', {\n            type: 'text',\n            placeholder: appSelectors.mostFrequentCasinoName ?? 'Bellagio',\n            required: true,\n            value: state.app.newSessionScreen.casinoName,\n            onInput: (event) =>\n              (state.app.newSessionScreen.casinoName = (\n                event.target as HTMLInputElement\n              ).value),\n          })\n        )\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Blinds'),\n          e(NumberInput, {\n            placeholder: '2',\n            value: state.app.newSessionScreen.smallBlind,\n            max: 100,\n            onInput: (event) =>\n              (state.app.newSessionScreen.smallBlind = (\n                event.target as HTMLInputElement\n              ).value),\n          }),\n          e(NumberInput, {\n            placeholder: '5',\n            value: state.app.newSessionScreen.bigBlind,\n            max: 200,\n            onInput: (event) =>\n              (state.app.newSessionScreen.bigBlind = (\n                event.target as HTMLInputElement\n              ).value),\n          })\n        ),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 2 }),\n        e(BlindsButton, { smallBlind: 1, bigBlind: 3 }),\n        e(BlindsButton, { smallBlind: 2, bigBlind: 5 }),\n        e(BlindsButton, { smallBlind: 5, bigBlind: 10 })\n      ),\n      e(\n        'div',\n        null,\n        e(\n          'label',\n          null,\n          e('span', null, 'Max Buyin'),\n          e(NumberInput, {\n            placeholder: '500',\n            value: state.app.newSessionScreen.maxBuyin,\n            onInput: (event) =>\n              (state.app.newSessionScreen.maxBuyin = (\n                event.target as HTMLInputElement\n              ).value),\n          })\n        )\n      ),\n      e('div', null, e('input', { type: 'submit', value: 'Start Session' }))\n    )\n  );\n};\n","import { e, FunctionComponent } from 'recat-core';\n\ntype Props = {\n  placeholder?: string;\n  id?: string;\n  value?: string;\n  min?: number;\n  max?: number;\n  onInput?: (event: Event) => void;\n};\n\nexport const NumberInput: FunctionComponent<Props> = ({\n  id,\n  placeholder,\n  value,\n  min = 1,\n  max,\n  onInput,\n}) =>\n  e('input', {\n    id,\n    type: 'number',\n    placeholder,\n    pattern: '\\\\d*',\n    value,\n    min,\n    max,\n    required: true,\n    onInput,\n  });\n","import { Environments } from './types';\n\nconst getEnvironment = () => {\n  if (window.location.hostname === 'localhost') {\n    return Environments.Development;\n  } else {\n    return Environments.Production;\n  }\n};\n\nexport const environment = getEnvironment();\n","import { e, FunctionComponent } from 'recat-core';\n\nimport { NumberInput, TipsSection, Timer } from '../../components';\nimport { Session as SessionDecorator } from '../../decorators';\nimport { appSelectors } from '../../selectors';\nimport { Screen } from '../../types';\nimport { Api } from '../../services';\nimport { state } from '../../state';\nimport './styles.css';\n\nconst apiService = new Api();\n\nexport const ShowSessionScreen: FunctionComponent = () => {\n  if (!appSelectors.currentSession) {\n    return null;\n  }\n\n  const session = new SessionDecorator(appSelectors.currentSession);\n\n  const handleNotesInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.notes = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleCashoutAmountInput = (event: Event) => {\n    if (event.target) {\n      state.app.showSessionScreen.cashoutAmount = (<HTMLInputElement>(\n        event.target\n      )).value;\n    }\n  };\n\n  const handleSubmitRebuyForm = (event: Event) => {\n    event.preventDefault();\n\n    if (!appSelectors.currentSession) {\n      return;\n    }\n\n    appSelectors.currentSession.rebuy(\n      parseFloat(state.app.showSessionScreen.rebuyAmount)\n    );\n    state.app.showSessionScreen.rebuyAmount = '';\n  };\n\n  const navigateToIntroScreen = () => {\n    window.history.pushState({}, '', '#');\n    state.app.screen = Screen.Intro;\n  };\n\n  const saveToGoogleSheet = async () => {\n    if (!appSelectors.currentSession) {\n      return;\n    }\n\n    appSelectors.currentSession.end(\n      parseFloat(state.app.showSessionScreen.cashoutAmount),\n      state.app.showSessionScreen.notes\n    );\n\n    state.app.showSessionScreen.isSavingSession = true;\n\n    let response;\n\n    try {\n      response = await apiService.saveSession(\n        appSelectors.currentSession,\n        state.app.cachedAdminPassword ?? state.app.showSessionScreen.adminPassword\n      );\n    } finally {\n      state.app.showSessionScreen.isSavingSession = false;\n    }\n\n    if (response.ok) {\n      if (!state.app.cachedAdminPassword) {\n        state.app.cachedAdminPassword = state.app.showSessionScreen.adminPassword;\n      }\n\n      alert('Success!');\n      navigateToIntroScreen();\n    } else {\n      alert('Something went wrong.');\n\n      // TODO: Use changesets so we don't have to do this.\n      appSelectors.currentSession.undoEnd();\n    }\n  };\n\n  const handleSubmitEndSessionForm = (event: Event) => {\n    event.preventDefault();\n    saveToGoogleSheet();\n  };\n\n  return e(\n    'div',\n    { className: 'screen' },\n    e('h1', { className: 'session-title' }, session.title()),\n    e('div', null, e('span', null, `Profit: $${session.profit()}`)),\n    e('div', null, e('span', null, `Start time: ${session.startTime()}`)),\n    appSelectors.currentSession.startTime &&\n      e(\n        'div',\n        null,\n        e(\n          'span',\n          null,\n          'Time elapsed: ',\n          e(Timer, { startTime: appSelectors.currentSession.startTime })\n        )\n      ),\n\n    e(\n      'form',\n      { className: 'section', onSubmit: handleSubmitRebuyForm },\n      e(NumberInput, {\n        placeholder: appSelectors.currentSession.attributes.maxBuyin.toString(),\n        value: state.app.showSessionScreen.rebuyAmount,\n        onInput: (event) =>\n          (state.app.showSessionScreen.rebuyAmount = (\n            event.target as HTMLInputElement\n          ).value),\n      }),\n      e('input', { type: 'submit', value: 'Rebuy' }),\n      e('input', {\n        onClick: () => appSelectors.currentSession?.rebuyMax(),\n        type: 'button',\n        value: 'Max',\n      })\n    ),\n\n    e(TipsSection, {\n      type: 'dealer',\n      value: session.dealerTips(),\n      onUpdateTip: (change) =>\n        appSelectors.currentSession?.updateDealerTip(change),\n    }),\n    e(TipsSection, {\n      type: 'drink',\n      value: session.drinkTips(),\n      onUpdateTip: (change) =>\n        appSelectors.currentSession?.updateDrinkTip(change),\n    }),\n\n    e(\n      'form',\n      { className: 'section', onSubmit: handleSubmitEndSessionForm },\n      e('input', {\n        className: 'hidden',\n        type: 'text',\n        autocomplete: 'username',\n      }),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Notes'),\n        e('textarea', {\n          onInput: handleNotesInput,\n        })\n      ),\n\n      e(\n        'label',\n        { className: 'section' },\n        e('div', null, 'Cashout Amount'),\n        e(NumberInput, {\n          min: 0,\n          value: state.app.showSessionScreen.cashoutAmount,\n          placeholder: (\n            appSelectors.currentSession.attributes.maxBuyin * 3\n          ).toString(),\n          onInput: handleCashoutAmountInput,\n        })\n      ),\n\n      state.app.cachedAdminPassword\n        ? ''\n        : e(\n            'div',\n            null,\n            e('label', null, e('span', null, 'Password')),\n            e('input', {\n              type: 'password',\n              autocomplete: 'current-password',\n              required: true,\n              onInput: (event) =>\n                (state.app.showSessionScreen.adminPassword = (\n                  event.target as HTMLInputElement\n                ).value),\n            })\n          ),\n\n      e('input', {\n        type: 'submit',\n        value: 'End Session',\n        disabled: state.app.showSessionScreen.isSavingSession,\n      })\n    )\n  );\n};\n","import { Environments } from '../types';\nimport { Session } from '../models';\nimport { environment } from '../constants';\n\nexport class Api {\n  origin() {\n    if (environment === Environments.Development) {\n      return 'http://localhost:3000';\n    } else {\n      return 'https://blackjack-trainer-api.herokuapp.com';\n    }\n  }\n\n  request(path: string, body: unknown, requestOptions: RequestInit) {\n    const url = `${this.origin()}/api/v1${path}`;\n\n    return window.fetch(url, {\n      method: requestOptions.method,\n      headers: {\n        ...requestOptions.headers,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    });\n  }\n\n  post(path: string, body: unknown, requestOptions: RequestInit) {\n    return this.request(path, body, { method: 'POST', ...requestOptions });\n  }\n\n  saveSession(session: Session, adminPassword: string) {\n    return this.post(\n      '/poker_sessions',\n      {\n        data: {\n          type: 'poker_session',\n          attributes: session.attributes,\n        },\n      },\n      {\n        headers: {\n          'Poker-Sessions-Admin-Password': adminPassword,\n        },\n      }\n    );\n  }\n}\n","import { e, FunctionComponent } from 'recat-core';\n\nimport { capitalize } from '../../utils';\nimport './styles.css';\n\ntype Props = {\n  type: 'dealer' | 'drink';\n  value: string;\n  onUpdateTip: (tipChange: number) => void;\n};\n\nexport const TipsSection: FunctionComponent<Props> = ({\n  type,\n  value,\n  onUpdateTip,\n}) =>\n  e(\n    'div',\n    { className: 'section' },\n    e('span', null, `${capitalize(type)} tips: ${value}`),\n    e(\n      'div',\n      null,\n      e(\n        'button',\n        { className: 'tip-button', onClick: () => onUpdateTip(-1) },\n        '-'\n      ),\n      e(\n        'button',\n        { className: 'tip-button', onClick: () => onUpdateTip(1) },\n        '+'\n      )\n    )\n  );\n","import { e, FunctionComponent } from 'recat-core';\nimport { appSelectors } from '../selectors';\n\ntype Props = {\n  onSelect: (casinoName: string) => void;\n};\n\nexport const SuggestedCasino: FunctionComponent<Props> = ({ onSelect }) => {\n  const casinoName = appSelectors.mostFrequentCasinoName;\n  if (!casinoName) {\n    return null;\n  }\n\n  return e(\n    'div',\n    null,\n    `Play at ${casinoName} again?`,\n    e('button', { onClick: () => onSelect(casinoName) }, 'OK')\n  );\n};\n","import { e, useState, useEffect, FunctionComponent } from 'recat-core';\nimport { formatDuration } from '../utils';\n\ntype Props = {\n  startTime: Date;\n};\n\nconst MILLISECONDS_IN_ONE_SECOND = 1000;\n\nexport const Timer: FunctionComponent<Props> = ({ startTime }) => {\n  const [timeElaped, setTimeElapsed] = useState('');\n\n  useEffect(() => {\n    const updateTimeElapsed = () => {\n      setTimeElapsed(formatDuration(Date.now() - startTime.getTime()));\n    };\n\n    setInterval(updateTimeElapsed, MILLISECONDS_IN_ONE_SECOND);\n    updateTimeElapsed();\n  }, []);\n\n  return e('span', null, timeElaped.toString());\n};\n","import { e, useEffect, useState } from 'recat-core';\nimport './styles.css';\n\nconst MILLISECONDS_IN_ONE_SECOND = 1000;\n\nexport const AppFooter = () => {\n  const [footerHidden, setFooterHidden] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFooterHidden(true);\n    }, 3 * MILLISECONDS_IN_ONE_SECOND);\n  }, []);\n\n  return e(\n    'div',\n    {\n      className: `app-footer ${footerHidden ? 'app-footer--invisible' : ''}`,\n    },\n    'Powered by ',\n    e(\n      'a',\n      {\n        href: 'https://github.com/mhluska/recat',\n        target: '_blank',\n        rel: 'noopener noreferrer',\n      },\n      'recat'\n    )\n  );\n};\n","import { App } from './components';\nimport { render, e } from 'recat-core';\nimport { setupAppState } from './state';\nimport { saveToLocalStorage } from './state';\n\nconst SAVE_APP_STATE_INTERVAL_MS = 10 * 1000;\nconst ROOT_ID = 'root';\nconst appRoot = document.getElementById(ROOT_ID);\n\nif (!appRoot) {\n  throw new Error(`Missing root element with ID ${ROOT_ID}`);\n}\n\nsetupAppState(() => render(e(App), appRoot));\n\n// HACK: onbeforeunload doesn't seem to work on iOS so we save periodically.\nsetInterval(saveToLocalStorage, SAVE_APP_STATE_INTERVAL_MS);\ndocument.addEventListener('visibilitychange', saveToLocalStorage);\n\nwindow.onbeforeunload = saveToLocalStorage;\n"],"names":["$db5593158af56fb2$var$$faefaad95e5fcca0$export$2ed9472effad1b70","$faefaad95e5fcca0$export$2ed9472effad1b70","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$ed97f33186d4b816","Object","keys","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$1f142f2b4209d4fb","virtualElement","type","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$c3bf1ddc270d7633","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$8e6ee0da8e48457","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$ccbedd67ef6e9417","node","nodeType","Text","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$5542201de9311ab2","newNode","parentElement","replaceChild","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$13970129ca912f06","appendChild","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$86b68c7dbeb53c22","referenceNode","parentNode","$9ba0f9a5c47c04f2$export$86b68c7dbeb53c22","$db5593158af56fb2$var$$a8eda090f2a27456$var$currentComponent","$db5593158af56fb2$var$$a8eda090f2a27456$var$currentForceRender","$db5593158af56fb2$var$$a8eda090f2a27456$var$hooks","useStateCallCount","useState","Map","useEffect","$db5593158af56fb2$var$$a8eda090f2a27456$export$6d9c69b0de29b591","callback","dependencies","componentEffects","get","push","unmountCallback","undefined","set","$db5593158af56fb2$var$$a8eda090f2a27456$export$60241385465d0a34","initialValue","componentHookCalls","hook1","value","hook","requestIdleCallback","$db5593158af56fb2$var$$a8eda090f2a27456$export$1f54128a3b72f976","forceRender","prevEffects","delete","result","props","currentUseEffectCalls","length","forEach","nextEffect","index","prevEffect","arr1","arr2","i","$db5593158af56fb2$var$$9ba0f9a5c47c04f2$export$234180f8206db11b","$db5593158af56fb2$var$$de1f0c81d0bd7057$export$a4d8dbbf1b4206a6","window","options","setTimeout","$db5593158af56fb2$var$$de1f0c81d0bd7057$export$3ed58cadf6a78866","$db5593158af56fb2$var$$6282e142bf746237$var$ElementProperties","ElementProperties","$db5593158af56fb2$var$$6282e142bf746237$var$ELEMENT_PROPERTIES","Set","values","$db5593158af56fb2$var$$6282e142bf746237$var$EVENT_PROPS","$db5593158af56fb2$var$$6282e142bf746237$export$c8a8987d4410bf2d","children","tagName","map","child","$db5593158af56fb2$var$$6282e142bf746237$export$f1e1789686576879","$db5593158af56fb2$var$$6282e142bf746237$var$reconcileEventHandlerProps","domNode","nativeEventName","prevValue","newValue","removeEventListener","addEventListener","$db5593158af56fb2$var$$6282e142bf746237$var$reconcileProps","prevNode","prevPropKeys","newPropKeys","name","concat","has","setAttribute","removeAttribute","String","$db5593158af56fb2$var$$6282e142bf746237$var$createDomNode","$db5593158af56fb2$var$$6282e142bf746237$var$appDocument","createTextNode","$db5593158af56fb2$var$$6282e142bf746237$var$forceRender","element","createElement","childDomElement","$db5593158af56fb2$var$$6282e142bf746237$var$reconcileStrings","Element","replaceData","$db5593158af56fb2$var$$6282e142bf746237$export$38319cad1f6d89e0","$db5593158af56fb2$var$$a8eda090f2a27456$export$5dbc7eba4ac92ab9","domNodeChildren","Array","from","childNodes","filter","maxChildren","Math","max","domIndex","domNodeChild","prevNodeChild","newNodeChild","prevExists","newExists","remove","$db5593158af56fb2$var$$6282e142bf746237$var$prevVirtualElement","$db5593158af56fb2$var$$6282e142bf746237$var$polyfilled","$db5593158af56fb2$var$$6282e142bf746237$export$b3890eb0ae9dca99","component","appRoot","ownerDocument","defaultView","$25746eb61037a613$export$56edef3a554a6277","$25746eb61037a613$export$a98515d67472a41f","$799ee1075ebfd49a$var$sessionIdToScreen","sessionId","NewSession","ShowSession","Intro","$799ee1075ebfd49a$export$ca000e230c0caa3e","app","stateItem","localStorage","getItem","JSON","parse","sessionPath","location","hash","match","$799ee1075ebfd49a$var$locationToSessionId","screen","sessions","currentSessionId","showSessionScreen","rebuyAmount","notes","cashoutAmount","adminPassword","isSavingSession","newSessionScreen","casinoName","smallBlind","bigBlind","maxBuyin","$799ee1075ebfd49a$var$loadAppState","$799ee1075ebfd49a$export$1b8cd2d0ef9a8e5d","setItem","stringify","cachedAdminPassword","$fcc661d976b96bef$export$86fbec116b87613f","Screen","$bfeb9d294d2ffc5c$export$327f2520b4698e84","$743ad4309d0f81b7$export$4f569ff5903d61c2","$6954f41138f4c86d$export$596affaadba118e1","Error","$fcc661d976b96bef$var$selectScreen","$db5593158af56fb2$exports","e","className","$d43a49e3aba5cc9b$export$942d66ac691266d5","$9ceabd904cf08d06$export$d7c54a71f8909529","onClick","toString","$df5bef30413a053b$export$dfaaa8705752128f","date","tzo","getTimezoneOffset","dif","pad","num","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","floor","abs","$959c11b99bd453e0$export$1fb4852a55678982","static","id","Date","now","random","substring","dealerTips","drinkTips","buyins","this","constructor","attributes","startTime","endTime","start","amount","time","rebuy","toISOString","rebuyMax","end","undoEnd","buyinsTotal","reduce","prev","current","updateTip","change","updateDealerTip","updateDrinkTip","$e7e206ea4712806d$export$1fb4852a55678982","session","blinds","title","join","toLocaleString","profit","$564d17351e22afa3$export$e1252723db1c541","appState","currentSession","recentSessions","sort","a","b","attrs","mostFrequentCasinoName","$bef23123005e99d4$export$18850642a4eaef89","href","navigateToSession","event","preventDefault","history","pushState","$2b416257742c2bf1$export$eb1a1d9ee2289a71","onSelect","onSubmit","create","parseInt","navigateToShowSessionScreen","placeholder","required","onInput","target","$7a7cb71cad4059ea$export$6bf0cd3a219bbade","min","pattern","$9ecda7333d28e490$export$6bc7b24d4e862158","hostname","Development","Production","$6954f41138f4c86d$var$apiService","origin","request","path","body","requestOptions","url","fetch","method","headers","post","saveSession","data","saveToGoogleSheet","async","response","parseFloat","ok","alert","$e17aeff11cabeb07$export$c57e9b2d8b9e4de","$12daf2ba5263d8ff$export$1e4a816d3f9032b4","onUpdateTip","autocomplete","disabled","str","toUpperCase","slice","timeElaped","setTimeElapsed","updateTimeElapsed","ms","seconds","hours","minutes","round","$df5bef30413a053b$export$bc733b0c5cbb3e8a","getTime","setInterval","footerHidden","setFooterHidden","rel","$b4e14b6b8da86996$var$appRoot","document","getElementById","onStateChange","render","Proxy","key","receiver","Reflect","success","onbeforeunload"],"version":3,"file":"index.3030ba15.js.map"}